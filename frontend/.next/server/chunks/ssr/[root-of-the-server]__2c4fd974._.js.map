{"version":3,"sources":["turbopack:///[project]/node_modules/next/dist/compiled/gzip-size/index.js","turbopack:///[project]/node_modules/next/src/shared/lib/bloom-filter.ts","turbopack:///[project]/node_modules/next/src/shared/lib/router/utils/remove-trailing-slash.ts","turbopack:///[project]/node_modules/next/src/shared/lib/router/utils/get-asset-path-from-route.ts","turbopack:///[project]/node_modules/next/src/client/trusted-types.ts","turbopack:///[project]/node_modules/next/src/client/request-idle-callback.ts","turbopack:///[project]/node_modules/next/src/build/deployment-id.ts","turbopack:///[project]/node_modules/next/src/client/route-loader.ts","turbopack:///[project]/node_modules/next/src/client/set-attributes-from-props.ts","turbopack:///[project]/node_modules/next/src/client/script.tsx","turbopack:///[project]/node_modules/next/src/shared/lib/i18n/normalize-locale-path.ts","turbopack:///[project]/node_modules/next/src/shared/lib/mitt.ts","turbopack:///[project]/node_modules/next/src/shared/lib/router/utils/querystring.ts","turbopack:///[project]/node_modules/next/src/shared/lib/router/utils/parse-relative-url.ts","turbopack:///[project]/node_modules/next/dist/compiled/path-to-regexp/index.js","turbopack:///[project]/node_modules/next/src/lib/route-pattern-normalizer.ts","turbopack:///[project]/node_modules/next/src/shared/lib/router/utils/route-match-utils.ts","turbopack:///[project]/node_modules/next/src/shared/lib/router/utils/route-matcher.ts","turbopack:///[project]/node_modules/next/src/lib/constants.ts","turbopack:///[project]/node_modules/next/src/shared/lib/escape-regexp.ts","turbopack:///[project]/node_modules/next/src/shared/lib/invariant-error.ts","turbopack:///[project]/node_modules/next/src/shared/lib/router/utils/parse-loader-tree.ts","turbopack:///[project]/node_modules/next/src/shared/lib/router/utils/get-segment-param.tsx","turbopack:///[project]/node_modules/next/src/shared/lib/router/utils/get-dynamic-param.ts","turbopack:///[project]/node_modules/next/src/shared/lib/router/utils/route-regex.ts","turbopack:///[project]/node_modules/next/src/shared/lib/router/utils/format-url.ts","turbopack:///[project]/node_modules/next/src/client/detect-domain-locale.ts","turbopack:///[project]/node_modules/next/src/shared/lib/router/utils/parse-path.ts","turbopack:///[project]/node_modules/next/src/client/normalize-trailing-slash.ts","turbopack:///[project]/node_modules/next/src/client/add-locale.ts","turbopack:///[project]/node_modules/next/src/client/remove-locale.ts","turbopack:///[project]/node_modules/next/src/shared/lib/router/utils/path-has-prefix.ts","turbopack:///[project]/node_modules/next/src/client/has-base-path.ts","turbopack:///[project]/node_modules/next/src/client/remove-base-path.ts","turbopack:///[project]/node_modules/next/src/shared/lib/router/utils/add-path-prefix.ts","turbopack:///[project]/node_modules/next/src/client/add-base-path.ts","turbopack:///[project]/node_modules/next/src/shared/lib/router/utils/omit.ts","turbopack:///[project]/node_modules/next/src/shared/lib/router/utils/is-local-url.ts","turbopack:///[project]/node_modules/next/src/shared/lib/router/utils/interpolate-as.ts","turbopack:///[project]/node_modules/next/src/client/resolve-href.ts","turbopack:///[project]/node_modules/next/src/lib/is-api-route.ts","turbopack:///[project]/node_modules/next/src/shared/lib/router/utils/remove-path-prefix.ts","turbopack:///[project]/node_modules/next/src/shared/lib/router/utils/get-next-pathname-info.ts","turbopack:///[project]/node_modules/next/src/shared/lib/router/utils/add-path-suffix.ts","turbopack:///[project]/node_modules/next/src/shared/lib/router/utils/add-locale.ts","turbopack:///[project]/node_modules/next/src/shared/lib/router/utils/format-next-pathname-info.ts","turbopack:///[project]/node_modules/next/src/shared/lib/router/utils/compare-states.ts","turbopack:///[project]/node_modules/next/src/shared/lib/router/utils/html-bots.ts","turbopack:///[project]/node_modules/next/src/shared/lib/router/utils/is-bot.ts","turbopack:///[project]/node_modules/next/src/shared/lib/router/utils/disable-smooth-scroll.ts","turbopack:///[project]/node_modules/next/src/shared/lib/router/router.ts","turbopack:///[project]/node_modules/next/src/server/route-modules/pages/vendored/contexts/router-context.ts","turbopack:///[project]/node_modules/next/src/client/with-router.tsx","turbopack:///[project]/node_modules/next/src/client/router.ts","turbopack:///[project]/node_modules/next/router.js"],"sourcesContent":["(()=>{var e={154:(e,r,t)=>{var n=t(781);var o=[\"write\",\"end\",\"destroy\"];var i=[\"resume\",\"pause\"];var s=[\"data\",\"close\"];var c=Array.prototype.slice;e.exports=duplex;function forEach(e,r){if(e.forEach){return e.forEach(r)}for(var t=0;t<e.length;t++){r(e[t],t)}}function duplex(e,r){var t=new n;var a=false;forEach(o,proxyWriter);forEach(i,proxyReader);forEach(s,proxyStream);r.on(\"end\",handleEnd);e.on(\"drain\",(function(){t.emit(\"drain\")}));e.on(\"error\",reemit);r.on(\"error\",reemit);t.writable=e.writable;t.readable=r.readable;return t;function proxyWriter(r){t[r]=method;function method(){return e[r].apply(e,arguments)}}function proxyReader(e){t[e]=method;function method(){t.emit(e);var n=r[e];if(n){return n.apply(r,arguments)}r.emit(e)}}function proxyStream(e){r.on(e,reemit);function reemit(){var r=c.call(arguments);r.unshift(e);t.emit.apply(t,r)}}function handleEnd(){if(a){return}a=true;var e=c.call(arguments);e.unshift(\"end\");t.emit.apply(t,e)}function reemit(e){t.emit(\"error\",e)}}},349:(e,r,t)=>{\"use strict\";const n=t(147);const o=t(781);const i=t(796);const s=t(154);const c=t(530);const getOptions=e=>Object.assign({level:9},e);e.exports=(e,r)=>{if(!e){return Promise.resolve(0)}return c(i.gzip)(e,getOptions(r)).then((e=>e.length)).catch((e=>0))};e.exports.sync=(e,r)=>i.gzipSync(e,getOptions(r)).length;e.exports.stream=e=>{const r=new o.PassThrough;const t=new o.PassThrough;const n=s(r,t);let c=0;const a=i.createGzip(getOptions(e)).on(\"data\",(e=>{c+=e.length})).on(\"error\",(()=>{n.gzipSize=0})).on(\"end\",(()=>{n.gzipSize=c;n.emit(\"gzip-size\",c);t.end()}));r.pipe(a);r.pipe(t,{end:false});return n};e.exports.file=(r,t)=>new Promise(((o,i)=>{const s=n.createReadStream(r);s.on(\"error\",i);const c=s.pipe(e.exports.stream(t));c.on(\"error\",i);c.on(\"gzip-size\",o)}));e.exports.fileSync=(r,t)=>e.exports.sync(n.readFileSync(r),t)},530:e=>{\"use strict\";const processFn=(e,r)=>function(...t){const n=r.promiseModule;return new n(((n,o)=>{if(r.multiArgs){t.push(((...e)=>{if(r.errorFirst){if(e[0]){o(e)}else{e.shift();n(e)}}else{n(e)}}))}else if(r.errorFirst){t.push(((e,r)=>{if(e){o(e)}else{n(r)}}))}else{t.push(n)}e.apply(this,t)}))};e.exports=(e,r)=>{r=Object.assign({exclude:[/.+(Sync|Stream)$/],errorFirst:true,promiseModule:Promise},r);const t=typeof e;if(!(e!==null&&(t===\"object\"||t===\"function\"))){throw new TypeError(`Expected \\`input\\` to be a \\`Function\\` or \\`Object\\`, got \\`${e===null?\"null\":t}\\``)}const filter=e=>{const match=r=>typeof r===\"string\"?e===r:r.test(e);return r.include?r.include.some(match):!r.exclude.some(match)};let n;if(t===\"function\"){n=function(...t){return r.excludeMain?e(...t):processFn(e,r).apply(this,t)}}else{n=Object.create(Object.getPrototypeOf(e))}for(const t in e){const o=e[t];n[t]=typeof o===\"function\"&&filter(t)?processFn(o,r):o}return n}},147:e=>{\"use strict\";e.exports=require(\"fs\")},781:e=>{\"use strict\";e.exports=require(\"stream\")},796:e=>{\"use strict\";e.exports=require(\"zlib\")}};var r={};function __nccwpck_require__(t){var n=r[t];if(n!==undefined){return n.exports}var o=r[t]={exports:{}};var i=true;try{e[t](o,o.exports,__nccwpck_require__);i=false}finally{if(i)delete r[t]}return o.exports}if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var t=__nccwpck_require__(349);module.exports=t})();","// minimal implementation MurmurHash2 hash function\nfunction murmurhash2(str: string) {\n  let h = 0\n  for (let i = 0; i < str.length; i++) {\n    const c = str.charCodeAt(i)\n    h = Math.imul(h ^ c, 0x5bd1e995)\n    h ^= h >>> 13\n    h = Math.imul(h, 0x5bd1e995)\n  }\n  return h >>> 0\n}\n\n// default to 0.01% error rate as the filter compresses very well\nconst DEFAULT_ERROR_RATE = 0.0001\n\nexport class BloomFilter {\n  numItems: number\n  errorRate: number\n  numBits: number\n  numHashes: number\n  bitArray: number[]\n\n  constructor(numItems: number, errorRate: number = DEFAULT_ERROR_RATE) {\n    this.numItems = numItems\n    this.errorRate = errorRate\n    this.numBits = Math.ceil(\n      -(numItems * Math.log(errorRate)) / (Math.log(2) * Math.log(2))\n    )\n    this.numHashes = Math.ceil((this.numBits / numItems) * Math.log(2))\n    this.bitArray = new Array(this.numBits).fill(0)\n  }\n\n  static from(items: string[], errorRate = DEFAULT_ERROR_RATE) {\n    const filter = new BloomFilter(items.length, errorRate)\n\n    for (const item of items) {\n      filter.add(item)\n    }\n    return filter\n  }\n\n  export() {\n    const data = {\n      numItems: this.numItems,\n      errorRate: this.errorRate,\n      numBits: this.numBits,\n      numHashes: this.numHashes,\n      bitArray: this.bitArray,\n    }\n\n    if (process.env.NEXT_RUNTIME === 'nodejs') {\n      if (this.errorRate < DEFAULT_ERROR_RATE) {\n        const filterData = JSON.stringify(data)\n        const gzipSize = (\n          require('next/dist/compiled/gzip-size') as typeof import('next/dist/compiled/gzip-size')\n        ).sync(filterData)\n\n        if (gzipSize > 1024) {\n          console.warn(\n            `Creating filter with error rate less than 0.1% (0.001) can increase the size dramatically proceed with caution. Received error rate ${this.errorRate} resulted in size ${filterData.length} bytes, ${gzipSize} bytes (gzip)`\n          )\n        }\n      }\n    }\n\n    return data\n  }\n\n  import(data: ReturnType<(typeof this)['export']>) {\n    this.numItems = data.numItems\n    this.errorRate = data.errorRate\n    this.numBits = data.numBits\n    this.numHashes = data.numHashes\n    this.bitArray = data.bitArray\n  }\n\n  add(item: string) {\n    const hashValues = this.getHashValues(item)\n    hashValues.forEach((hash) => {\n      this.bitArray[hash] = 1\n    })\n  }\n\n  contains(item: string) {\n    const hashValues = this.getHashValues(item)\n    return hashValues.every((hash) => this.bitArray[hash])\n  }\n\n  getHashValues(item: string) {\n    const hashValues = []\n    for (let i = 1; i <= this.numHashes; i++) {\n      const hash = murmurhash2(`${item}${i}`) % this.numBits\n      hashValues.push(hash)\n    }\n    return hashValues\n  }\n}\n","/**\n * Removes the trailing slash for a given route or page path. Preserves the\n * root page. Examples:\n *   - `/foo/bar/` -> `/foo/bar`\n *   - `/foo/bar` -> `/foo/bar`\n *   - `/` -> `/`\n */\nexport function removeTrailingSlash(route: string) {\n  return route.replace(/\\/$/, '') || '/'\n}\n","// Translates a logical route into its pages asset path (relative from a common prefix)\n// \"asset path\" being its javascript file, data file, prerendered html,...\nexport default function getAssetPathFromRoute(\n  route: string,\n  ext: string = ''\n): string {\n  const path =\n    route === '/'\n      ? '/index'\n      : /^\\/index(\\/|$)/.test(route)\n        ? `/index${route}`\n        : route\n  return path + ext\n}\n","/**\n * Stores the Trusted Types Policy. Starts as undefined and can be set to null\n * if Trusted Types is not supported in the browser.\n */\nlet policy: TrustedTypePolicy | null | undefined\n\n/**\n * Getter for the Trusted Types Policy. If it is undefined, it is instantiated\n * here or set to null if Trusted Types is not supported in the browser.\n */\nfunction getPolicy() {\n  if (typeof policy === 'undefined' && typeof window !== 'undefined') {\n    policy =\n      window.trustedTypes?.createPolicy('nextjs', {\n        createHTML: (input) => input,\n        createScript: (input) => input,\n        createScriptURL: (input) => input,\n      }) || null\n  }\n\n  return policy\n}\n\n/**\n * Unsafely promote a string to a TrustedScriptURL, falling back to strings\n * when Trusted Types are not available.\n * This is a security-sensitive function; any use of this function\n * must go through security review. In particular, it must be assured that the\n * provided string will never cause an XSS vulnerability if used in a context\n * that will cause a browser to load and execute a resource, e.g. when\n * assigning to script.src.\n */\nexport function __unsafeCreateTrustedScriptURL(\n  url: string\n): TrustedScriptURL | string {\n  return getPolicy()?.createScriptURL(url) || url\n}\n","export const requestIdleCallback =\n  (typeof self !== 'undefined' &&\n    self.requestIdleCallback &&\n    self.requestIdleCallback.bind(window)) ||\n  function (cb: IdleRequestCallback): number {\n    let start = Date.now()\n    return self.setTimeout(function () {\n      cb({\n        didTimeout: false,\n        timeRemaining: function () {\n          return Math.max(0, 50 - (Date.now() - start))\n        },\n      })\n    }, 1)\n  }\n\nexport const cancelIdleCallback =\n  (typeof self !== 'undefined' &&\n    self.cancelIdleCallback &&\n    self.cancelIdleCallback.bind(window)) ||\n  function (id: number) {\n    return clearTimeout(id)\n  }\n","export function getDeploymentIdQueryOrEmptyString(): string {\n  if (process.env.NEXT_DEPLOYMENT_ID) {\n    return `?dpl=${process.env.NEXT_DEPLOYMENT_ID}`\n  }\n  return ''\n}\n","import type { ComponentType } from 'react'\nimport type { ProxyMatcher } from '../build/analysis/get-page-static-info'\nimport getAssetPathFromRoute from '../shared/lib/router/utils/get-asset-path-from-route'\nimport { __unsafeCreateTrustedScriptURL } from './trusted-types'\nimport { requestIdleCallback } from './request-idle-callback'\nimport { getDeploymentIdQueryOrEmptyString } from '../build/deployment-id'\nimport { encodeURIPath } from '../shared/lib/encode-uri-path'\n\n// 3.8s was arbitrarily chosen as it's what https://web.dev/interactive\n// considers as \"Good\" time-to-interactive. We must assume something went\n// wrong beyond this point, and then fall-back to a full page transition to\n// show the user something of value.\nconst MS_MAX_IDLE_DELAY = 3800\n\ndeclare global {\n  interface Window {\n    __BUILD_MANIFEST?: Record<string, string[]>\n    __BUILD_MANIFEST_CB?: Function\n    __MIDDLEWARE_MATCHERS?: ProxyMatcher[]\n    __MIDDLEWARE_MANIFEST_CB?: Function\n    __REACT_LOADABLE_MANIFEST?: any\n    __DYNAMIC_CSS_MANIFEST?: any\n    __RSC_MANIFEST?: any\n    __RSC_SERVER_MANIFEST?: any\n    __NEXT_FONT_MANIFEST?: any\n    __SUBRESOURCE_INTEGRITY_MANIFEST?: string\n    __INTERCEPTION_ROUTE_REWRITE_MANIFEST?: string\n  }\n}\n\ninterface LoadedEntrypointSuccess {\n  component: ComponentType\n  exports: any\n}\ninterface LoadedEntrypointFailure {\n  error: unknown\n}\ntype RouteEntrypoint = LoadedEntrypointSuccess | LoadedEntrypointFailure\n\ninterface RouteStyleSheet {\n  href: string\n  content: string\n}\n\ninterface LoadedRouteSuccess extends LoadedEntrypointSuccess {\n  styles: RouteStyleSheet[]\n}\ninterface LoadedRouteFailure {\n  error: unknown\n}\ntype RouteLoaderEntry = LoadedRouteSuccess | LoadedRouteFailure\n\ninterface Future<V> {\n  resolve: (entrypoint: V) => void\n  future: Promise<V>\n}\nfunction withFuture<T extends object>(\n  key: string,\n  map: Map<string, Future<T> | T>,\n  generator?: () => Promise<T>\n): Promise<T> {\n  let entry = map.get(key)\n  if (entry) {\n    if ('future' in entry) {\n      return entry.future\n    }\n    return Promise.resolve(entry)\n  }\n  let resolver: (entrypoint: T) => void\n  const prom: Promise<T> = new Promise<T>((resolve) => {\n    resolver = resolve\n  })\n  map.set(key, { resolve: resolver!, future: prom })\n  return generator\n    ? generator()\n        .then((value) => {\n          resolver(value)\n          return value\n        })\n        .catch((err) => {\n          map.delete(key)\n          throw err\n        })\n    : prom\n}\n\nexport interface RouteLoader {\n  whenEntrypoint(route: string): Promise<RouteEntrypoint>\n  onEntrypoint(route: string, execute: () => unknown): void\n  loadRoute(route: string, prefetch?: boolean): Promise<RouteLoaderEntry>\n  prefetch(route: string): Promise<void>\n}\n\nconst ASSET_LOAD_ERROR = Symbol('ASSET_LOAD_ERROR')\n// TODO: unexport\nexport function markAssetError(err: Error): Error {\n  return Object.defineProperty(err, ASSET_LOAD_ERROR, {})\n}\n\nexport function isAssetError(err?: Error): boolean | undefined {\n  return err && ASSET_LOAD_ERROR in err\n}\n\nfunction hasPrefetch(link?: HTMLLinkElement): boolean {\n  try {\n    link = document.createElement('link')\n    return (\n      // detect IE11 since it supports prefetch but isn't detected\n      // with relList.support\n      (!!window.MSInputMethodContext && !!(document as any).documentMode) ||\n      link.relList.supports('prefetch')\n    )\n  } catch {\n    return false\n  }\n}\n\nconst canPrefetch: boolean = hasPrefetch()\n\nconst getAssetQueryString = () => {\n  return getDeploymentIdQueryOrEmptyString()\n}\n\nfunction prefetchViaDom(\n  href: string,\n  as: string,\n  link?: HTMLLinkElement\n): Promise<any> {\n  return new Promise<void>((resolve, reject) => {\n    const selector = `\n      link[rel=\"prefetch\"][href^=\"${href}\"],\n      link[rel=\"preload\"][href^=\"${href}\"],\n      script[src^=\"${href}\"]`\n    if (document.querySelector(selector)) {\n      return resolve()\n    }\n\n    link = document.createElement('link')\n\n    // The order of property assignment here is intentional:\n    if (as) link!.as = as\n    link!.rel = `prefetch`\n    link!.crossOrigin = process.env.__NEXT_CROSS_ORIGIN!\n    link!.onload = resolve as any\n    link!.onerror = () =>\n      reject(markAssetError(new Error(`Failed to prefetch: ${href}`)))\n\n    // `href` should always be last:\n    link!.href = href\n\n    document.head.appendChild(link)\n  })\n}\n\nfunction appendScript(\n  src: TrustedScriptURL | string,\n  script?: HTMLScriptElement\n): Promise<unknown> {\n  return new Promise((resolve, reject) => {\n    script = document.createElement('script')\n\n    // The order of property assignment here is intentional.\n    // 1. Setup success/failure hooks in case the browser synchronously\n    //    executes when `src` is set.\n    script.onload = resolve\n    script.onerror = () =>\n      reject(markAssetError(new Error(`Failed to load script: ${src}`)))\n\n    // 2. Configure the cross-origin attribute before setting `src` in case the\n    //    browser begins to fetch.\n    script.crossOrigin = process.env.__NEXT_CROSS_ORIGIN!\n\n    // 3. Finally, set the source and inject into the DOM in case the child\n    //    must be appended for fetching to start.\n    script.src = src as string\n    document.body.appendChild(script)\n  })\n}\n\n// We wait for pages to be built in dev before we start the route transition\n// timeout to prevent an un-necessary hard navigation in development.\nlet devBuildPromise: Promise<void> | undefined\n\n// Resolve a promise that times out after given amount of milliseconds.\nfunction resolvePromiseWithTimeout<T>(\n  p: Promise<T>,\n  ms: number,\n  err: Error\n): Promise<T> {\n  return new Promise((resolve, reject) => {\n    let cancelled = false\n\n    p.then((r) => {\n      // Resolved, cancel the timeout\n      cancelled = true\n      resolve(r)\n    }).catch(reject)\n\n    // We wrap these checks separately for better dead-code elimination in\n    // production bundles.\n    if (process.env.NODE_ENV === 'development') {\n      ;(devBuildPromise || Promise.resolve()).then(() => {\n        requestIdleCallback(() =>\n          setTimeout(() => {\n            if (!cancelled) {\n              reject(err)\n            }\n          }, ms)\n        )\n      })\n    }\n\n    if (process.env.NODE_ENV !== 'development') {\n      requestIdleCallback(() =>\n        setTimeout(() => {\n          if (!cancelled) {\n            reject(err)\n          }\n        }, ms)\n      )\n    }\n  })\n}\n\n// TODO: stop exporting or cache the failure\n// It'd be best to stop exporting this. It's an implementation detail. We're\n// only exporting it for backwards compatibility with the `page-loader`.\n// Only cache this response as a last resort if we cannot eliminate all other\n// code branches that use the Build Manifest Callback and push them through\n// the Route Loader interface.\nexport function getClientBuildManifest() {\n  if (self.__BUILD_MANIFEST) {\n    return Promise.resolve(self.__BUILD_MANIFEST)\n  }\n\n  const onBuildManifest = new Promise<Record<string, string[]>>((resolve) => {\n    // Mandatory because this is not concurrent safe:\n    const cb = self.__BUILD_MANIFEST_CB\n    self.__BUILD_MANIFEST_CB = () => {\n      resolve(self.__BUILD_MANIFEST!)\n      cb && cb()\n    }\n  })\n\n  return resolvePromiseWithTimeout(\n    onBuildManifest,\n    MS_MAX_IDLE_DELAY,\n    markAssetError(new Error('Failed to load client build manifest'))\n  )\n}\n\ninterface RouteFiles {\n  scripts: (TrustedScriptURL | string)[]\n  css: string[]\n}\nfunction getFilesForRoute(\n  assetPrefix: string,\n  route: string\n): Promise<RouteFiles> {\n  if (process.env.NODE_ENV === 'development') {\n    const scriptUrl =\n      assetPrefix +\n      '/_next/static/chunks/pages' +\n      encodeURIPath(getAssetPathFromRoute(route, '.js')) +\n      getAssetQueryString()\n    return Promise.resolve({\n      scripts: [__unsafeCreateTrustedScriptURL(scriptUrl)],\n      // Styles are handled by `style-loader` in development:\n      css: [],\n    })\n  }\n  return getClientBuildManifest().then((manifest) => {\n    if (!(route in manifest)) {\n      throw markAssetError(new Error(`Failed to lookup route: ${route}`))\n    }\n    const allFiles = manifest[route].map(\n      (entry) => assetPrefix + '/_next/' + encodeURIPath(entry)\n    )\n    return {\n      scripts: allFiles\n        .filter((v) => v.endsWith('.js'))\n        .map((v) => __unsafeCreateTrustedScriptURL(v) + getAssetQueryString()),\n      css: allFiles\n        .filter((v) => v.endsWith('.css'))\n        .map((v) => v + getAssetQueryString()),\n    }\n  })\n}\n\nexport function createRouteLoader(assetPrefix: string): RouteLoader {\n  const entrypoints: Map<string, Future<RouteEntrypoint> | RouteEntrypoint> =\n    new Map()\n  const loadedScripts: Map<string, Promise<unknown>> = new Map()\n  const styleSheets: Map<string, Promise<RouteStyleSheet>> = new Map()\n  const routes: Map<string, Future<RouteLoaderEntry> | RouteLoaderEntry> =\n    new Map()\n\n  function maybeExecuteScript(\n    src: TrustedScriptURL | string\n  ): Promise<unknown> {\n    // With HMR we might need to \"reload\" scripts when they are\n    // disposed and readded. Executing scripts twice has no functional\n    // differences\n    if (process.env.NODE_ENV !== 'development') {\n      let prom: Promise<unknown> | undefined = loadedScripts.get(src.toString())\n      if (prom) {\n        return prom\n      }\n\n      // Skip executing script if it's already in the DOM:\n      if (document.querySelector(`script[src^=\"${src}\"]`)) {\n        return Promise.resolve()\n      }\n\n      loadedScripts.set(src.toString(), (prom = appendScript(src)))\n      return prom\n    } else {\n      return appendScript(src)\n    }\n  }\n\n  function fetchStyleSheet(href: string): Promise<RouteStyleSheet> {\n    let prom: Promise<RouteStyleSheet> | undefined = styleSheets.get(href)\n    if (prom) {\n      return prom\n    }\n\n    styleSheets.set(\n      href,\n      (prom = fetch(href, { credentials: 'same-origin' })\n        .then((res) => {\n          if (!res.ok) {\n            throw new Error(`Failed to load stylesheet: ${href}`)\n          }\n          return res.text().then((text) => ({ href: href, content: text }))\n        })\n        .catch((err) => {\n          throw markAssetError(err)\n        }))\n    )\n    return prom\n  }\n\n  return {\n    whenEntrypoint(route: string) {\n      return withFuture(route, entrypoints)\n    },\n    onEntrypoint(route: string, execute: undefined | (() => unknown)) {\n      ;(execute\n        ? Promise.resolve()\n            .then(() => execute())\n            .then(\n              (exports: any) => ({\n                component: (exports && exports.default) || exports,\n                exports: exports,\n              }),\n              (err) => ({ error: err })\n            )\n        : Promise.resolve(undefined)\n      ).then((input: RouteEntrypoint | undefined) => {\n        const old = entrypoints.get(route)\n        if (old && 'resolve' in old) {\n          if (input) {\n            entrypoints.set(route, input)\n            old.resolve(input)\n          }\n        } else {\n          if (input) {\n            entrypoints.set(route, input)\n          } else {\n            entrypoints.delete(route)\n          }\n          // when this entrypoint has been resolved before\n          // the route is outdated and we want to invalidate\n          // this cache entry\n          routes.delete(route)\n        }\n      })\n    },\n    loadRoute(route: string, prefetch?: boolean) {\n      return withFuture<RouteLoaderEntry>(route, routes, () => {\n        let devBuildPromiseResolve: () => void\n\n        if (process.env.NODE_ENV === 'development') {\n          devBuildPromise = new Promise<void>((resolve) => {\n            devBuildPromiseResolve = resolve\n          })\n        }\n\n        return resolvePromiseWithTimeout(\n          getFilesForRoute(assetPrefix, route)\n            .then(({ scripts, css }) => {\n              return Promise.all([\n                entrypoints.has(route)\n                  ? []\n                  : Promise.all(scripts.map(maybeExecuteScript)),\n                Promise.all(css.map(fetchStyleSheet)),\n              ] as const)\n            })\n            .then((res) => {\n              return this.whenEntrypoint(route).then((entrypoint) => ({\n                entrypoint,\n                styles: res[1],\n              }))\n            }),\n          MS_MAX_IDLE_DELAY,\n          markAssetError(new Error(`Route did not complete loading: ${route}`))\n        )\n          .then(({ entrypoint, styles }) => {\n            const res: RouteLoaderEntry = Object.assign<\n              { styles: RouteStyleSheet[] },\n              RouteEntrypoint\n            >({ styles: styles! }, entrypoint)\n            return 'error' in entrypoint ? entrypoint : res\n          })\n          .catch((err) => {\n            if (prefetch) {\n              // we don't want to cache errors during prefetch\n              throw err\n            }\n            return { error: err }\n          })\n          .finally(() => devBuildPromiseResolve?.())\n      })\n    },\n    prefetch(route: string): Promise<void> {\n      // https://github.com/GoogleChromeLabs/quicklink/blob/453a661fa1fa940e2d2e044452398e38c67a98fb/src/index.mjs#L115-L118\n      // License: Apache 2.0\n      let cn\n      if ((cn = (navigator as any).connection)) {\n        // Don't prefetch if using 2G or if Save-Data is enabled.\n        if (cn.saveData || /2g/.test(cn.effectiveType)) return Promise.resolve()\n      }\n      return getFilesForRoute(assetPrefix, route)\n        .then((output) =>\n          Promise.all(\n            canPrefetch\n              ? output.scripts.map((script) =>\n                  prefetchViaDom(script.toString(), 'script')\n                )\n              : []\n          )\n        )\n        .then(() => {\n          requestIdleCallback(() => this.loadRoute(route, true).catch(() => {}))\n        })\n        .catch(\n          // swallow prefetch errors\n          () => {}\n        )\n    },\n  }\n}\n","const DOMAttributeNames: Record<string, string> = {\n  acceptCharset: 'accept-charset',\n  className: 'class',\n  htmlFor: 'for',\n  httpEquiv: 'http-equiv',\n  noModule: 'noModule',\n}\n\nconst ignoreProps = [\n  'onLoad',\n  'onReady',\n  'dangerouslySetInnerHTML',\n  'children',\n  'onError',\n  'strategy',\n  'stylesheets',\n]\n\nfunction isBooleanScriptAttribute(\n  attr: string\n): attr is 'async' | 'defer' | 'noModule' {\n  return ['async', 'defer', 'noModule'].includes(attr)\n}\n\nexport function setAttributesFromProps(el: HTMLElement, props: object) {\n  for (const [p, value] of Object.entries(props)) {\n    if (!props.hasOwnProperty(p)) continue\n    if (ignoreProps.includes(p)) continue\n\n    // we don't render undefined props to the DOM\n    if (value === undefined) {\n      continue\n    }\n\n    const attr = DOMAttributeNames[p] || p.toLowerCase()\n\n    if (el.tagName === 'SCRIPT' && isBooleanScriptAttribute(attr)) {\n      // Correctly assign boolean script attributes\n      // https://github.com/vercel/next.js/pull/20748\n      ;(el as HTMLScriptElement)[attr] = !!value\n    } else {\n      el.setAttribute(attr, String(value))\n    }\n\n    // Remove falsy non-zero boolean attributes so they are correctly interpreted\n    // (e.g. if we set them to false, this coerces to the string \"false\", which the browser interprets as true)\n    if (\n      value === false ||\n      (el.tagName === 'SCRIPT' &&\n        isBooleanScriptAttribute(attr) &&\n        (!value || value === 'false'))\n    ) {\n      // Call setAttribute before, as we need to set and unset the attribute to override force async:\n      // https://html.spec.whatwg.org/multipage/scripting.html#script-force-async\n      el.setAttribute(attr, '')\n      el.removeAttribute(attr)\n    }\n  }\n}\n","'use client'\n\nimport ReactDOM from 'react-dom'\nimport React, { useEffect, useContext, useRef, type JSX } from 'react'\nimport type { ScriptHTMLAttributes } from 'react'\nimport { HeadManagerContext } from '../shared/lib/head-manager-context.shared-runtime'\nimport { setAttributesFromProps } from './set-attributes-from-props'\nimport { requestIdleCallback } from './request-idle-callback'\n\nconst ScriptCache = new Map()\nconst LoadCache = new Set()\n\nexport interface ScriptProps extends ScriptHTMLAttributes<HTMLScriptElement> {\n  strategy?: 'afterInteractive' | 'lazyOnload' | 'beforeInteractive' | 'worker'\n  id?: string\n  onLoad?: (e: any) => void\n  onReady?: () => void | null\n  onError?: (e: any) => void\n  children?: React.ReactNode\n  stylesheets?: string[]\n}\n\n/**\n * @deprecated Use `ScriptProps` instead.\n */\nexport type Props = ScriptProps\n\nconst insertStylesheets = (stylesheets: string[]) => {\n  // Case 1: Styles for afterInteractive/lazyOnload with appDir injected via handleClientScriptLoad\n  //\n  // Using ReactDOM.preinit to feature detect appDir and inject styles\n  // Stylesheets might have already been loaded if initialized with Script component\n  // Re-inject styles here to handle scripts loaded via handleClientScriptLoad\n  // ReactDOM.preinit handles dedup and ensures the styles are loaded only once\n  if (ReactDOM.preinit) {\n    stylesheets.forEach((stylesheet: string) => {\n      ReactDOM.preinit(stylesheet, { as: 'style' })\n    })\n\n    return\n  }\n\n  // Case 2: Styles for afterInteractive/lazyOnload with pages injected via handleClientScriptLoad\n  //\n  // We use this function to load styles when appdir is not detected\n  // TODO: Use React float APIs to load styles once available for pages dir\n  if (typeof window !== 'undefined') {\n    let head = document.head\n    stylesheets.forEach((stylesheet: string) => {\n      let link = document.createElement('link')\n\n      link.type = 'text/css'\n      link.rel = 'stylesheet'\n      link.href = stylesheet\n\n      head.appendChild(link)\n    })\n  }\n}\n\nconst loadScript = (props: ScriptProps): void => {\n  const {\n    src,\n    id,\n    onLoad = () => {},\n    onReady = null,\n    dangerouslySetInnerHTML,\n    children = '',\n    strategy = 'afterInteractive',\n    onError,\n    stylesheets,\n  } = props\n\n  const cacheKey = id || src\n\n  // Script has already loaded\n  if (cacheKey && LoadCache.has(cacheKey)) {\n    return\n  }\n\n  // Contents of this script are already loading/loaded\n  if (ScriptCache.has(src)) {\n    LoadCache.add(cacheKey)\n    // It is possible that multiple `next/script` components all have same \"src\", but has different \"onLoad\"\n    // This is to make sure the same remote script will only load once, but \"onLoad\" are executed in order\n    ScriptCache.get(src).then(onLoad, onError)\n    return\n  }\n\n  /** Execute after the script first loaded */\n  const afterLoad = () => {\n    // Run onReady for the first time after load event\n    if (onReady) {\n      onReady()\n    }\n    // add cacheKey to LoadCache when load successfully\n    LoadCache.add(cacheKey)\n  }\n\n  const el = document.createElement('script')\n\n  const loadPromise = new Promise<void>((resolve, reject) => {\n    el.addEventListener('load', function (e) {\n      resolve()\n      if (onLoad) {\n        onLoad.call(this, e)\n      }\n      afterLoad()\n    })\n    el.addEventListener('error', function (e) {\n      reject(e)\n    })\n  }).catch(function (e) {\n    if (onError) {\n      onError(e)\n    }\n  })\n\n  if (dangerouslySetInnerHTML) {\n    // Casting since lib.dom.d.ts doesn't have TrustedHTML yet.\n    el.innerHTML = (dangerouslySetInnerHTML.__html as string) || ''\n\n    afterLoad()\n  } else if (children) {\n    el.textContent =\n      typeof children === 'string'\n        ? children\n        : Array.isArray(children)\n          ? children.join('')\n          : ''\n\n    afterLoad()\n  } else if (src) {\n    el.src = src\n    // do not add cacheKey into LoadCache for remote script here\n    // cacheKey will be added to LoadCache when it is actually loaded (see loadPromise above)\n\n    ScriptCache.set(src, loadPromise)\n  }\n\n  setAttributesFromProps(el, props)\n\n  if (strategy === 'worker') {\n    el.setAttribute('type', 'text/partytown')\n  }\n\n  el.setAttribute('data-nscript', strategy)\n\n  // Load styles associated with this script\n  if (stylesheets) {\n    insertStylesheets(stylesheets)\n  }\n\n  document.body.appendChild(el)\n}\n\nexport function handleClientScriptLoad(props: ScriptProps) {\n  const { strategy = 'afterInteractive' } = props\n  if (strategy === 'lazyOnload') {\n    window.addEventListener('load', () => {\n      requestIdleCallback(() => loadScript(props))\n    })\n  } else {\n    loadScript(props)\n  }\n}\n\nfunction loadLazyScript(props: ScriptProps) {\n  if (document.readyState === 'complete') {\n    requestIdleCallback(() => loadScript(props))\n  } else {\n    window.addEventListener('load', () => {\n      requestIdleCallback(() => loadScript(props))\n    })\n  }\n}\n\nfunction addBeforeInteractiveToCache() {\n  const scripts = [\n    ...document.querySelectorAll('[data-nscript=\"beforeInteractive\"]'),\n    ...document.querySelectorAll('[data-nscript=\"beforePageRender\"]'),\n  ]\n  scripts.forEach((script) => {\n    const cacheKey = script.id || script.getAttribute('src')\n    LoadCache.add(cacheKey)\n  })\n}\n\nexport function initScriptLoader(scriptLoaderItems: ScriptProps[]) {\n  scriptLoaderItems.forEach(handleClientScriptLoad)\n  addBeforeInteractiveToCache()\n}\n\n/**\n * Load a third-party scripts in an optimized way.\n *\n * Read more: [Next.js Docs: `next/script`](https://nextjs.org/docs/app/api-reference/components/script)\n */\nfunction Script(props: ScriptProps): JSX.Element | null {\n  const {\n    id,\n    src = '',\n    onLoad = () => {},\n    onReady = null,\n    strategy = 'afterInteractive',\n    onError,\n    stylesheets,\n    ...restProps\n  } = props\n\n  // Context is available only during SSR\n  let { updateScripts, scripts, getIsSsr, appDir, nonce } =\n    useContext(HeadManagerContext)\n\n  // if a nonce is explicitly passed to the script tag, favor that over the automatic handling\n  nonce = restProps.nonce || nonce\n\n  /**\n   * - First mount:\n   *   1. The useEffect for onReady executes\n   *   2. hasOnReadyEffectCalled.current is false, but the script hasn't loaded yet (not in LoadCache)\n   *      onReady is skipped, set hasOnReadyEffectCalled.current to true\n   *   3. The useEffect for loadScript executes\n   *   4. hasLoadScriptEffectCalled.current is false, loadScript executes\n   *      Once the script is loaded, the onLoad and onReady will be called by then\n   *   [If strict mode is enabled / is wrapped in <OffScreen /> component]\n   *   5. The useEffect for onReady executes again\n   *   6. hasOnReadyEffectCalled.current is true, so entire effect is skipped\n   *   7. The useEffect for loadScript executes again\n   *   8. hasLoadScriptEffectCalled.current is true, so entire effect is skipped\n   *\n   * - Second mount:\n   *   1. The useEffect for onReady executes\n   *   2. hasOnReadyEffectCalled.current is false, but the script has already loaded (found in LoadCache)\n   *      onReady is called, set hasOnReadyEffectCalled.current to true\n   *   3. The useEffect for loadScript executes\n   *   4. The script is already loaded, loadScript bails out\n   *   [If strict mode is enabled / is wrapped in <OffScreen /> component]\n   *   5. The useEffect for onReady executes again\n   *   6. hasOnReadyEffectCalled.current is true, so entire effect is skipped\n   *   7. The useEffect for loadScript executes again\n   *   8. hasLoadScriptEffectCalled.current is true, so entire effect is skipped\n   */\n  const hasOnReadyEffectCalled = useRef(false)\n\n  useEffect(() => {\n    const cacheKey = id || src\n    if (!hasOnReadyEffectCalled.current) {\n      // Run onReady if script has loaded before but component is re-mounted\n      if (onReady && cacheKey && LoadCache.has(cacheKey)) {\n        onReady()\n      }\n\n      hasOnReadyEffectCalled.current = true\n    }\n  }, [onReady, id, src])\n\n  const hasLoadScriptEffectCalled = useRef(false)\n\n  useEffect(() => {\n    if (!hasLoadScriptEffectCalled.current) {\n      if (strategy === 'afterInteractive') {\n        loadScript(props)\n      } else if (strategy === 'lazyOnload') {\n        loadLazyScript(props)\n      }\n\n      hasLoadScriptEffectCalled.current = true\n    }\n  }, [props, strategy])\n\n  if (strategy === 'beforeInteractive' || strategy === 'worker') {\n    if (updateScripts) {\n      scripts[strategy] = (scripts[strategy] || []).concat([\n        {\n          id,\n          src,\n          onLoad,\n          onReady,\n          onError,\n          ...restProps,\n          nonce,\n        },\n      ])\n      updateScripts(scripts)\n    } else if (getIsSsr && getIsSsr()) {\n      // Script has already loaded during SSR\n      LoadCache.add(id || src)\n    } else if (getIsSsr && !getIsSsr()) {\n      loadScript({\n        ...props,\n        nonce,\n      })\n    }\n  }\n\n  // For the app directory, we need React Float to preload these scripts.\n  if (appDir) {\n    // Injecting stylesheets here handles beforeInteractive and worker scripts correctly\n    // For other strategies injecting here ensures correct stylesheet order\n    // ReactDOM.preinit handles loading the styles in the correct order,\n    // also ensures the stylesheet is loaded only once and in a consistent manner\n    //\n    // Case 1: Styles for beforeInteractive/worker with appDir - handled here\n    // Case 2: Styles for beforeInteractive/worker with pages dir - Not handled yet\n    // Case 3: Styles for afterInteractive/lazyOnload with appDir - handled here\n    // Case 4: Styles for afterInteractive/lazyOnload with pages dir - handled in insertStylesheets function\n    if (stylesheets) {\n      stylesheets.forEach((styleSrc) => {\n        ReactDOM.preinit(styleSrc, { as: 'style' })\n      })\n    }\n\n    // Before interactive scripts need to be loaded by Next.js' runtime instead\n    // of native <script> tags, because they no longer have `defer`.\n    if (strategy === 'beforeInteractive') {\n      if (!src) {\n        // For inlined scripts, we put the content in `children`.\n        if (restProps.dangerouslySetInnerHTML) {\n          // Casting since lib.dom.d.ts doesn't have TrustedHTML yet.\n          restProps.children = restProps.dangerouslySetInnerHTML\n            .__html as string\n          delete restProps.dangerouslySetInnerHTML\n        }\n\n        return (\n          <script\n            nonce={nonce}\n            dangerouslySetInnerHTML={{\n              __html: `(self.__next_s=self.__next_s||[]).push(${JSON.stringify([\n                0,\n                { ...restProps, id },\n              ])})`,\n            }}\n          />\n        )\n      } else {\n        // @ts-ignore\n        ReactDOM.preload(\n          src,\n          restProps.integrity\n            ? {\n                as: 'script',\n                integrity: restProps.integrity,\n                nonce,\n                crossOrigin: restProps.crossOrigin,\n              }\n            : { as: 'script', nonce, crossOrigin: restProps.crossOrigin }\n        )\n        return (\n          <script\n            nonce={nonce}\n            dangerouslySetInnerHTML={{\n              __html: `(self.__next_s=self.__next_s||[]).push(${JSON.stringify([\n                src,\n                { ...restProps, id },\n              ])})`,\n            }}\n          />\n        )\n      }\n    } else if (strategy === 'afterInteractive') {\n      if (src) {\n        // @ts-ignore\n        ReactDOM.preload(\n          src,\n          restProps.integrity\n            ? {\n                as: 'script',\n                integrity: restProps.integrity,\n                nonce,\n                crossOrigin: restProps.crossOrigin,\n              }\n            : { as: 'script', nonce, crossOrigin: restProps.crossOrigin }\n        )\n      }\n    }\n  }\n\n  return null\n}\n\nObject.defineProperty(Script, '__nextScript', { value: true })\n\nexport default Script\n","export interface PathLocale {\n  detectedLocale?: string\n  pathname: string\n}\n\n/**\n * A cache of lowercased locales for each list of locales. This is stored as a\n * WeakMap so if the locales are garbage collected, the cache entry will be\n * removed as well.\n */\nconst cache = new WeakMap<readonly string[], readonly string[]>()\n\n/**\n * For a pathname that may include a locale from a list of locales, it\n * removes the locale from the pathname returning it alongside with the\n * detected locale.\n *\n * @param pathname A pathname that may include a locale.\n * @param locales A list of locales.\n * @returns The detected locale and pathname without locale\n */\nexport function normalizeLocalePath(\n  pathname: string,\n  locales?: readonly string[]\n): PathLocale {\n  // If locales is undefined, return the pathname as is.\n  if (!locales) return { pathname }\n\n  // Get the cached lowercased locales or create a new cache entry.\n  let lowercasedLocales = cache.get(locales)\n  if (!lowercasedLocales) {\n    lowercasedLocales = locales.map((locale) => locale.toLowerCase())\n    cache.set(locales, lowercasedLocales)\n  }\n\n  let detectedLocale: string | undefined\n\n  // The first segment will be empty, because it has a leading `/`. If\n  // there is no further segment, there is no locale (or it's the default).\n  const segments = pathname.split('/', 2)\n\n  // If there's no second segment (ie, the pathname is just `/`), there's no\n  // locale.\n  if (!segments[1]) return { pathname }\n\n  // The second segment will contain the locale part if any.\n  const segment = segments[1].toLowerCase()\n\n  // See if the segment matches one of the locales. If it doesn't, there is\n  // no locale (or it's the default).\n  const index = lowercasedLocales.indexOf(segment)\n  if (index < 0) return { pathname }\n\n  // Return the case-sensitive locale.\n  detectedLocale = locales[index]\n\n  // Remove the `/${locale}` part of the pathname.\n  pathname = pathname.slice(detectedLocale.length + 1) || '/'\n\n  return { pathname, detectedLocale }\n}\n","/*\nMIT License\n\nCopyright (c) Jason Miller (https://jasonformat.com/)\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n// This file is based on https://github.com/developit/mitt/blob/v1.1.3/src/index.js\n// It's been edited for the needs of this script\n// See the LICENSE at the top of the file\n\ntype Handler = (...evts: any[]) => void\n\nexport type MittEmitter<T> = {\n  on(type: T, handler: Handler): void\n  off(type: T, handler: Handler): void\n  emit(type: T, ...evts: any[]): void\n}\n\nexport default function mitt(): MittEmitter<string> {\n  const all: { [s: string]: Handler[] } = Object.create(null)\n\n  return {\n    on(type: string, handler: Handler) {\n      ;(all[type] || (all[type] = [])).push(handler)\n    },\n\n    off(type: string, handler: Handler) {\n      if (all[type]) {\n        all[type].splice(all[type].indexOf(handler) >>> 0, 1)\n      }\n    },\n\n    emit(type: string, ...evts: any[]) {\n      // eslint-disable-next-line array-callback-return\n      ;(all[type] || []).slice().map((handler: Handler) => {\n        handler(...evts)\n      })\n    },\n  }\n}\n","import type { ParsedUrlQuery } from 'querystring'\n\nexport function searchParamsToUrlQuery(\n  searchParams: URLSearchParams\n): ParsedUrlQuery {\n  const query: ParsedUrlQuery = {}\n  for (const [key, value] of searchParams.entries()) {\n    const existing = query[key]\n    if (typeof existing === 'undefined') {\n      query[key] = value\n    } else if (Array.isArray(existing)) {\n      existing.push(value)\n    } else {\n      query[key] = [existing, value]\n    }\n  }\n  return query\n}\n\nfunction stringifyUrlQueryParam(param: unknown): string {\n  if (typeof param === 'string') {\n    return param\n  }\n\n  if (\n    (typeof param === 'number' && !isNaN(param)) ||\n    typeof param === 'boolean'\n  ) {\n    return String(param)\n  } else {\n    return ''\n  }\n}\n\nexport function urlQueryToSearchParams(query: ParsedUrlQuery): URLSearchParams {\n  const searchParams = new URLSearchParams()\n  for (const [key, value] of Object.entries(query)) {\n    if (Array.isArray(value)) {\n      for (const item of value) {\n        searchParams.append(key, stringifyUrlQueryParam(item))\n      }\n    } else {\n      searchParams.set(key, stringifyUrlQueryParam(value))\n    }\n  }\n  return searchParams\n}\n\nexport function assign(\n  target: URLSearchParams,\n  ...searchParamsList: URLSearchParams[]\n): URLSearchParams {\n  for (const searchParams of searchParamsList) {\n    for (const key of searchParams.keys()) {\n      target.delete(key)\n    }\n\n    for (const [key, value] of searchParams.entries()) {\n      target.append(key, value)\n    }\n  }\n\n  return target\n}\n","import type { ParsedUrlQuery } from 'querystring'\nimport { getLocationOrigin } from '../../utils'\nimport { searchParamsToUrlQuery } from './querystring'\n\nexport interface ParsedRelativeUrl {\n  hash: string\n  href: string\n  pathname: string\n  query: ParsedUrlQuery\n  search: string\n  slashes: undefined\n}\n\n/**\n * Parses path-relative urls (e.g. `/hello/world?foo=bar`). If url isn't path-relative\n * (e.g. `./hello`) then at least base must be.\n * Absolute urls are rejected with one exception, in the browser, absolute urls that are on\n * the current origin will be parsed as relative\n */\nexport function parseRelativeUrl(\n  url: string,\n  base?: string,\n  parseQuery?: true\n): ParsedRelativeUrl\nexport function parseRelativeUrl(\n  url: string,\n  base: string | undefined,\n  parseQuery: false\n): Omit<ParsedRelativeUrl, 'query'>\nexport function parseRelativeUrl(\n  url: string,\n  base?: string,\n  parseQuery = true\n): ParsedRelativeUrl | Omit<ParsedRelativeUrl, 'query'> {\n  const globalBase = new URL(\n    typeof window === 'undefined' ? 'http://n' : getLocationOrigin()\n  )\n\n  const resolvedBase = base\n    ? new URL(base, globalBase)\n    : url.startsWith('.')\n      ? new URL(\n          typeof window === 'undefined' ? 'http://n' : window.location.href\n        )\n      : globalBase\n\n  const { pathname, searchParams, search, hash, href, origin } = new URL(\n    url,\n    resolvedBase\n  )\n\n  if (origin !== globalBase.origin) {\n    throw new Error(`invariant: invalid relative URL, router received ${url}`)\n  }\n\n  return {\n    pathname,\n    query: parseQuery ? searchParamsToUrlQuery(searchParams) : undefined,\n    search,\n    hash,\n    href: href.slice(origin.length),\n    // We don't know for relative URLs at this point since we set a custom, internal\n    // base that isn't surfaced to users.\n    slashes: undefined,\n  }\n}\n","(()=>{\"use strict\";if(typeof __nccwpck_require__!==\"undefined\")__nccwpck_require__.ab=__dirname+\"/\";var e={};(()=>{var n=e;Object.defineProperty(n,\"__esModule\",{value:true});n.pathToRegexp=n.tokensToRegexp=n.regexpToFunction=n.match=n.tokensToFunction=n.compile=n.parse=void 0;function lexer(e){var n=[];var r=0;while(r<e.length){var t=e[r];if(t===\"*\"||t===\"+\"||t===\"?\"){n.push({type:\"MODIFIER\",index:r,value:e[r++]});continue}if(t===\"\\\\\"){n.push({type:\"ESCAPED_CHAR\",index:r++,value:e[r++]});continue}if(t===\"{\"){n.push({type:\"OPEN\",index:r,value:e[r++]});continue}if(t===\"}\"){n.push({type:\"CLOSE\",index:r,value:e[r++]});continue}if(t===\":\"){var a=\"\";var i=r+1;while(i<e.length){var o=e.charCodeAt(i);if(o>=48&&o<=57||o>=65&&o<=90||o>=97&&o<=122||o===95){a+=e[i++];continue}break}if(!a)throw new TypeError(\"Missing parameter name at \".concat(r));n.push({type:\"NAME\",index:r,value:a});r=i;continue}if(t===\"(\"){var c=1;var f=\"\";var i=r+1;if(e[i]===\"?\"){throw new TypeError('Pattern cannot start with \"?\" at '.concat(i))}while(i<e.length){if(e[i]===\"\\\\\"){f+=e[i++]+e[i++];continue}if(e[i]===\")\"){c--;if(c===0){i++;break}}else if(e[i]===\"(\"){c++;if(e[i+1]!==\"?\"){throw new TypeError(\"Capturing groups are not allowed at \".concat(i))}}f+=e[i++]}if(c)throw new TypeError(\"Unbalanced pattern at \".concat(r));if(!f)throw new TypeError(\"Missing pattern at \".concat(r));n.push({type:\"PATTERN\",index:r,value:f});r=i;continue}n.push({type:\"CHAR\",index:r,value:e[r++]})}n.push({type:\"END\",index:r,value:\"\"});return n}function parse(e,n){if(n===void 0){n={}}var r=lexer(e);var t=n.prefixes,a=t===void 0?\"./\":t,i=n.delimiter,o=i===void 0?\"/#?\":i;var c=[];var f=0;var u=0;var p=\"\";var tryConsume=function(e){if(u<r.length&&r[u].type===e)return r[u++].value};var mustConsume=function(e){var n=tryConsume(e);if(n!==undefined)return n;var t=r[u],a=t.type,i=t.index;throw new TypeError(\"Unexpected \".concat(a,\" at \").concat(i,\", expected \").concat(e))};var consumeText=function(){var e=\"\";var n;while(n=tryConsume(\"CHAR\")||tryConsume(\"ESCAPED_CHAR\")){e+=n}return e};var isSafe=function(e){for(var n=0,r=o;n<r.length;n++){var t=r[n];if(e.indexOf(t)>-1)return true}return false};var safePattern=function(e){var n=c[c.length-1];var r=e||(n&&typeof n===\"string\"?n:\"\");if(n&&!r){throw new TypeError('Must have text between two parameters, missing text after \"'.concat(n.name,'\"'))}if(!r||isSafe(r))return\"[^\".concat(escapeString(o),\"]+?\");return\"(?:(?!\".concat(escapeString(r),\")[^\").concat(escapeString(o),\"])+?\")};while(u<r.length){var v=tryConsume(\"CHAR\");var s=tryConsume(\"NAME\");var d=tryConsume(\"PATTERN\");if(s||d){var g=v||\"\";if(a.indexOf(g)===-1){p+=g;g=\"\"}if(p){c.push(p);p=\"\"}c.push({name:s||f++,prefix:g,suffix:\"\",pattern:d||safePattern(g),modifier:tryConsume(\"MODIFIER\")||\"\"});continue}var x=v||tryConsume(\"ESCAPED_CHAR\");if(x){p+=x;continue}if(p){c.push(p);p=\"\"}var h=tryConsume(\"OPEN\");if(h){var g=consumeText();var l=tryConsume(\"NAME\")||\"\";var m=tryConsume(\"PATTERN\")||\"\";var T=consumeText();mustConsume(\"CLOSE\");c.push({name:l||(m?f++:\"\"),pattern:l&&!m?safePattern(g):m,prefix:g,suffix:T,modifier:tryConsume(\"MODIFIER\")||\"\"});continue}mustConsume(\"END\")}return c}n.parse=parse;function compile(e,n){return tokensToFunction(parse(e,n),n)}n.compile=compile;function tokensToFunction(e,n){if(n===void 0){n={}}var r=flags(n);var t=n.encode,a=t===void 0?function(e){return e}:t,i=n.validate,o=i===void 0?true:i;var c=e.map((function(e){if(typeof e===\"object\"){return new RegExp(\"^(?:\".concat(e.pattern,\")$\"),r)}}));return function(n){var r=\"\";for(var t=0;t<e.length;t++){var i=e[t];if(typeof i===\"string\"){r+=i;continue}var f=n?n[i.name]:undefined;var u=i.modifier===\"?\"||i.modifier===\"*\";var p=i.modifier===\"*\"||i.modifier===\"+\";if(Array.isArray(f)){if(!p){throw new TypeError('Expected \"'.concat(i.name,'\" to not repeat, but got an array'))}if(f.length===0){if(u)continue;throw new TypeError('Expected \"'.concat(i.name,'\" to not be empty'))}for(var v=0;v<f.length;v++){var s=a(f[v],i);if(o&&!c[t].test(s)){throw new TypeError('Expected all \"'.concat(i.name,'\" to match \"').concat(i.pattern,'\", but got \"').concat(s,'\"'))}r+=i.prefix+s+i.suffix}continue}if(typeof f===\"string\"||typeof f===\"number\"){var s=a(String(f),i);if(o&&!c[t].test(s)){throw new TypeError('Expected \"'.concat(i.name,'\" to match \"').concat(i.pattern,'\", but got \"').concat(s,'\"'))}r+=i.prefix+s+i.suffix;continue}if(u)continue;var d=p?\"an array\":\"a string\";throw new TypeError('Expected \"'.concat(i.name,'\" to be ').concat(d))}return r}}n.tokensToFunction=tokensToFunction;function match(e,n){var r=[];var t=pathToRegexp(e,r,n);return regexpToFunction(t,r,n)}n.match=match;function regexpToFunction(e,n,r){if(r===void 0){r={}}var t=r.decode,a=t===void 0?function(e){return e}:t;return function(r){var t=e.exec(r);if(!t)return false;var i=t[0],o=t.index;var c=Object.create(null);var _loop_1=function(e){if(t[e]===undefined)return\"continue\";var r=n[e-1];if(r.modifier===\"*\"||r.modifier===\"+\"){c[r.name]=t[e].split(r.prefix+r.suffix).map((function(e){return a(e,r)}))}else{c[r.name]=a(t[e],r)}};for(var f=1;f<t.length;f++){_loop_1(f)}return{path:i,index:o,params:c}}}n.regexpToFunction=regexpToFunction;function escapeString(e){return e.replace(/([.+*?=^!:${}()[\\]|/\\\\])/g,\"\\\\$1\")}function flags(e){return e&&e.sensitive?\"\":\"i\"}function regexpToRegexp(e,n){if(!n)return e;var r=/\\((?:\\?<(.*?)>)?(?!\\?)/g;var t=0;var a=r.exec(e.source);while(a){n.push({name:a[1]||t++,prefix:\"\",suffix:\"\",modifier:\"\",pattern:\"\"});a=r.exec(e.source)}return e}function arrayToRegexp(e,n,r){var t=e.map((function(e){return pathToRegexp(e,n,r).source}));return new RegExp(\"(?:\".concat(t.join(\"|\"),\")\"),flags(r))}function stringToRegexp(e,n,r){return tokensToRegexp(parse(e,r),n,r)}function tokensToRegexp(e,n,r){if(r===void 0){r={}}var t=r.strict,a=t===void 0?false:t,i=r.start,o=i===void 0?true:i,c=r.end,f=c===void 0?true:c,u=r.encode,p=u===void 0?function(e){return e}:u,v=r.delimiter,s=v===void 0?\"/#?\":v,d=r.endsWith,g=d===void 0?\"\":d;var x=\"[\".concat(escapeString(g),\"]|$\");var h=\"[\".concat(escapeString(s),\"]\");var l=o?\"^\":\"\";for(var m=0,T=e;m<T.length;m++){var E=T[m];if(typeof E===\"string\"){l+=escapeString(p(E))}else{var w=escapeString(p(E.prefix));var y=escapeString(p(E.suffix));if(E.pattern){if(n)n.push(E);if(w||y){if(E.modifier===\"+\"||E.modifier===\"*\"){var R=E.modifier===\"*\"?\"?\":\"\";l+=\"(?:\".concat(w,\"((?:\").concat(E.pattern,\")(?:\").concat(y).concat(w,\"(?:\").concat(E.pattern,\"))*)\").concat(y,\")\").concat(R)}else{l+=\"(?:\".concat(w,\"(\").concat(E.pattern,\")\").concat(y,\")\").concat(E.modifier)}}else{if(E.modifier===\"+\"||E.modifier===\"*\"){throw new TypeError('Can not repeat \"'.concat(E.name,'\" without a prefix and suffix'))}l+=\"(\".concat(E.pattern,\")\").concat(E.modifier)}}else{l+=\"(?:\".concat(w).concat(y,\")\").concat(E.modifier)}}}if(f){if(!a)l+=\"\".concat(h,\"?\");l+=!r.endsWith?\"$\":\"(?=\".concat(x,\")\")}else{var A=e[e.length-1];var _=typeof A===\"string\"?h.indexOf(A[A.length-1])>-1:A===undefined;if(!a){l+=\"(?:\".concat(h,\"(?=\").concat(x,\"))?\")}if(!_){l+=\"(?=\".concat(h,\"|\").concat(x,\")\")}}return new RegExp(l,flags(r))}n.tokensToRegexp=tokensToRegexp;function pathToRegexp(e,n,r){if(e instanceof RegExp)return regexpToRegexp(e,n);if(Array.isArray(e))return arrayToRegexp(e,n,r);return stringToRegexp(e,n,r)}n.pathToRegexp=pathToRegexp})();module.exports=e})();","import type { Token } from 'next/dist/compiled/path-to-regexp'\n\n/**\n * Route pattern normalization utilities for path-to-regexp compatibility.\n *\n * path-to-regexp 6.3.0+ introduced stricter validation that rejects certain\n * patterns commonly used in Next.js interception routes. This module provides\n * normalization functions to make Next.js route patterns compatible with the\n * updated library while preserving all functionality.\n */\n\n/**\n * Internal separator used to normalize adjacent parameter patterns.\n * This unique marker is inserted between adjacent parameters and stripped out\n * during parameter extraction to avoid conflicts with real URL content.\n */\nexport const PARAM_SEPARATOR = '_NEXTSEP_'\n\n/**\n * Detects if a route pattern needs normalization for path-to-regexp compatibility.\n */\nexport function hasAdjacentParameterIssues(route: string): boolean {\n  if (typeof route !== 'string') return false\n\n  // Check for interception route markers followed immediately by parameters\n  // Pattern: /(.):param, /(..):param, /(...):param, /(.)(.):param etc.\n  // These patterns cause \"Must have text between two parameters\" errors\n  if (/\\/\\(\\.{1,3}\\):[^/\\s]+/.test(route)) {\n    return true\n  }\n\n  // Check for basic adjacent parameters without separators\n  // Pattern: :param1:param2 (but not :param* or other URL patterns)\n  if (/:[a-zA-Z_][a-zA-Z0-9_]*:[a-zA-Z_][a-zA-Z0-9_]*/.test(route)) {\n    return true\n  }\n\n  return false\n}\n\n/**\n * Normalizes route patterns that have adjacent parameters without text between them.\n * Inserts a unique separator that can be safely stripped out later.\n */\nexport function normalizeAdjacentParameters(route: string): string {\n  let normalized = route\n\n  // Handle interception route patterns: (.):param -> (.)_NEXTSEP_:param\n  normalized = normalized.replace(\n    /(\\([^)]*\\)):([^/\\s]+)/g,\n    `$1${PARAM_SEPARATOR}:$2`\n  )\n\n  // Handle other adjacent parameter patterns: :param1:param2 -> :param1_NEXTSEP_:param2\n  normalized = normalized.replace(/:([^:/\\s)]+)(?=:)/g, `:$1${PARAM_SEPARATOR}`)\n\n  return normalized\n}\n\n/**\n * Normalizes tokens that have repeating modifiers (* or +) but empty prefix and suffix.\n *\n * path-to-regexp 6.3.0+ introduced validation that throws:\n * \"Can not repeat without prefix/suffix\"\n *\n * This occurs when a token has modifier: '*' or '+' with both prefix: '' and suffix: ''\n */\nexport function normalizeTokensForRegexp(tokens: Token[]): Token[] {\n  return tokens.map((token) => {\n    // Token union type: Token = string | TokenObject\n    // Literal path segments are strings, parameters/wildcards are objects\n    if (\n      typeof token === 'object' &&\n      token !== null &&\n      // Not all token objects have 'modifier' property (e.g., simple text tokens)\n      'modifier' in token &&\n      // Only repeating modifiers (* or +) cause the validation error\n      // Other modifiers like '?' (optional) are fine\n      (token.modifier === '*' || token.modifier === '+') &&\n      // Token objects can have different shapes depending on route pattern\n      'prefix' in token &&\n      'suffix' in token &&\n      // Both prefix and suffix must be empty strings\n      // This is what causes the validation error in path-to-regexp\n      token.prefix === '' &&\n      token.suffix === ''\n    ) {\n      // Add minimal prefix to satisfy path-to-regexp validation\n      // We use '/' as it's the most common path delimiter and won't break route matching\n      // The prefix gets used in regex generation but doesn't affect parameter extraction\n      return {\n        ...token,\n        prefix: '/',\n      }\n    }\n    return token\n  })\n}\n\n/**\n * Strips normalization separators from compiled pathname.\n * This removes separators that were inserted by normalizeAdjacentParameters\n * to satisfy path-to-regexp validation.\n *\n * Only removes separators in the specific contexts where they were inserted:\n * - After interception route markers: (.)_NEXTSEP_ -> (.)\n *\n * This targeted approach ensures we don't accidentally remove the separator\n * from legitimate user content.\n */\nexport function stripNormalizedSeparators(pathname: string): string {\n  // Remove separator after interception route markers\n  // Pattern: (.)_NEXTSEP_ -> (.), (..)_NEXTSEP_ -> (..), etc.\n  // The separator appears after the closing paren of interception markers\n  return pathname.replace(new RegExp(`\\\\)${PARAM_SEPARATOR}`, 'g'), ')')\n}\n\n/**\n * Strips normalization separators from extracted route parameters.\n * Used by both server and client code to clean up parameters after route matching.\n */\nexport function stripParameterSeparators(\n  params: Record<string, any>\n): Record<string, any> {\n  const cleaned: Record<string, any> = {}\n\n  for (const [key, value] of Object.entries(params)) {\n    if (typeof value === 'string') {\n      // Remove the separator if it appears at the start of parameter values\n      cleaned[key] = value.replace(new RegExp(`^${PARAM_SEPARATOR}`), '')\n    } else if (Array.isArray(value)) {\n      // Handle array parameters (from repeated route segments)\n      cleaned[key] = value.map((item) =>\n        typeof item === 'string'\n          ? item.replace(new RegExp(`^${PARAM_SEPARATOR}`), '')\n          : item\n      )\n    } else {\n      cleaned[key] = value\n    }\n  }\n\n  return cleaned\n}\n","/**\n * Client-safe utilities for route matching that don't import server-side\n * utilities to avoid bundling issues with Turbopack\n */\n\nimport type {\n  Key,\n  TokensToRegexpOptions,\n  ParseOptions,\n  TokensToFunctionOptions,\n} from 'next/dist/compiled/path-to-regexp'\nimport {\n  pathToRegexp,\n  compile,\n  regexpToFunction,\n} from 'next/dist/compiled/path-to-regexp'\nimport {\n  hasAdjacentParameterIssues,\n  normalizeAdjacentParameters,\n  stripParameterSeparators,\n  stripNormalizedSeparators,\n} from '../../../../lib/route-pattern-normalizer'\n\n/**\n * Client-safe wrapper around pathToRegexp that handles path-to-regexp 6.3.0+ validation errors.\n * This includes both \"Can not repeat without prefix/suffix\" and \"Must have text between parameters\" errors.\n */\nexport function safePathToRegexp(\n  route: string | RegExp | Array<string | RegExp>,\n  keys?: Key[],\n  options?: TokensToRegexpOptions & ParseOptions\n): RegExp {\n  if (typeof route !== 'string') {\n    return pathToRegexp(route, keys, options)\n  }\n\n  // Check if normalization is needed and cache the result\n  const needsNormalization = hasAdjacentParameterIssues(route)\n  const routeToUse = needsNormalization\n    ? normalizeAdjacentParameters(route)\n    : route\n\n  try {\n    return pathToRegexp(routeToUse, keys, options)\n  } catch (error) {\n    // Only try normalization if we haven't already normalized\n    if (!needsNormalization) {\n      try {\n        const normalizedRoute = normalizeAdjacentParameters(route)\n        return pathToRegexp(normalizedRoute, keys, options)\n      } catch (retryError) {\n        // If that doesn't work, fall back to original error\n        throw error\n      }\n    }\n    throw error\n  }\n}\n\n/**\n * Client-safe wrapper around compile that handles path-to-regexp 6.3.0+ validation errors.\n * No server-side error reporting to avoid bundling issues.\n * When normalization is applied, the returned compiler function automatically strips\n * the internal separator from the output URL.\n */\nexport function safeCompile(\n  route: string,\n  options?: TokensToFunctionOptions & ParseOptions\n) {\n  // Check if normalization is needed and cache the result\n  const needsNormalization = hasAdjacentParameterIssues(route)\n  const routeToUse = needsNormalization\n    ? normalizeAdjacentParameters(route)\n    : route\n\n  try {\n    const compiler = compile(routeToUse, options)\n\n    // If we normalized the route, wrap the compiler to strip separators from output\n    // The normalization inserts _NEXTSEP_ as a literal string in the pattern to satisfy\n    // path-to-regexp validation, but we don't want it in the final compiled URL\n    if (needsNormalization) {\n      return (params: any) => {\n        return stripNormalizedSeparators(compiler(params))\n      }\n    }\n\n    return compiler\n  } catch (error) {\n    // Only try normalization if we haven't already normalized\n    if (!needsNormalization) {\n      try {\n        const normalizedRoute = normalizeAdjacentParameters(route)\n        const compiler = compile(normalizedRoute, options)\n\n        // Wrap the compiler to strip separators from output\n        return (params: any) => {\n          return stripNormalizedSeparators(compiler(params))\n        }\n      } catch (retryError) {\n        // If that doesn't work, fall back to original error\n        throw error\n      }\n    }\n    throw error\n  }\n}\n\n/**\n * Client-safe wrapper around regexpToFunction that automatically cleans parameters.\n */\nexport function safeRegexpToFunction<\n  T extends Record<string, any> = Record<string, any>,\n>(regexp: RegExp, keys?: Key[]): (pathname: string) => { params: T } | false {\n  const originalMatcher = regexpToFunction<T>(regexp, keys || [])\n\n  return (pathname: string) => {\n    const result = originalMatcher(pathname)\n    if (!result) return false\n\n    // Clean parameters before returning\n    return {\n      ...result,\n      params: stripParameterSeparators(result.params as any) as T,\n    }\n  }\n}\n\n/**\n * Safe wrapper for route matcher functions that automatically cleans parameters.\n * This is client-safe and doesn't import path-to-regexp.\n */\nexport function safeRouteMatcher<T extends Record<string, any>>(\n  matcherFn: (pathname: string) => false | T\n): (pathname: string) => false | T {\n  return (pathname: string) => {\n    const result = matcherFn(pathname)\n    if (!result) return false\n\n    // Clean parameters before returning\n    return stripParameterSeparators(result) as T\n  }\n}\n","import type { Group } from './route-regex'\nimport { DecodeError } from '../../utils'\nimport type { Params } from '../../../../server/request/params'\nimport { safeRouteMatcher } from './route-match-utils'\n\nexport interface RouteMatchFn {\n  (pathname: string): false | Params\n}\n\ntype RouteMatcherOptions = {\n  // We only use the exec method of the RegExp object. This helps us avoid using\n  // type assertions that the passed in properties are of the correct type.\n  re: Pick<RegExp, 'exec'>\n  groups: Record<string, Group>\n}\n\nexport function getRouteMatcher({\n  re,\n  groups,\n}: RouteMatcherOptions): RouteMatchFn {\n  const rawMatcher = (pathname: string) => {\n    const routeMatch = re.exec(pathname)\n    if (!routeMatch) return false\n\n    const decode = (param: string) => {\n      try {\n        return decodeURIComponent(param)\n      } catch {\n        throw new DecodeError('failed to decode param')\n      }\n    }\n\n    const params: Params = {}\n    for (const [key, group] of Object.entries(groups)) {\n      const match = routeMatch[group.pos]\n      if (match !== undefined) {\n        if (group.repeat) {\n          params[key] = match.split('/').map((entry) => decode(entry))\n        } else {\n          params[key] = decode(match)\n        }\n      }\n    }\n\n    return params\n  }\n\n  // Wrap with safe matcher to handle parameter cleaning\n  return safeRouteMatcher(rawMatcher)\n}\n","import type { ServerRuntime } from '../types'\n\nexport const TEXT_PLAIN_CONTENT_TYPE_HEADER = 'text/plain'\nexport const HTML_CONTENT_TYPE_HEADER = 'text/html; charset=utf-8'\nexport const JSON_CONTENT_TYPE_HEADER = 'application/json; charset=utf-8'\nexport const NEXT_QUERY_PARAM_PREFIX = 'nxtP'\nexport const NEXT_INTERCEPTION_MARKER_PREFIX = 'nxtI'\n\nexport const MATCHED_PATH_HEADER = 'x-matched-path'\nexport const PRERENDER_REVALIDATE_HEADER = 'x-prerender-revalidate'\nexport const PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER =\n  'x-prerender-revalidate-if-generated'\n\nexport const RSC_PREFETCH_SUFFIX = '.prefetch.rsc'\nexport const RSC_SEGMENTS_DIR_SUFFIX = '.segments'\nexport const RSC_SEGMENT_SUFFIX = '.segment.rsc'\nexport const RSC_SUFFIX = '.rsc'\nexport const ACTION_SUFFIX = '.action'\nexport const NEXT_DATA_SUFFIX = '.json'\nexport const NEXT_META_SUFFIX = '.meta'\nexport const NEXT_BODY_SUFFIX = '.body'\n\nexport const NEXT_CACHE_TAGS_HEADER = 'x-next-cache-tags'\nexport const NEXT_CACHE_REVALIDATED_TAGS_HEADER = 'x-next-revalidated-tags'\nexport const NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER =\n  'x-next-revalidate-tag-token'\n\nexport const NEXT_RESUME_HEADER = 'next-resume'\n\n// if these change make sure we update the related\n// documentation as well\nexport const NEXT_CACHE_TAG_MAX_ITEMS = 128\nexport const NEXT_CACHE_TAG_MAX_LENGTH = 256\nexport const NEXT_CACHE_SOFT_TAG_MAX_LENGTH = 1024\nexport const NEXT_CACHE_IMPLICIT_TAG_ID = '_N_T_'\n\n// in seconds\nexport const CACHE_ONE_YEAR = 31536000\n\n// in seconds, represents revalidate=false. I.e. never revaliate.\n// We use this value since it can be represented as a V8 SMI for optimal performance.\n// It can also be serialized as JSON if it ever leaks accidentally as an actual value.\nexport const INFINITE_CACHE = 0xfffffffe\n\n// Patterns to detect middleware files\nexport const MIDDLEWARE_FILENAME = 'middleware'\nexport const MIDDLEWARE_LOCATION_REGEXP = `(?:src/)?${MIDDLEWARE_FILENAME}`\n\n// Patterns to detect proxy files (replacement for middleware)\nexport const PROXY_FILENAME = 'proxy'\nexport const PROXY_LOCATION_REGEXP = `(?:src/)?${PROXY_FILENAME}`\n\n// Pattern to detect instrumentation hooks file\nexport const INSTRUMENTATION_HOOK_FILENAME = 'instrumentation'\n\n// Because on Windows absolute paths in the generated code can break because of numbers, eg 1 in the path,\n// we have to use a private alias\nexport const PAGES_DIR_ALIAS = 'private-next-pages'\nexport const DOT_NEXT_ALIAS = 'private-dot-next'\nexport const ROOT_DIR_ALIAS = 'private-next-root-dir'\nexport const APP_DIR_ALIAS = 'private-next-app-dir'\nexport const RSC_MOD_REF_PROXY_ALIAS = 'private-next-rsc-mod-ref-proxy'\nexport const RSC_ACTION_VALIDATE_ALIAS = 'private-next-rsc-action-validate'\nexport const RSC_ACTION_PROXY_ALIAS = 'private-next-rsc-server-reference'\nexport const RSC_CACHE_WRAPPER_ALIAS = 'private-next-rsc-cache-wrapper'\nexport const RSC_DYNAMIC_IMPORT_WRAPPER_ALIAS =\n  'private-next-rsc-track-dynamic-import'\nexport const RSC_ACTION_ENCRYPTION_ALIAS = 'private-next-rsc-action-encryption'\nexport const RSC_ACTION_CLIENT_WRAPPER_ALIAS =\n  'private-next-rsc-action-client-wrapper'\n\nexport const PUBLIC_DIR_MIDDLEWARE_CONFLICT = `You can not have a '_next' folder inside of your public folder. This conflicts with the internal '/_next' route. https://nextjs.org/docs/messages/public-next-folder-conflict`\n\nexport const SSG_GET_INITIAL_PROPS_CONFLICT = `You can not use getInitialProps with getStaticProps. To use SSG, please remove your getInitialProps`\n\nexport const SERVER_PROPS_GET_INIT_PROPS_CONFLICT = `You can not use getInitialProps with getServerSideProps. Please remove getInitialProps.`\n\nexport const SERVER_PROPS_SSG_CONFLICT = `You can not use getStaticProps or getStaticPaths with getServerSideProps. To use SSG, please remove getServerSideProps`\n\nexport const STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR = `can not have getInitialProps/getServerSideProps, https://nextjs.org/docs/messages/404-get-initial-props`\n\nexport const SERVER_PROPS_EXPORT_ERROR = `pages with \\`getServerSideProps\\` can not be exported. See more info here: https://nextjs.org/docs/messages/gssp-export`\n\nexport const GSP_NO_RETURNED_VALUE =\n  'Your `getStaticProps` function did not return an object. Did you forget to add a `return`?'\nexport const GSSP_NO_RETURNED_VALUE =\n  'Your `getServerSideProps` function did not return an object. Did you forget to add a `return`?'\n\nexport const UNSTABLE_REVALIDATE_RENAME_ERROR =\n  'The `unstable_revalidate` property is available for general use.\\n' +\n  'Please use `revalidate` instead.'\n\nexport const GSSP_COMPONENT_MEMBER_ERROR = `can not be attached to a page's component and must be exported from the page. See more info here: https://nextjs.org/docs/messages/gssp-component-member`\n\nexport const NON_STANDARD_NODE_ENV = `You are using a non-standard \"NODE_ENV\" value in your environment. This creates inconsistencies in the project and is strongly advised against. Read more: https://nextjs.org/docs/messages/non-standard-node-env`\n\nexport const SSG_FALLBACK_EXPORT_ERROR = `Pages with \\`fallback\\` enabled in \\`getStaticPaths\\` can not be exported. See more info here: https://nextjs.org/docs/messages/ssg-fallback-true-export`\n\nexport const ESLINT_DEFAULT_DIRS = ['app', 'pages', 'components', 'lib', 'src']\n\nexport const SERVER_RUNTIME: Record<string, ServerRuntime> = {\n  edge: 'edge',\n  experimentalEdge: 'experimental-edge',\n  nodejs: 'nodejs',\n}\n\nexport const WEB_SOCKET_MAX_RECONNECTIONS = 12\n\n/**\n * The names of the webpack layers. These layers are the primitives for the\n * webpack chunks.\n */\nconst WEBPACK_LAYERS_NAMES = {\n  /**\n   * The layer for the shared code between the client and server bundles.\n   */\n  shared: 'shared',\n  /**\n   * The layer for server-only runtime and picking up `react-server` export conditions.\n   * Including app router RSC pages and app router custom routes and metadata routes.\n   */\n  reactServerComponents: 'rsc',\n  /**\n   * Server Side Rendering layer for app (ssr).\n   */\n  serverSideRendering: 'ssr',\n  /**\n   * The browser client bundle layer for actions.\n   */\n  actionBrowser: 'action-browser',\n  /**\n   * The Node.js bundle layer for the API routes.\n   */\n  apiNode: 'api-node',\n  /**\n   * The Edge Lite bundle layer for the API routes.\n   */\n  apiEdge: 'api-edge',\n  /**\n   * The layer for the middleware code.\n   */\n  middleware: 'middleware',\n  /**\n   * The layer for the instrumentation hooks.\n   */\n  instrument: 'instrument',\n  /**\n   * The layer for assets on the edge.\n   */\n  edgeAsset: 'edge-asset',\n  /**\n   * The browser client bundle layer for App directory.\n   */\n  appPagesBrowser: 'app-pages-browser',\n  /**\n   * The browser client bundle layer for Pages directory.\n   */\n  pagesDirBrowser: 'pages-dir-browser',\n  /**\n   * The Edge Lite bundle layer for Pages directory.\n   */\n  pagesDirEdge: 'pages-dir-edge',\n  /**\n   * The Node.js bundle layer for Pages directory.\n   */\n  pagesDirNode: 'pages-dir-node',\n} as const\n\nexport type WebpackLayerName =\n  (typeof WEBPACK_LAYERS_NAMES)[keyof typeof WEBPACK_LAYERS_NAMES]\n\nconst WEBPACK_LAYERS = {\n  ...WEBPACK_LAYERS_NAMES,\n  GROUP: {\n    builtinReact: [\n      WEBPACK_LAYERS_NAMES.reactServerComponents,\n      WEBPACK_LAYERS_NAMES.actionBrowser,\n    ],\n    serverOnly: [\n      WEBPACK_LAYERS_NAMES.reactServerComponents,\n      WEBPACK_LAYERS_NAMES.actionBrowser,\n      WEBPACK_LAYERS_NAMES.instrument,\n      WEBPACK_LAYERS_NAMES.middleware,\n    ],\n    neutralTarget: [\n      // pages api\n      WEBPACK_LAYERS_NAMES.apiNode,\n      WEBPACK_LAYERS_NAMES.apiEdge,\n    ],\n    clientOnly: [\n      WEBPACK_LAYERS_NAMES.serverSideRendering,\n      WEBPACK_LAYERS_NAMES.appPagesBrowser,\n    ],\n    bundled: [\n      WEBPACK_LAYERS_NAMES.reactServerComponents,\n      WEBPACK_LAYERS_NAMES.actionBrowser,\n      WEBPACK_LAYERS_NAMES.serverSideRendering,\n      WEBPACK_LAYERS_NAMES.appPagesBrowser,\n      WEBPACK_LAYERS_NAMES.shared,\n      WEBPACK_LAYERS_NAMES.instrument,\n      WEBPACK_LAYERS_NAMES.middleware,\n    ],\n    appPages: [\n      // app router pages and layouts\n      WEBPACK_LAYERS_NAMES.reactServerComponents,\n      WEBPACK_LAYERS_NAMES.serverSideRendering,\n      WEBPACK_LAYERS_NAMES.appPagesBrowser,\n      WEBPACK_LAYERS_NAMES.actionBrowser,\n    ],\n  },\n}\n\nconst WEBPACK_RESOURCE_QUERIES = {\n  edgeSSREntry: '__next_edge_ssr_entry__',\n  metadata: '__next_metadata__',\n  metadataRoute: '__next_metadata_route__',\n  metadataImageMeta: '__next_metadata_image_meta__',\n}\n\nexport { WEBPACK_LAYERS, WEBPACK_RESOURCE_QUERIES }\n","// regexp is based on https://github.com/sindresorhus/escape-string-regexp\nconst reHasRegExp = /[|\\\\{}()[\\]^$+*?.-]/\nconst reReplaceRegExp = /[|\\\\{}()[\\]^$+*?.-]/g\n\nexport function escapeStringRegexp(str: string) {\n  // see also: https://github.com/lodash/lodash/blob/2da024c3b4f9947a48517639de7560457cd4ec6c/escapeRegExp.js#L23\n  if (reHasRegExp.test(str)) {\n    return str.replace(reReplaceRegExp, '\\\\$&')\n  }\n  return str\n}\n","export class InvariantError extends Error {\n  constructor(message: string, options?: ErrorOptions) {\n    super(\n      `Invariant: ${message.endsWith('.') ? message : message + '.'} This is a bug in Next.js.`,\n      options\n    )\n    this.name = 'InvariantError'\n  }\n}\n","import { DEFAULT_SEGMENT_KEY } from '../../segment'\nimport type { LoaderTree } from '../../../../server/lib/app-dir-module'\n\nexport function parseLoaderTree(tree: LoaderTree) {\n  const [segment, parallelRoutes, modules] = tree\n  const { layout, template } = modules\n  let { page } = modules\n  // a __DEFAULT__ segment means that this route didn't match any of the\n  // segments in the route, so we should use the default page\n  page = segment === DEFAULT_SEGMENT_KEY ? modules.defaultPage : page\n\n  const conventionPath = layout?.[1] || template?.[1] || page?.[1]\n\n  return {\n    page,\n    segment,\n    modules,\n    /* it can be either layout / template / page */\n    conventionPath,\n    parallelRoutes,\n  }\n}\n","import { INTERCEPTION_ROUTE_MARKERS } from './interception-routes'\nimport type { DynamicParamTypes } from '../../app-router-types'\n\n/**\n * Parse dynamic route segment to type of parameter\n */\nexport function getSegmentParam(segment: string): {\n  param: string\n  type: DynamicParamTypes\n} | null {\n  const interceptionMarker = INTERCEPTION_ROUTE_MARKERS.find((marker) =>\n    segment.startsWith(marker)\n  )\n\n  // if an interception marker is part of the path segment, we need to jump ahead\n  // to the relevant portion for param parsing\n  if (interceptionMarker) {\n    segment = segment.slice(interceptionMarker.length)\n  }\n\n  if (segment.startsWith('[[...') && segment.endsWith(']]')) {\n    return {\n      // TODO-APP: Optional catchall does not currently work with parallel routes,\n      // so for now aren't handling a potential interception marker.\n      type: 'optional-catchall',\n      param: segment.slice(5, -2),\n    }\n  }\n\n  if (segment.startsWith('[...') && segment.endsWith(']')) {\n    return {\n      type: interceptionMarker ? 'catchall-intercepted' : 'catchall',\n      param: segment.slice(4, -1),\n    }\n  }\n\n  if (segment.startsWith('[') && segment.endsWith(']')) {\n    return {\n      type: interceptionMarker ? 'dynamic-intercepted' : 'dynamic',\n      param: segment.slice(1, -1),\n    }\n  }\n\n  return null\n}\n\nexport function isCatchAll(\n  type: DynamicParamTypes\n): type is 'catchall' | 'catchall-intercepted' | 'optional-catchall' {\n  return (\n    type === 'catchall' ||\n    type === 'catchall-intercepted' ||\n    type === 'optional-catchall'\n  )\n}\n\nexport function getParamProperties(paramType: DynamicParamTypes): {\n  repeat: boolean\n  optional: boolean\n} {\n  let repeat = false\n  let optional = false\n\n  switch (paramType) {\n    case 'catchall':\n    case 'catchall-intercepted':\n      repeat = true\n      break\n    case 'optional-catchall':\n      repeat = true\n      optional = true\n      break\n    case 'dynamic':\n    case 'dynamic-intercepted':\n      break\n    default:\n      paramType satisfies never\n  }\n\n  return { repeat, optional }\n}\n","import type { DynamicParam } from '../../../../server/app-render/app-render'\nimport type { LoaderTree } from '../../../../server/lib/app-dir-module'\nimport type { OpaqueFallbackRouteParams } from '../../../../server/request/fallback-params'\nimport type { Params } from '../../../../server/request/params'\nimport type { DynamicParamTypesShort } from '../../app-router-types'\nimport { InvariantError } from '../../invariant-error'\nimport { parseLoaderTree } from './parse-loader-tree'\nimport { getSegmentParam } from './get-segment-param'\n\n/**\n * Gets the value of a param from the params object. This correctly handles the\n * case where the param is a fallback route param and encodes the resulting\n * value.\n *\n * @param interpolatedParams - The params object.\n * @param segmentKey - The key of the segment.\n * @param fallbackRouteParams - The fallback route params.\n * @returns The value of the param.\n */\nfunction getParamValue(\n  interpolatedParams: Params,\n  segmentKey: string,\n  fallbackRouteParams: OpaqueFallbackRouteParams | null\n) {\n  let value = interpolatedParams[segmentKey]\n\n  if (fallbackRouteParams?.has(segmentKey)) {\n    // We know that the fallback route params has the segment key because we\n    // checked that above.\n    const [searchValue] = fallbackRouteParams.get(segmentKey)!\n    value = searchValue\n  } else if (Array.isArray(value)) {\n    value = value.map((i) => encodeURIComponent(i))\n  } else if (typeof value === 'string') {\n    value = encodeURIComponent(value)\n  }\n\n  return value\n}\n\nexport function interpolateParallelRouteParams(\n  loaderTree: LoaderTree,\n  params: Params,\n  pagePath: string,\n  fallbackRouteParams: OpaqueFallbackRouteParams | null\n) {\n  const interpolated = structuredClone(params)\n\n  // Stack-based traversal with depth tracking\n  const stack: Array<{ tree: LoaderTree; depth: number }> = [\n    { tree: loaderTree, depth: 0 },\n  ]\n\n  // Derive value from pagePath based on depth and parameter type\n  const pathSegments = pagePath.split('/').slice(1) // Remove first empty string\n\n  while (stack.length > 0) {\n    const { tree, depth } = stack.pop()!\n    const { segment, parallelRoutes } = parseLoaderTree(tree)\n\n    // Check if current segment contains a parameter\n    const segmentParam = getSegmentParam(segment)\n    if (\n      segmentParam &&\n      !interpolated.hasOwnProperty(segmentParam.param) &&\n      // If the param is in the fallback route params, we don't need to\n      // interpolate it because it's already marked as being unknown.\n      !fallbackRouteParams?.has(segmentParam.param)\n    ) {\n      switch (segmentParam.type) {\n        case 'catchall':\n        case 'optional-catchall':\n        case 'catchall-intercepted':\n          // For catchall parameters, take all remaining segments from this depth\n          const remainingSegments = pathSegments.slice(depth)\n\n          // Process each segment to handle any dynamic params\n          const processedSegments = remainingSegments\n            .flatMap((pathSegment) => {\n              const param = getSegmentParam(pathSegment)\n              // If the segment matches a param, return the param value otherwise,\n              // it's a static segment, so just return that. We don't use the\n              // `getParamValue` function here because we don't want the values to\n              // be encoded, that's handled on get by the `getDynamicParam`\n              // function.\n              return param ? interpolated[param.param] : pathSegment\n            })\n            .filter((s) => s !== undefined)\n\n          if (processedSegments.length > 0) {\n            interpolated[segmentParam.param] = processedSegments\n          }\n          break\n        case 'dynamic':\n        case 'dynamic-intercepted':\n          // For regular dynamic parameters, take the segment at this depth\n          if (depth < pathSegments.length) {\n            const pathSegment = pathSegments[depth]\n            const param = getSegmentParam(pathSegment)\n\n            interpolated[segmentParam.param] = param\n              ? interpolated[param.param]\n              : pathSegment\n          }\n          break\n        default:\n          segmentParam.type satisfies never\n      }\n    }\n\n    // Calculate next depth - increment if this is not a route group and not empty\n    let nextDepth = depth\n    const isRouteGroup = segment.startsWith('(') && segment.endsWith(')')\n    if (!isRouteGroup && segment !== '') {\n      nextDepth++\n    }\n\n    // Add all parallel routes to the stack for processing\n    for (const route of Object.values(parallelRoutes)) {\n      stack.push({ tree: route, depth: nextDepth })\n    }\n  }\n\n  return interpolated\n}\n\n/**\n *\n * Shared logic on client and server for creating a dynamic param value.\n *\n * This code needs to be shared with the client so it can extract dynamic route\n * params from the URL without a server request.\n *\n * Because everything in this module is sent to the client, we should aim to\n * keep this code as simple as possible. The special case handling for catchall\n * and optional is, alas, unfortunate.\n */\nexport function getDynamicParam(\n  interpolatedParams: Params,\n  segmentKey: string,\n  dynamicParamType: DynamicParamTypesShort,\n  fallbackRouteParams: OpaqueFallbackRouteParams | null\n): DynamicParam {\n  let value: string | string[] | undefined = getParamValue(\n    interpolatedParams,\n    segmentKey,\n    fallbackRouteParams\n  )\n\n  // handle the case where an optional catchall does not have a value,\n  // e.g. `/dashboard/[[...slug]]` when requesting `/dashboard`\n  if (!value || value.length === 0) {\n    if (dynamicParamType === 'oc') {\n      return {\n        param: segmentKey,\n        value: null,\n        type: dynamicParamType,\n        treeSegment: [segmentKey, '', dynamicParamType],\n      }\n    }\n\n    throw new InvariantError(\n      `Missing value for segment key: \"${segmentKey}\" with dynamic param type: ${dynamicParamType}`\n    )\n  }\n\n  return {\n    param: segmentKey,\n    // The value that is passed to user code.\n    value,\n    // The value that is rendered in the router tree.\n    treeSegment: [\n      segmentKey,\n      Array.isArray(value) ? value.join('/') : value,\n      dynamicParamType,\n    ],\n    type: dynamicParamType,\n  }\n}\n\n/**\n * Regular expression pattern used to match route parameters.\n * Matches both single parameters and parameter groups.\n * Examples:\n *   - `[[...slug]]` matches parameter group with key 'slug', repeat: true, optional: true\n *   - `[...slug]` matches parameter group with key 'slug', repeat: true, optional: false\n *   - `[[foo]]` matches parameter with key 'foo', repeat: false, optional: true\n *   - `[bar]` matches parameter with key 'bar', repeat: false, optional: false\n */\nexport const PARAMETER_PATTERN = /^([^[]*)\\[((?:\\[[^\\]]*\\])|[^\\]]+)\\](.*)$/\n\n/**\n * Parses a given parameter from a route to a data structure that can be used\n * to generate the parametrized route.\n * Examples:\n *   - `[[...slug]]` -> `{ key: 'slug', repeat: true, optional: true }`\n *   - `[...slug]` -> `{ key: 'slug', repeat: true, optional: false }`\n *   - `[[foo]]` -> `{ key: 'foo', repeat: false, optional: true }`\n *   - `[bar]` -> `{ key: 'bar', repeat: false, optional: false }`\n *   - `fizz` -> `{ key: 'fizz', repeat: false, optional: false }`\n * @param param - The parameter to parse.\n * @returns The parsed parameter as a data structure.\n */\nexport function parseParameter(param: string) {\n  const match = param.match(PARAMETER_PATTERN)\n\n  if (!match) {\n    return parseMatchedParameter(param)\n  }\n\n  return parseMatchedParameter(match[2])\n}\n\n/**\n * Parses a matched parameter from the PARAMETER_PATTERN regex to a data structure that can be used\n * to generate the parametrized route.\n * Examples:\n *   - `[...slug]` -> `{ key: 'slug', repeat: true, optional: true }`\n *   - `...slug` -> `{ key: 'slug', repeat: true, optional: false }`\n *   - `[foo]` -> `{ key: 'foo', repeat: false, optional: true }`\n *   - `bar` -> `{ key: 'bar', repeat: false, optional: false }`\n * @param param - The matched parameter to parse.\n * @returns The parsed parameter as a data structure.\n */\nexport function parseMatchedParameter(param: string) {\n  const optional = param.startsWith('[') && param.endsWith(']')\n  if (optional) {\n    param = param.slice(1, -1)\n  }\n  const repeat = param.startsWith('...')\n  if (repeat) {\n    param = param.slice(3)\n  }\n  return { key: param, repeat, optional }\n}\n","import {\n  NEXT_INTERCEPTION_MARKER_PREFIX,\n  NEXT_QUERY_PARAM_PREFIX,\n} from '../../../../lib/constants'\nimport { INTERCEPTION_ROUTE_MARKERS } from './interception-routes'\nimport { escapeStringRegexp } from '../../escape-regexp'\nimport { removeTrailingSlash } from './remove-trailing-slash'\nimport { PARAMETER_PATTERN, parseMatchedParameter } from './get-dynamic-param'\n\nexport interface Group {\n  pos: number\n  repeat: boolean\n  optional: boolean\n}\n\nexport interface RouteRegex {\n  groups: { [groupName: string]: Group }\n  re: RegExp\n}\n\nexport type RegexReference = {\n  names: Record<string, string>\n  intercepted: Record<string, string>\n}\n\ntype GetNamedRouteRegexOptions = {\n  /**\n   * Whether to prefix the route keys with the NEXT_INTERCEPTION_MARKER_PREFIX\n   * or NEXT_QUERY_PARAM_PREFIX. This is only relevant when creating the\n   * routes-manifest during the build.\n   */\n  prefixRouteKeys: boolean\n\n  /**\n   * Whether to include the suffix in the route regex. This means that when you\n   * have something like `/[...slug].json` the `.json` part will be included\n   * in the regex, yielding `/(.*).json` as the regex.\n   */\n  includeSuffix?: boolean\n\n  /**\n   * Whether to include the prefix in the route regex. This means that when you\n   * have something like `/[...slug].json` the `/` part will be included\n   * in the regex, yielding `^/(.*).json$` as the regex.\n   *\n   * Note that interception markers will already be included without the need\n   */\n  includePrefix?: boolean\n\n  /**\n   * Whether to exclude the optional trailing slash from the route regex.\n   */\n  excludeOptionalTrailingSlash?: boolean\n\n  /**\n   * Whether to backtrack duplicate keys. This is only relevant when creating\n   * the routes-manifest during the build.\n   */\n  backreferenceDuplicateKeys?: boolean\n\n  /**\n   * If provided, this will be used as the reference for the dynamic parameter\n   * keys instead of generating them in context. This is currently only used for\n   * interception routes.\n   */\n  reference?: RegexReference\n}\n\ntype GetRouteRegexOptions = {\n  /**\n   * Whether to include extra parts in the route regex. This means that when you\n   * have something like `/[...slug].json` the `.json` part will be included\n   * in the regex, yielding `/(.*).json` as the regex.\n   */\n  includeSuffix?: boolean\n\n  /**\n   * Whether to include the prefix in the route regex. This means that when you\n   * have something like `/[...slug].json` the `/` part will be included\n   * in the regex, yielding `^/(.*).json$` as the regex.\n   *\n   * Note that interception markers will already be included without the need\n   * of adding this option.\n   */\n  includePrefix?: boolean\n\n  /**\n   * Whether to exclude the optional trailing slash from the route regex.\n   */\n  excludeOptionalTrailingSlash?: boolean\n}\n\nfunction getParametrizedRoute(\n  route: string,\n  includeSuffix: boolean,\n  includePrefix: boolean\n) {\n  const groups: { [groupName: string]: Group } = {}\n  let groupIndex = 1\n\n  const segments: string[] = []\n  for (const segment of removeTrailingSlash(route).slice(1).split('/')) {\n    const markerMatch = INTERCEPTION_ROUTE_MARKERS.find((m) =>\n      segment.startsWith(m)\n    )\n    const paramMatches = segment.match(PARAMETER_PATTERN) // Check for parameters\n\n    if (markerMatch && paramMatches && paramMatches[2]) {\n      const { key, optional, repeat } = parseMatchedParameter(paramMatches[2])\n      groups[key] = { pos: groupIndex++, repeat, optional }\n      segments.push(`/${escapeStringRegexp(markerMatch)}([^/]+?)`)\n    } else if (paramMatches && paramMatches[2]) {\n      const { key, repeat, optional } = parseMatchedParameter(paramMatches[2])\n      groups[key] = { pos: groupIndex++, repeat, optional }\n\n      if (includePrefix && paramMatches[1]) {\n        segments.push(`/${escapeStringRegexp(paramMatches[1])}`)\n      }\n\n      let s = repeat ? (optional ? '(?:/(.+?))?' : '/(.+?)') : '/([^/]+?)'\n\n      // Remove the leading slash if includePrefix already added it.\n      if (includePrefix && paramMatches[1]) {\n        s = s.substring(1)\n      }\n\n      segments.push(s)\n    } else {\n      segments.push(`/${escapeStringRegexp(segment)}`)\n    }\n\n    // If there's a suffix, add it to the segments if it's enabled.\n    if (includeSuffix && paramMatches && paramMatches[3]) {\n      segments.push(escapeStringRegexp(paramMatches[3]))\n    }\n  }\n\n  return {\n    parameterizedRoute: segments.join(''),\n    groups,\n  }\n}\n\n/**\n * From a normalized route this function generates a regular expression and\n * a corresponding groups object intended to be used to store matching groups\n * from the regular expression.\n */\nexport function getRouteRegex(\n  normalizedRoute: string,\n  {\n    includeSuffix = false,\n    includePrefix = false,\n    excludeOptionalTrailingSlash = false,\n  }: GetRouteRegexOptions = {}\n): RouteRegex {\n  const { parameterizedRoute, groups } = getParametrizedRoute(\n    normalizedRoute,\n    includeSuffix,\n    includePrefix\n  )\n\n  let re = parameterizedRoute\n  if (!excludeOptionalTrailingSlash) {\n    re += '(?:/)?'\n  }\n\n  return {\n    re: new RegExp(`^${re}$`),\n    groups: groups,\n  }\n}\n\n/**\n * Builds a function to generate a minimal routeKey using only a-z and minimal\n * number of characters.\n */\nfunction buildGetSafeRouteKey() {\n  let i = 0\n\n  return () => {\n    let routeKey = ''\n    let j = ++i\n    while (j > 0) {\n      routeKey += String.fromCharCode(97 + ((j - 1) % 26))\n      j = Math.floor((j - 1) / 26)\n    }\n    return routeKey\n  }\n}\n\nfunction getSafeKeyFromSegment({\n  interceptionMarker,\n  getSafeRouteKey,\n  segment,\n  routeKeys,\n  keyPrefix,\n  backreferenceDuplicateKeys,\n}: {\n  interceptionMarker?: string\n  getSafeRouteKey: () => string\n  segment: string\n  routeKeys: Record<string, string>\n  keyPrefix?: string\n  backreferenceDuplicateKeys: boolean\n}) {\n  const { key, optional, repeat } = parseMatchedParameter(segment)\n\n  // replace any non-word characters since they can break\n  // the named regex\n  let cleanedKey = key.replace(/\\W/g, '')\n\n  if (keyPrefix) {\n    cleanedKey = `${keyPrefix}${cleanedKey}`\n  }\n  let invalidKey = false\n\n  // check if the key is still invalid and fallback to using a known\n  // safe key\n  if (cleanedKey.length === 0 || cleanedKey.length > 30) {\n    invalidKey = true\n  }\n  if (!isNaN(parseInt(cleanedKey.slice(0, 1)))) {\n    invalidKey = true\n  }\n\n  if (invalidKey) {\n    cleanedKey = getSafeRouteKey()\n  }\n\n  const duplicateKey = cleanedKey in routeKeys\n\n  if (keyPrefix) {\n    routeKeys[cleanedKey] = `${keyPrefix}${key}`\n  } else {\n    routeKeys[cleanedKey] = key\n  }\n\n  // if the segment has an interception marker, make sure that's part of the regex pattern\n  // this is to ensure that the route with the interception marker doesn't incorrectly match\n  // the non-intercepted route (ie /app/(.)[username] should not match /app/[username])\n  const interceptionPrefix = interceptionMarker\n    ? escapeStringRegexp(interceptionMarker)\n    : ''\n\n  let pattern: string\n  if (duplicateKey && backreferenceDuplicateKeys) {\n    // Use a backreference to the key to ensure that the key is the same value\n    // in each of the placeholders.\n    pattern = `\\\\k<${cleanedKey}>`\n  } else if (repeat) {\n    pattern = `(?<${cleanedKey}>.+?)`\n  } else {\n    pattern = `(?<${cleanedKey}>[^/]+?)`\n  }\n\n  return {\n    key,\n    pattern: optional\n      ? `(?:/${interceptionPrefix}${pattern})?`\n      : `/${interceptionPrefix}${pattern}`,\n    cleanedKey: cleanedKey,\n    optional,\n    repeat,\n  }\n}\n\nfunction getNamedParametrizedRoute(\n  route: string,\n  prefixRouteKeys: boolean,\n  includeSuffix: boolean,\n  includePrefix: boolean,\n  backreferenceDuplicateKeys: boolean,\n  reference: RegexReference = { names: {}, intercepted: {} }\n) {\n  const getSafeRouteKey = buildGetSafeRouteKey()\n  const routeKeys: { [named: string]: string } = {}\n\n  const segments: string[] = []\n  const inverseParts: string[] = []\n\n  // Ensure we don't mutate the original reference object.\n  reference = structuredClone(reference)\n\n  for (const segment of removeTrailingSlash(route).slice(1).split('/')) {\n    const hasInterceptionMarker = INTERCEPTION_ROUTE_MARKERS.some((m) =>\n      segment.startsWith(m)\n    )\n\n    const paramMatches = segment.match(PARAMETER_PATTERN) // Check for parameters\n\n    const interceptionMarker = hasInterceptionMarker\n      ? paramMatches?.[1]\n      : undefined\n\n    let keyPrefix: string | undefined\n    if (interceptionMarker && paramMatches?.[2]) {\n      keyPrefix = prefixRouteKeys ? NEXT_INTERCEPTION_MARKER_PREFIX : undefined\n      reference.intercepted[paramMatches[2]] = interceptionMarker\n    } else if (paramMatches?.[2] && reference.intercepted[paramMatches[2]]) {\n      keyPrefix = prefixRouteKeys ? NEXT_INTERCEPTION_MARKER_PREFIX : undefined\n    } else {\n      keyPrefix = prefixRouteKeys ? NEXT_QUERY_PARAM_PREFIX : undefined\n    }\n\n    if (interceptionMarker && paramMatches && paramMatches[2]) {\n      // If there's an interception marker, add it to the segments.\n      const { key, pattern, cleanedKey, repeat, optional } =\n        getSafeKeyFromSegment({\n          getSafeRouteKey,\n          interceptionMarker,\n          segment: paramMatches[2],\n          routeKeys,\n          keyPrefix,\n          backreferenceDuplicateKeys,\n        })\n\n      segments.push(pattern)\n      inverseParts.push(\n        `/${paramMatches[1]}:${reference.names[key] ?? cleanedKey}${repeat ? (optional ? '*' : '+') : ''}`\n      )\n      reference.names[key] ??= cleanedKey\n    } else if (paramMatches && paramMatches[2]) {\n      // If there's a prefix, add it to the segments if it's enabled.\n      if (includePrefix && paramMatches[1]) {\n        segments.push(`/${escapeStringRegexp(paramMatches[1])}`)\n        inverseParts.push(`/${paramMatches[1]}`)\n      }\n\n      const { key, pattern, cleanedKey, repeat, optional } =\n        getSafeKeyFromSegment({\n          getSafeRouteKey,\n          segment: paramMatches[2],\n          routeKeys,\n          keyPrefix,\n          backreferenceDuplicateKeys,\n        })\n\n      // Remove the leading slash if includePrefix already added it.\n      let s = pattern\n      if (includePrefix && paramMatches[1]) {\n        s = s.substring(1)\n      }\n\n      segments.push(s)\n      inverseParts.push(\n        `/:${reference.names[key] ?? cleanedKey}${repeat ? (optional ? '*' : '+') : ''}`\n      )\n      reference.names[key] ??= cleanedKey\n    } else {\n      segments.push(`/${escapeStringRegexp(segment)}`)\n      inverseParts.push(`/${segment}`)\n    }\n\n    // If there's a suffix, add it to the segments if it's enabled.\n    if (includeSuffix && paramMatches && paramMatches[3]) {\n      segments.push(escapeStringRegexp(paramMatches[3]))\n      inverseParts.push(paramMatches[3])\n    }\n  }\n\n  return {\n    namedParameterizedRoute: segments.join(''),\n    routeKeys,\n    pathToRegexpPattern: inverseParts.join(''),\n    reference,\n  }\n}\n\n/**\n * This function extends `getRouteRegex` generating also a named regexp where\n * each group is named along with a routeKeys object that indexes the assigned\n * named group with its corresponding key. When the routeKeys need to be\n * prefixed to uniquely identify internally the \"prefixRouteKey\" arg should\n * be \"true\" currently this is only the case when creating the routes-manifest\n * during the build\n */\nexport function getNamedRouteRegex(\n  normalizedRoute: string,\n  options: GetNamedRouteRegexOptions\n) {\n  const result = getNamedParametrizedRoute(\n    normalizedRoute,\n    options.prefixRouteKeys,\n    options.includeSuffix ?? false,\n    options.includePrefix ?? false,\n    options.backreferenceDuplicateKeys ?? false,\n    options.reference\n  )\n\n  let namedRegex = result.namedParameterizedRoute\n  if (!options.excludeOptionalTrailingSlash) {\n    namedRegex += '(?:/)?'\n  }\n\n  return {\n    ...getRouteRegex(normalizedRoute, options),\n    namedRegex: `^${namedRegex}$`,\n    routeKeys: result.routeKeys,\n    pathToRegexpPattern: result.pathToRegexpPattern,\n    reference: result.reference,\n  }\n}\n\n/**\n * Generates a named regexp.\n * This is intended to be using for build time only.\n */\nexport function getNamedMiddlewareRegex(\n  normalizedRoute: string,\n  options: {\n    catchAll?: boolean\n  }\n) {\n  const { parameterizedRoute } = getParametrizedRoute(\n    normalizedRoute,\n    false,\n    false\n  )\n  const { catchAll = true } = options\n  if (parameterizedRoute === '/') {\n    let catchAllRegex = catchAll ? '.*' : ''\n    return {\n      namedRegex: `^/${catchAllRegex}$`,\n    }\n  }\n\n  const { namedParameterizedRoute } = getNamedParametrizedRoute(\n    normalizedRoute,\n    false,\n    false,\n    false,\n    false,\n    undefined\n  )\n  let catchAllGroupedRegex = catchAll ? '(?:(/.*)?)' : ''\n  return {\n    namedRegex: `^${namedParameterizedRoute}${catchAllGroupedRegex}$`,\n  }\n}\n","// Format function modified from nodejs\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nimport type { UrlObject } from 'url'\nimport type { ParsedUrlQuery } from 'querystring'\nimport * as querystring from './querystring'\n\nconst slashedProtocols = /https?|ftp|gopher|file/\n\nexport function formatUrl(urlObj: UrlObject) {\n  let { auth, hostname } = urlObj\n  let protocol = urlObj.protocol || ''\n  let pathname = urlObj.pathname || ''\n  let hash = urlObj.hash || ''\n  let query = urlObj.query || ''\n  let host: string | false = false\n\n  auth = auth ? encodeURIComponent(auth).replace(/%3A/i, ':') + '@' : ''\n\n  if (urlObj.host) {\n    host = auth + urlObj.host\n  } else if (hostname) {\n    host = auth + (~hostname.indexOf(':') ? `[${hostname}]` : hostname)\n    if (urlObj.port) {\n      host += ':' + urlObj.port\n    }\n  }\n\n  if (query && typeof query === 'object') {\n    query = String(querystring.urlQueryToSearchParams(query as ParsedUrlQuery))\n  }\n\n  let search = urlObj.search || (query && `?${query}`) || ''\n\n  if (protocol && !protocol.endsWith(':')) protocol += ':'\n\n  if (\n    urlObj.slashes ||\n    ((!protocol || slashedProtocols.test(protocol)) && host !== false)\n  ) {\n    host = '//' + (host || '')\n    if (pathname && pathname[0] !== '/') pathname = '/' + pathname\n  } else if (!host) {\n    host = ''\n  }\n\n  if (hash && hash[0] !== '#') hash = '#' + hash\n  if (search && search[0] !== '?') search = '?' + search\n\n  pathname = pathname.replace(/[?#]/g, encodeURIComponent)\n  search = search.replace('#', '%23')\n\n  return `${protocol}${host}${pathname}${search}${hash}`\n}\n\nexport const urlObjectKeys = [\n  'auth',\n  'hash',\n  'host',\n  'hostname',\n  'href',\n  'path',\n  'pathname',\n  'port',\n  'protocol',\n  'query',\n  'search',\n  'slashes',\n]\n\nexport function formatWithValidation(url: UrlObject): string {\n  if (process.env.NODE_ENV === 'development') {\n    if (url !== null && typeof url === 'object') {\n      Object.keys(url).forEach((key) => {\n        if (!urlObjectKeys.includes(key)) {\n          console.warn(\n            `Unknown key passed via urlObject into url.format: ${key}`\n          )\n        }\n      })\n    }\n  }\n\n  return formatUrl(url)\n}\n","import type { detectDomainLocale as Fn } from '../shared/lib/i18n/detect-domain-locale'\n\nexport const detectDomainLocale: typeof Fn = (...args) => {\n  if (process.env.__NEXT_I18N_SUPPORT) {\n    return (\n      require('../shared/lib/i18n/detect-domain-locale') as typeof import('../shared/lib/i18n/detect-domain-locale')\n    ).detectDomainLocale(...args)\n  }\n}\n","/**\n * Given a path this function will find the pathname, query and hash and return\n * them. This is useful to parse full paths on the client side.\n * @param path A path to parse e.g. /foo/bar?id=1#hash\n */\nexport function parsePath(path: string) {\n  const hashIndex = path.indexOf('#')\n  const queryIndex = path.indexOf('?')\n  const hasQuery = queryIndex > -1 && (hashIndex < 0 || queryIndex < hashIndex)\n\n  if (hasQuery || hashIndex > -1) {\n    return {\n      pathname: path.substring(0, hasQuery ? queryIndex : hashIndex),\n      query: hasQuery\n        ? path.substring(queryIndex, hashIndex > -1 ? hashIndex : undefined)\n        : '',\n      hash: hashIndex > -1 ? path.slice(hashIndex) : '',\n    }\n  }\n\n  return { pathname: path, query: '', hash: '' }\n}\n","import { removeTrailingSlash } from '../shared/lib/router/utils/remove-trailing-slash'\nimport { parsePath } from '../shared/lib/router/utils/parse-path'\n\n/**\n * Normalizes the trailing slash of a path according to the `trailingSlash` option\n * in `next.config.js`.\n */\nexport const normalizePathTrailingSlash = (path: string) => {\n  if (!path.startsWith('/') || process.env.__NEXT_MANUAL_TRAILING_SLASH) {\n    return path\n  }\n\n  const { pathname, query, hash } = parsePath(path)\n  if (process.env.__NEXT_TRAILING_SLASH) {\n    if (/\\.[^/]+\\/?$/.test(pathname)) {\n      return `${removeTrailingSlash(pathname)}${query}${hash}`\n    } else if (pathname.endsWith('/')) {\n      return `${pathname}${query}${hash}`\n    } else {\n      return `${pathname}/${query}${hash}`\n    }\n  }\n\n  return `${removeTrailingSlash(pathname)}${query}${hash}`\n}\n","import type { addLocale as Fn } from '../shared/lib/router/utils/add-locale'\nimport { normalizePathTrailingSlash } from './normalize-trailing-slash'\n\nexport const addLocale: typeof Fn = (path, ...args) => {\n  if (process.env.__NEXT_I18N_SUPPORT) {\n    return normalizePathTrailingSlash(\n      (\n        require('../shared/lib/router/utils/add-locale') as typeof import('../shared/lib/router/utils/add-locale')\n      ).addLocale(path, ...args)\n    )\n  }\n  return path\n}\n","import { parsePath } from '../shared/lib/router/utils/parse-path'\n\nexport function removeLocale(path: string, locale?: string) {\n  if (process.env.__NEXT_I18N_SUPPORT) {\n    const { pathname } = parsePath(path)\n    const pathLower = pathname.toLowerCase()\n    const localeLower = locale?.toLowerCase()\n\n    return locale &&\n      (pathLower.startsWith(`/${localeLower}/`) ||\n        pathLower === `/${localeLower}`)\n      ? `${pathname.length === locale.length + 1 ? `/` : ``}${path.slice(\n          locale.length + 1\n        )}`\n      : path\n  }\n  return path\n}\n","import { parsePath } from './parse-path'\n\n/**\n * Checks if a given path starts with a given prefix. It ensures it matches\n * exactly without containing extra chars. e.g. prefix /docs should replace\n * for /docs, /docs/, /docs/a but not /docsss\n * @param path The path to check.\n * @param prefix The prefix to check against.\n */\nexport function pathHasPrefix(path: string, prefix: string) {\n  if (typeof path !== 'string') {\n    return false\n  }\n\n  const { pathname } = parsePath(path)\n  return pathname === prefix || pathname.startsWith(prefix + '/')\n}\n","import { pathHasPrefix } from '../shared/lib/router/utils/path-has-prefix'\n\nconst basePath = (process.env.__NEXT_ROUTER_BASEPATH as string) || ''\n\nexport function hasBasePath(path: string): boolean {\n  return pathHasPrefix(path, basePath)\n}\n","import { hasBasePath } from './has-base-path'\n\nconst basePath = (process.env.__NEXT_ROUTER_BASEPATH as string) || ''\n\nexport function removeBasePath(path: string): string {\n  if (process.env.__NEXT_MANUAL_CLIENT_BASE_PATH) {\n    if (!hasBasePath(path)) {\n      return path\n    }\n  }\n\n  // Can't trim the basePath if it has zero length!\n  if (basePath.length === 0) return path\n\n  path = path.slice(basePath.length)\n  if (!path.startsWith('/')) path = `/${path}`\n  return path\n}\n","import { parsePath } from './parse-path'\n\n/**\n * Adds the provided prefix to the given path. It first ensures that the path\n * is indeed starting with a slash.\n */\nexport function addPathPrefix(path: string, prefix?: string) {\n  if (!path.startsWith('/') || !prefix) {\n    return path\n  }\n\n  const { pathname, query, hash } = parsePath(path)\n  return `${prefix}${pathname}${query}${hash}`\n}\n","import { addPathPrefix } from '../shared/lib/router/utils/add-path-prefix'\nimport { normalizePathTrailingSlash } from './normalize-trailing-slash'\n\nconst basePath = (process.env.__NEXT_ROUTER_BASEPATH as string) || ''\n\nexport function addBasePath(path: string, required?: boolean): string {\n  return normalizePathTrailingSlash(\n    process.env.__NEXT_MANUAL_CLIENT_BASE_PATH && !required\n      ? path\n      : addPathPrefix(path, basePath)\n  )\n}\n","export function omit<T extends { [key: string]: unknown }, K extends keyof T>(\n  object: T,\n  keys: K[]\n): Omit<T, K> {\n  const omitted: { [key: string]: unknown } = {}\n  Object.keys(object).forEach((key) => {\n    if (!keys.includes(key as K)) {\n      omitted[key] = object[key]\n    }\n  })\n  return omitted as Omit<T, K>\n}\n","import { isAbsoluteUrl, getLocationOrigin } from '../../utils'\nimport { hasBasePath } from '../../../../client/has-base-path'\n\n/**\n * Detects whether a given url is routable by the Next.js router (browser only).\n */\nexport function isLocalURL(url: string): boolean {\n  // prevent a hydration mismatch on href for url with anchor refs\n  if (!isAbsoluteUrl(url)) return true\n  try {\n    // absolute urls can be local if they are on the same origin\n    const locationOrigin = getLocationOrigin()\n    const resolved = new URL(url, locationOrigin)\n    return resolved.origin === locationOrigin && hasBasePath(resolved.pathname)\n  } catch (_) {\n    return false\n  }\n}\n","import type { ParsedUrlQuery } from 'querystring'\n\nimport { getRouteMatcher } from './route-matcher'\nimport { getRouteRegex } from './route-regex'\n\nexport function interpolateAs(\n  route: string,\n  asPathname: string,\n  query: ParsedUrlQuery\n) {\n  let interpolatedRoute = ''\n\n  const dynamicRegex = getRouteRegex(route)\n  const dynamicGroups = dynamicRegex.groups\n  const dynamicMatches =\n    // Try to match the dynamic route against the asPath\n    (asPathname !== route ? getRouteMatcher(dynamicRegex)(asPathname) : '') ||\n    // Fall back to reading the values from the href\n    // TODO: should this take priority; also need to change in the router.\n    query\n\n  interpolatedRoute = route\n  const params = Object.keys(dynamicGroups)\n\n  if (\n    !params.every((param) => {\n      let value = dynamicMatches[param] || ''\n      const { repeat, optional } = dynamicGroups[param]\n\n      // support single-level catch-all\n      // TODO: more robust handling for user-error (passing `/`)\n      let replaced = `[${repeat ? '...' : ''}${param}]`\n      if (optional) {\n        replaced = `${!value ? '/' : ''}[${replaced}]`\n      }\n      if (repeat && !Array.isArray(value)) value = [value]\n\n      return (\n        (optional || param in dynamicMatches) &&\n        // Interpolate group into data URL if present\n        (interpolatedRoute =\n          interpolatedRoute!.replace(\n            replaced,\n            repeat\n              ? (value as string[])\n                  .map(\n                    // these values should be fully encoded instead of just\n                    // path delimiter escaped since they are being inserted\n                    // into the URL and we expect URL encoded segments\n                    // when parsing dynamic route params\n                    (segment) => encodeURIComponent(segment)\n                  )\n                  .join('/')\n              : encodeURIComponent(value as string)\n          ) || '/')\n      )\n    })\n  ) {\n    interpolatedRoute = '' // did not satisfy all requirements\n\n    // n.b. We ignore this error because we handle warning for this case in\n    // development in the `<Link>` component directly.\n  }\n  return {\n    params,\n    result: interpolatedRoute,\n  }\n}\n","import type { NextRouter, Url } from '../shared/lib/router/router'\n\nimport { searchParamsToUrlQuery } from '../shared/lib/router/utils/querystring'\nimport { formatWithValidation } from '../shared/lib/router/utils/format-url'\nimport { omit } from '../shared/lib/router/utils/omit'\nimport { normalizeRepeatedSlashes } from '../shared/lib/utils'\nimport { normalizePathTrailingSlash } from './normalize-trailing-slash'\nimport { isLocalURL } from '../shared/lib/router/utils/is-local-url'\nimport { isDynamicRoute } from '../shared/lib/router/utils'\nimport { interpolateAs } from '../shared/lib/router/utils/interpolate-as'\nimport { getRouteRegex } from '../shared/lib/router/utils/route-regex'\nimport { getRouteMatcher } from '../shared/lib/router/utils/route-matcher'\n\n/**\n * Resolves a given hyperlink with a certain router state (basePath not included).\n * Preserves absolute urls.\n */\nexport function resolveHref(\n  router: NextRouter,\n  href: Url,\n  resolveAs: true\n): [string, string] | [string]\nexport function resolveHref(\n  router: NextRouter,\n  href: Url,\n  resolveAs?: false\n): string\nexport function resolveHref(\n  router: NextRouter,\n  href: Url,\n  resolveAs?: boolean\n): [string, string] | [string] | string {\n  // we use a dummy base url for relative urls\n  let base: URL\n  let urlAsString = typeof href === 'string' ? href : formatWithValidation(href)\n\n  // repeated slashes and backslashes in the URL are considered\n  // invalid and will never match a Next.js page/file\n  // https://www.rfc-editor.org/rfc/rfc3986.html#section-3.1\n  const urlProtoMatch = urlAsString.match(/^[a-z][a-z0-9+.-]*:\\/\\//i)\n  const urlAsStringNoProto = urlProtoMatch\n    ? urlAsString.slice(urlProtoMatch[0].length)\n    : urlAsString\n\n  const urlParts = urlAsStringNoProto.split('?', 1)\n\n  if ((urlParts[0] || '').match(/(\\/\\/|\\\\)/)) {\n    console.error(\n      `Invalid href '${urlAsString}' passed to next/router in page: '${router.pathname}'. Repeated forward-slashes (//) or backslashes \\\\ are not valid in the href.`\n    )\n    const normalizedUrl = normalizeRepeatedSlashes(urlAsStringNoProto)\n    urlAsString = (urlProtoMatch ? urlProtoMatch[0] : '') + normalizedUrl\n  }\n\n  // Return because it cannot be routed by the Next.js router\n  if (!isLocalURL(urlAsString)) {\n    return (resolveAs ? [urlAsString] : urlAsString) as string\n  }\n\n  try {\n    let baseBase = urlAsString.startsWith('#') ? router.asPath : router.pathname\n\n    // If the provided href is only a query string, it is safer to use the asPath\n    // considering rewrites.\n    if (urlAsString.startsWith('?')) {\n      baseBase = router.asPath\n\n      // However, if is a dynamic route, we need to use the pathname to preserve the\n      // query interpolation and rewrites (router.pathname will look like \"/[slug]\").\n      if (isDynamicRoute(router.pathname)) {\n        baseBase = router.pathname\n\n        const routeRegex = getRouteRegex(router.pathname)\n        const match = getRouteMatcher(routeRegex)(router.asPath)\n\n        // For dynamic routes, if asPath doesn't match the pathname regex, it is a rewritten path.\n        // In this case, should use asPath to preserve the current URL.\n        if (!match) {\n          baseBase = router.asPath\n        }\n\n        // Note: There is an edge case where the pathname is dynamic, and also a rewrite path to the same segment.\n        // E.g. in \"/[slug]\" path, rewrite \"/foo\" -> \"/bar\"\n\n        // In this case, it will be treated as a non-rewritten path and possibly interpolate the query string.\n        // E.g., \"/any?slug=foo\" will become the content of \"/foo\", not rewritten as \"/bar\"\n\n        // This is currently a trade-off of not resolving rewrite paths on every Router/Link call,\n        // but using a lighter route regex pattern check.\n      }\n    }\n\n    base = new URL(baseBase, 'http://n')\n  } catch (_) {\n    // fallback to / for invalid asPath values e.g. //\n    base = new URL('/', 'http://n')\n  }\n\n  try {\n    const finalUrl = new URL(urlAsString, base)\n    finalUrl.pathname = normalizePathTrailingSlash(finalUrl.pathname)\n    let interpolatedAs = ''\n\n    if (\n      isDynamicRoute(finalUrl.pathname) &&\n      finalUrl.searchParams &&\n      resolveAs\n    ) {\n      const query = searchParamsToUrlQuery(finalUrl.searchParams)\n\n      const { result, params } = interpolateAs(\n        finalUrl.pathname,\n        finalUrl.pathname,\n        query\n      )\n\n      if (result) {\n        interpolatedAs = formatWithValidation({\n          pathname: result,\n          hash: finalUrl.hash,\n          query: omit(query, params),\n        })\n      }\n    }\n\n    // if the origin didn't change, it means we received a relative href\n    const resolvedHref =\n      finalUrl.origin === base.origin\n        ? finalUrl.href.slice(finalUrl.origin.length)\n        : finalUrl.href\n\n    return resolveAs\n      ? [resolvedHref, interpolatedAs || resolvedHref]\n      : resolvedHref\n  } catch (_) {\n    return resolveAs ? [urlAsString] : urlAsString\n  }\n}\n","export function isAPIRoute(value?: string) {\n  return value === '/api' || Boolean(value?.startsWith('/api/'))\n}\n","import { pathHasPrefix } from './path-has-prefix'\n\n/**\n * Given a path and a prefix it will remove the prefix when it exists in the\n * given path. It ensures it matches exactly without containing extra chars\n * and if the prefix is not there it will be noop.\n *\n * @param path The path to remove the prefix from.\n * @param prefix The prefix to be removed.\n */\nexport function removePathPrefix(path: string, prefix: string): string {\n  // If the path doesn't start with the prefix we can return it as is. This\n  // protects us from situations where the prefix is a substring of the path\n  // prefix such as:\n  //\n  // For prefix: /blog\n  //\n  //   /blog -> true\n  //   /blog/ -> true\n  //   /blog/1 -> true\n  //   /blogging -> false\n  //   /blogging/ -> false\n  //   /blogging/1 -> false\n  if (!pathHasPrefix(path, prefix)) {\n    return path\n  }\n\n  // Remove the prefix from the path via slicing.\n  const withoutPrefix = path.slice(prefix.length)\n\n  // If the path without the prefix starts with a `/` we can return it as is.\n  if (withoutPrefix.startsWith('/')) {\n    return withoutPrefix\n  }\n\n  // If the path without the prefix doesn't start with a `/` we need to add it\n  // back to the path to make sure it's a valid path.\n  return `/${withoutPrefix}`\n}\n","import { normalizeLocalePath } from '../../i18n/normalize-locale-path'\nimport { removePathPrefix } from './remove-path-prefix'\nimport { pathHasPrefix } from './path-has-prefix'\nimport type { I18NProvider } from '../../../../server/lib/i18n-provider'\n\nexport interface NextPathnameInfo {\n  /**\n   * The base path in case the pathname included it.\n   */\n  basePath?: string\n  /**\n   * The buildId for when the parsed URL is a data URL. Parsing it can be\n   * disabled with the `parseData` option.\n   */\n  buildId?: string\n  /**\n   * If there was a locale in the pathname, this will hold its value.\n   */\n  locale?: string\n  /**\n   * The processed pathname without a base path, locale, or data URL elements\n   * when parsing it is enabled.\n   */\n  pathname: string\n  /**\n   * A boolean telling if the pathname had a trailingSlash. This can be only\n   * true if trailingSlash is enabled.\n   */\n  trailingSlash?: boolean\n}\n\ninterface Options {\n  /**\n   * When passed to true, this function will also parse Nextjs data URLs.\n   */\n  parseData?: boolean\n  /**\n   * A partial of the Next.js configuration to parse the URL.\n   */\n  nextConfig?: {\n    basePath?: string\n    i18n?: { locales?: readonly string[] } | null\n    trailingSlash?: boolean\n  }\n\n  /**\n   * If provided, this normalizer will be used to detect the locale instead of\n   * the default locale detection.\n   */\n  i18nProvider?: I18NProvider\n}\n\nexport function getNextPathnameInfo(\n  pathname: string,\n  options: Options\n): NextPathnameInfo {\n  const { basePath, i18n, trailingSlash } = options.nextConfig ?? {}\n  const info: NextPathnameInfo = {\n    pathname,\n    trailingSlash: pathname !== '/' ? pathname.endsWith('/') : trailingSlash,\n  }\n\n  if (basePath && pathHasPrefix(info.pathname, basePath)) {\n    info.pathname = removePathPrefix(info.pathname, basePath)\n    info.basePath = basePath\n  }\n  let pathnameNoDataPrefix = info.pathname\n\n  if (\n    info.pathname.startsWith('/_next/data/') &&\n    info.pathname.endsWith('.json')\n  ) {\n    const paths = info.pathname\n      .replace(/^\\/_next\\/data\\//, '')\n      .replace(/\\.json$/, '')\n      .split('/')\n\n    const buildId = paths[0]\n    info.buildId = buildId\n    pathnameNoDataPrefix =\n      paths[1] !== 'index' ? `/${paths.slice(1).join('/')}` : '/'\n\n    // update pathname with normalized if enabled although\n    // we use normalized to populate locale info still\n    if (options.parseData === true) {\n      info.pathname = pathnameNoDataPrefix\n    }\n  }\n\n  // If provided, use the locale route normalizer to detect the locale instead\n  // of the function below.\n  if (i18n) {\n    let result = options.i18nProvider\n      ? options.i18nProvider.analyze(info.pathname)\n      : normalizeLocalePath(info.pathname, i18n.locales)\n\n    info.locale = result.detectedLocale\n    info.pathname = result.pathname ?? info.pathname\n\n    if (!result.detectedLocale && info.buildId) {\n      result = options.i18nProvider\n        ? options.i18nProvider.analyze(pathnameNoDataPrefix)\n        : normalizeLocalePath(pathnameNoDataPrefix, i18n.locales)\n\n      if (result.detectedLocale) {\n        info.locale = result.detectedLocale\n      }\n    }\n  }\n  return info\n}\n","import { parsePath } from './parse-path'\n\n/**\n * Similarly to `addPathPrefix`, this function adds a suffix at the end on the\n * provided path. It also works only for paths ensuring the argument starts\n * with a slash.\n */\nexport function addPathSuffix(path: string, suffix?: string) {\n  if (!path.startsWith('/') || !suffix) {\n    return path\n  }\n\n  const { pathname, query, hash } = parsePath(path)\n  return `${pathname}${suffix}${query}${hash}`\n}\n","import { addPathPrefix } from './add-path-prefix'\nimport { pathHasPrefix } from './path-has-prefix'\n\n/**\n * For a given path and a locale, if the locale is given, it will prefix the\n * locale. The path shouldn't be an API path. If a default locale is given the\n * prefix will be omitted if the locale is already the default locale.\n */\nexport function addLocale(\n  path: string,\n  locale?: string | false,\n  defaultLocale?: string,\n  ignorePrefix?: boolean\n) {\n  // If no locale was given or the locale is the default locale, we don't need\n  // to prefix the path.\n  if (!locale || locale === defaultLocale) return path\n\n  const lower = path.toLowerCase()\n\n  // If the path is an API path or the path already has the locale prefix, we\n  // don't need to prefix the path.\n  if (!ignorePrefix) {\n    if (pathHasPrefix(lower, '/api')) return path\n    if (pathHasPrefix(lower, `/${locale.toLowerCase()}`)) return path\n  }\n\n  // Add the locale prefix to the path.\n  return addPathPrefix(path, `/${locale}`)\n}\n","import type { NextPathnameInfo } from './get-next-pathname-info'\nimport { removeTrailingSlash } from './remove-trailing-slash'\nimport { addPathPrefix } from './add-path-prefix'\nimport { addPathSuffix } from './add-path-suffix'\nimport { addLocale } from './add-locale'\n\ninterface ExtendedInfo extends NextPathnameInfo {\n  defaultLocale?: string\n  ignorePrefix?: boolean\n}\n\nexport function formatNextPathnameInfo(info: ExtendedInfo) {\n  let pathname = addLocale(\n    info.pathname,\n    info.locale,\n    info.buildId ? undefined : info.defaultLocale,\n    info.ignorePrefix\n  )\n\n  if (info.buildId || !info.trailingSlash) {\n    pathname = removeTrailingSlash(pathname)\n  }\n\n  if (info.buildId) {\n    pathname = addPathSuffix(\n      addPathPrefix(pathname, `/_next/data/${info.buildId}`),\n      info.pathname === '/' ? 'index.json' : '.json'\n    )\n  }\n\n  pathname = addPathPrefix(pathname, info.basePath)\n  return !info.buildId && info.trailingSlash\n    ? !pathname.endsWith('/')\n      ? addPathSuffix(pathname, '/')\n      : pathname\n    : removeTrailingSlash(pathname)\n}\n","import type { default as Router } from '../router'\n\nexport function compareRouterStates(a: Router['state'], b: Router['state']) {\n  const stateKeys = Object.keys(a)\n  if (stateKeys.length !== Object.keys(b).length) return false\n\n  for (let i = stateKeys.length; i--; ) {\n    const key = stateKeys[i]\n    if (key === 'query') {\n      const queryKeys = Object.keys(a.query)\n      if (queryKeys.length !== Object.keys(b.query).length) {\n        return false\n      }\n      for (let j = queryKeys.length; j--; ) {\n        const queryKey = queryKeys[j]\n        if (\n          !b.query.hasOwnProperty(queryKey) ||\n          a.query[queryKey] !== b.query[queryKey]\n        ) {\n          return false\n        }\n      }\n    } else if (\n      !b.hasOwnProperty(key) ||\n      a[key as keyof Router['state']] !== b[key as keyof Router['state']]\n    ) {\n      return false\n    }\n  }\n\n  return true\n}\n","// This regex contains the bots that we need to do a blocking render for and can't safely stream the response\n// due to how they parse the DOM. For example, they might explicitly check for metadata in the `head` tag, so we can't stream metadata tags after the `head` was sent.\n// Note: The pattern [\\w-]+-Google captures all Google crawlers with \"-Google\" suffix (e.g., Mediapartners-Google, AdsBot-Google, Storebot-Google)\n// as well as crawlers starting with \"Google-\" (e.g., Google-PageRenderer, Google-InspectionTool)\nexport const HTML_LIMITED_BOT_UA_RE =\n  /[\\w-]+-Google|Google-[\\w-]+|Chrome-Lighthouse|Slurp|DuckDuckBot|baiduspider|yandex|sogou|bitlybot|tumblr|vkShare|quora link preview|redditbot|ia_archiver|Bingbot|BingPreview|applebot|facebookexternalhit|facebookcatalog|Twitterbot|LinkedInBot|Slackbot|Discordbot|WhatsApp|SkypeUriPreview|Yeti|googleweblight/i\n","import { HTML_LIMITED_BOT_UA_RE } from './html-bots'\n\n// Bot crawler that will spin up a headless browser and execute JS.\n// Only the main Googlebot search crawler executes JavaScript, not other Google crawlers.\n// x-ref: https://developers.google.com/search/docs/crawling-indexing/google-common-crawlers\n// This regex specifically matches \"Googlebot\" but NOT \"Mediapartners-Google\", \"AdsBot-Google\", etc.\nconst HEADLESS_BROWSER_BOT_UA_RE = /Googlebot(?!-)|Googlebot$/i\n\nexport const HTML_LIMITED_BOT_UA_RE_STRING = HTML_LIMITED_BOT_UA_RE.source\n\nexport { HTML_LIMITED_BOT_UA_RE }\n\nfunction isDomBotUA(userAgent: string) {\n  return HEADLESS_BROWSER_BOT_UA_RE.test(userAgent)\n}\n\nfunction isHtmlLimitedBotUA(userAgent: string) {\n  return HTML_LIMITED_BOT_UA_RE.test(userAgent)\n}\n\nexport function isBot(userAgent: string): boolean {\n  return isDomBotUA(userAgent) || isHtmlLimitedBotUA(userAgent)\n}\n\nexport function getBotType(userAgent: string): 'dom' | 'html' | undefined {\n  if (isDomBotUA(userAgent)) {\n    return 'dom'\n  }\n  if (isHtmlLimitedBotUA(userAgent)) {\n    return 'html'\n  }\n  return undefined\n}\n","import { warnOnce } from '../../utils/warn-once'\n\n/**\n * Run function with `scroll-behavior: auto` applied to `<html/>`.\n * This css change will be reverted after the function finishes.\n */\nexport function disableSmoothScrollDuringRouteTransition(\n  fn: () => void,\n  options: { dontForceLayout?: boolean; onlyHashChange?: boolean } = {}\n) {\n  // if only the hash is changed, we don't need to disable smooth scrolling\n  // we only care to prevent smooth scrolling when navigating to a new page to avoid jarring UX\n  if (options.onlyHashChange) {\n    fn()\n    return\n  }\n\n  const htmlElement = document.documentElement\n  const hasDataAttribute = htmlElement.dataset.scrollBehavior === 'smooth'\n\n  if (!hasDataAttribute) {\n    // Warn if smooth scrolling is detected but no data attribute is present\n    if (\n      process.env.NODE_ENV === 'development' &&\n      getComputedStyle(htmlElement).scrollBehavior === 'smooth'\n    ) {\n      warnOnce(\n        'Detected `scroll-behavior: smooth` on the `<html>` element. To disable smooth scrolling during route transitions, ' +\n          'add `data-scroll-behavior=\"smooth\"` to your <html> element. ' +\n          'Learn more: https://nextjs.org/docs/messages/missing-data-scroll-behavior'\n      )\n    }\n    // No smooth scrolling configured, run directly without style manipulation\n    fn()\n    return\n  }\n\n  // Proceed with temporarily disabling smooth scrolling\n  const existing = htmlElement.style.scrollBehavior\n  htmlElement.style.scrollBehavior = 'auto'\n  if (!options.dontForceLayout) {\n    // In Chrome-based browsers we need to force reflow before calling `scrollTo`.\n    // Otherwise it will not pickup the change in scrollBehavior\n    // More info here: https://github.com/vercel/next.js/issues/40719#issuecomment-1336248042\n    htmlElement.getClientRects()\n  }\n  fn()\n  htmlElement.style.scrollBehavior = existing\n}\n","import type { ComponentType } from 'react'\nimport type { DomainLocale } from '../../../server/config'\nimport type { MittEmitter } from '../mitt'\nimport type { ParsedUrlQuery } from 'querystring'\nimport type { RouterEvent } from '../../../client/router'\nimport type { StyleSheetTuple } from '../../../client/page-loader'\nimport type { UrlObject } from 'url'\nimport type PageLoader from '../../../client/page-loader'\nimport type { AppContextType, NextPageContext, NEXT_DATA } from '../utils'\nimport { removeTrailingSlash } from './utils/remove-trailing-slash'\nimport {\n  getClientBuildManifest,\n  isAssetError,\n  markAssetError,\n} from '../../../client/route-loader'\nimport { handleClientScriptLoad } from '../../../client/script'\nimport isError, { getProperError } from '../../../lib/is-error'\nimport { denormalizePagePath } from '../page-path/denormalize-page-path'\nimport { normalizeLocalePath } from '../i18n/normalize-locale-path'\nimport mitt from '../mitt'\nimport { getLocationOrigin, getURL, loadGetInitialProps, ST } from '../utils'\nimport { isDynamicRoute } from './utils/is-dynamic'\nimport { parseRelativeUrl } from './utils/parse-relative-url'\nimport { getRouteMatcher } from './utils/route-matcher'\nimport { getRouteRegex } from './utils/route-regex'\nimport { formatWithValidation } from './utils/format-url'\nimport { detectDomainLocale } from '../../../client/detect-domain-locale'\nimport { parsePath } from './utils/parse-path'\nimport { addLocale } from '../../../client/add-locale'\nimport { removeLocale } from '../../../client/remove-locale'\nimport { removeBasePath } from '../../../client/remove-base-path'\nimport { addBasePath } from '../../../client/add-base-path'\nimport { hasBasePath } from '../../../client/has-base-path'\nimport { resolveHref } from '../../../client/resolve-href'\nimport { isAPIRoute } from '../../../lib/is-api-route'\nimport { getNextPathnameInfo } from './utils/get-next-pathname-info'\nimport { formatNextPathnameInfo } from './utils/format-next-pathname-info'\nimport { compareRouterStates } from './utils/compare-states'\nimport { isLocalURL } from './utils/is-local-url'\nimport { isBot } from './utils/is-bot'\nimport { omit } from './utils/omit'\nimport { interpolateAs } from './utils/interpolate-as'\nimport { disableSmoothScrollDuringRouteTransition } from './utils/disable-smooth-scroll'\nimport type { Params } from '../../../server/request/params'\nimport { MATCHED_PATH_HEADER } from '../../../lib/constants'\n\nlet resolveRewrites: typeof import('./utils/resolve-rewrites').default\nif (process.env.__NEXT_HAS_REWRITES) {\n  resolveRewrites = (\n    require('./utils/resolve-rewrites') as typeof import('./utils/resolve-rewrites')\n  ).default\n}\n\ndeclare global {\n  interface Window {\n    /* prod */\n    __NEXT_DATA__: NEXT_DATA\n  }\n}\n\ninterface RouteProperties {\n  shallow: boolean\n}\n\ninterface TransitionOptions {\n  shallow?: boolean\n  locale?: string | false\n  scroll?: boolean\n  unstable_skipClientCache?: boolean\n}\n\ninterface NextHistoryState {\n  url: string\n  as: string\n  options: TransitionOptions\n}\n\nexport type HistoryState =\n  | null\n  | { __NA: true; __N?: false }\n  | { __N: false; __NA?: false }\n  | ({ __NA?: false; __N: true; key: string } & NextHistoryState)\n\nfunction buildCancellationError() {\n  return Object.assign(new Error('Route Cancelled'), {\n    cancelled: true,\n  })\n}\n\ninterface MiddlewareEffectParams<T extends FetchDataOutput> {\n  fetchData?: () => Promise<T>\n  locale?: string\n  asPath: string\n  router: Router\n}\n\nexport async function matchesMiddleware<T extends FetchDataOutput>(\n  options: MiddlewareEffectParams<T>\n): Promise<boolean> {\n  const matchers = await Promise.resolve(\n    options.router.pageLoader.getMiddleware()\n  )\n  if (!matchers) return false\n\n  const { pathname: asPathname } = parsePath(options.asPath)\n  // remove basePath first since path prefix has to be in the order of `/${basePath}/${locale}`\n  const cleanedAs = hasBasePath(asPathname)\n    ? removeBasePath(asPathname)\n    : asPathname\n  const asWithBasePathAndLocale = addBasePath(\n    addLocale(cleanedAs, options.locale)\n  )\n\n  // Check only path match on client. Matching \"has\" should be done on server\n  // where we can access more info such as headers, HttpOnly cookie, etc.\n  return matchers.some((m) =>\n    new RegExp(m.regexp).test(asWithBasePathAndLocale)\n  )\n}\n\nfunction stripOrigin(url: string) {\n  const origin = getLocationOrigin()\n\n  return url.startsWith(origin) ? url.substring(origin.length) : url\n}\n\nfunction prepareUrlAs(router: NextRouter, url: Url, as?: Url) {\n  // If url and as provided as an object representation,\n  // we'll format them into the string version here.\n  let [resolvedHref, resolvedAs] = resolveHref(router, url, true)\n  const origin = getLocationOrigin()\n  const hrefWasAbsolute = resolvedHref.startsWith(origin)\n  const asWasAbsolute = resolvedAs && resolvedAs.startsWith(origin)\n\n  resolvedHref = stripOrigin(resolvedHref)\n  resolvedAs = resolvedAs ? stripOrigin(resolvedAs) : resolvedAs\n\n  const preparedUrl = hrefWasAbsolute ? resolvedHref : addBasePath(resolvedHref)\n  const preparedAs = as\n    ? stripOrigin(resolveHref(router, as))\n    : resolvedAs || resolvedHref\n\n  return {\n    url: preparedUrl,\n    as: asWasAbsolute ? preparedAs : addBasePath(preparedAs),\n  }\n}\n\nfunction resolveDynamicRoute(pathname: string, pages: string[]) {\n  const cleanPathname = removeTrailingSlash(denormalizePagePath(pathname))\n  if (cleanPathname === '/404' || cleanPathname === '/_error') {\n    return pathname\n  }\n\n  // handle resolving href for dynamic routes\n  if (!pages.includes(cleanPathname)) {\n    // eslint-disable-next-line array-callback-return\n    pages.some((page) => {\n      if (isDynamicRoute(page) && getRouteRegex(page).re.test(cleanPathname)) {\n        pathname = page\n        return true\n      }\n    })\n  }\n  return removeTrailingSlash(pathname)\n}\n\nfunction getMiddlewareData<T extends FetchDataOutput>(\n  source: string,\n  response: Response,\n  options: MiddlewareEffectParams<T>\n) {\n  const nextConfig = {\n    basePath: options.router.basePath,\n    i18n: { locales: options.router.locales },\n    trailingSlash: Boolean(process.env.__NEXT_TRAILING_SLASH),\n  }\n  const rewriteHeader = response.headers.get('x-nextjs-rewrite')\n\n  let rewriteTarget =\n    rewriteHeader || response.headers.get('x-nextjs-matched-path')\n\n  const matchedPath = response.headers.get(MATCHED_PATH_HEADER)\n\n  if (\n    matchedPath &&\n    !rewriteTarget &&\n    !matchedPath.includes('__next_data_catchall') &&\n    !matchedPath.includes('/_error') &&\n    !matchedPath.includes('/404')\n  ) {\n    // leverage x-matched-path to detect next.config.js rewrites\n    rewriteTarget = matchedPath\n  }\n\n  if (rewriteTarget) {\n    if (\n      rewriteTarget.startsWith('/') ||\n      process.env.__NEXT_EXTERNAL_MIDDLEWARE_REWRITE_RESOLVE\n    ) {\n      const parsedRewriteTarget = parseRelativeUrl(rewriteTarget)\n      const pathnameInfo = getNextPathnameInfo(parsedRewriteTarget.pathname, {\n        nextConfig,\n        parseData: true,\n      })\n\n      let fsPathname = removeTrailingSlash(pathnameInfo.pathname)\n      return Promise.all([\n        options.router.pageLoader.getPageList(),\n        getClientBuildManifest(),\n      ]).then(([pages, { __rewrites: rewrites }]: any) => {\n        let as = addLocale(pathnameInfo.pathname, pathnameInfo.locale)\n\n        if (\n          isDynamicRoute(as) ||\n          (!rewriteHeader &&\n            pages.includes(\n              normalizeLocalePath(removeBasePath(as), options.router.locales)\n                .pathname\n            ))\n        ) {\n          const parsedSource = getNextPathnameInfo(\n            parseRelativeUrl(source).pathname,\n            {\n              nextConfig: process.env.__NEXT_HAS_REWRITES\n                ? undefined\n                : nextConfig,\n              parseData: true,\n            }\n          )\n\n          as = addBasePath(parsedSource.pathname)\n          parsedRewriteTarget.pathname = as\n        }\n\n        if (process.env.__NEXT_HAS_REWRITES) {\n          const result = resolveRewrites(\n            as,\n            pages,\n            rewrites,\n            parsedRewriteTarget.query,\n            (path: string) => resolveDynamicRoute(path, pages),\n            options.router.locales\n          )\n\n          if (result.matchedPage) {\n            parsedRewriteTarget.pathname = result.parsedAs.pathname\n            as = parsedRewriteTarget.pathname\n            Object.assign(parsedRewriteTarget.query, result.parsedAs.query)\n          }\n        } else if (!pages.includes(fsPathname)) {\n          const resolvedPathname = resolveDynamicRoute(fsPathname, pages)\n\n          if (resolvedPathname !== fsPathname) {\n            fsPathname = resolvedPathname\n          }\n        }\n\n        const resolvedHref = !pages.includes(fsPathname)\n          ? resolveDynamicRoute(\n              normalizeLocalePath(\n                removeBasePath(parsedRewriteTarget.pathname),\n                options.router.locales\n              ).pathname,\n              pages\n            )\n          : fsPathname\n\n        if (isDynamicRoute(resolvedHref)) {\n          const matches = getRouteMatcher(getRouteRegex(resolvedHref))(as)\n          Object.assign(parsedRewriteTarget.query, matches || {})\n        }\n\n        return {\n          type: 'rewrite' as const,\n          parsedAs: parsedRewriteTarget,\n          resolvedHref,\n        }\n      })\n    }\n    const src = parsePath(source)\n    const pathname = formatNextPathnameInfo({\n      ...getNextPathnameInfo(src.pathname, { nextConfig, parseData: true }),\n      defaultLocale: options.router.defaultLocale,\n      buildId: '',\n    })\n\n    return Promise.resolve({\n      type: 'redirect-external' as const,\n      destination: `${pathname}${src.query}${src.hash}`,\n    })\n  }\n\n  const redirectTarget = response.headers.get('x-nextjs-redirect')\n\n  if (redirectTarget) {\n    if (redirectTarget.startsWith('/')) {\n      const src = parsePath(redirectTarget)\n      const pathname = formatNextPathnameInfo({\n        ...getNextPathnameInfo(src.pathname, { nextConfig, parseData: true }),\n        defaultLocale: options.router.defaultLocale,\n        buildId: '',\n      })\n\n      return Promise.resolve({\n        type: 'redirect-internal' as const,\n        newAs: `${pathname}${src.query}${src.hash}`,\n        newUrl: `${pathname}${src.query}${src.hash}`,\n      })\n    }\n\n    return Promise.resolve({\n      type: 'redirect-external' as const,\n      destination: redirectTarget,\n    })\n  }\n\n  return Promise.resolve({ type: 'next' as const })\n}\n\ninterface WithMiddlewareEffectsOutput extends FetchDataOutput {\n  effect: Awaited<ReturnType<typeof getMiddlewareData>>\n}\n\nasync function withMiddlewareEffects<T extends FetchDataOutput>(\n  options: MiddlewareEffectParams<T>\n): Promise<WithMiddlewareEffectsOutput | null> {\n  const matches = await matchesMiddleware(options)\n  if (!matches || !options.fetchData) {\n    return null\n  }\n\n  const data = await options.fetchData()\n\n  const effect = await getMiddlewareData(data.dataHref, data.response, options)\n\n  return {\n    dataHref: data.dataHref,\n    json: data.json,\n    response: data.response,\n    text: data.text,\n    cacheKey: data.cacheKey,\n    effect,\n  }\n}\n\nexport type Url = UrlObject | string\n\nexport type BaseRouter = {\n  route: string\n  pathname: string\n  query: ParsedUrlQuery\n  asPath: string\n  basePath: string\n  locale?: string | undefined\n  locales?: readonly string[] | undefined\n  defaultLocale?: string | undefined\n  domainLocales?: readonly DomainLocale[] | undefined\n  isLocaleDomain: boolean\n}\n\nexport type NextRouter = BaseRouter &\n  Pick<\n    Router,\n    | 'push'\n    | 'replace'\n    | 'reload'\n    | 'back'\n    | 'forward'\n    | 'prefetch'\n    | 'beforePopState'\n    | 'events'\n    | 'isFallback'\n    | 'isReady'\n    | 'isPreview'\n  >\n\nexport type PrefetchOptions = {\n  priority?: boolean\n  locale?: string | false\n  unstable_skipClientCache?: boolean\n}\n\nexport type PrivateRouteInfo =\n  | (Omit<CompletePrivateRouteInfo, 'styleSheets'> & { initial: true })\n  | CompletePrivateRouteInfo\n\nexport type CompletePrivateRouteInfo = {\n  Component: ComponentType\n  styleSheets: StyleSheetTuple[]\n  __N_SSG?: boolean\n  __N_SSP?: boolean\n  props?: Record<string, any>\n  err?: Error\n  error?: any\n  route?: string\n  resolvedAs?: string\n  query?: ParsedUrlQuery\n}\n\nexport type AppProps = Pick<CompletePrivateRouteInfo, 'Component' | 'err'> & {\n  router: Router\n} & Record<string, any>\nexport type AppComponent = ComponentType<AppProps>\n\ntype Subscription = (\n  data: PrivateRouteInfo,\n  App: AppComponent,\n  resetScroll: { x: number; y: number } | null\n) => Promise<void>\n\ntype BeforePopStateCallback = (state: NextHistoryState) => boolean\n\ntype ComponentLoadCancel = (() => void) | null\n\ntype HistoryMethod = 'replaceState' | 'pushState'\n\nconst manualScrollRestoration =\n  process.env.__NEXT_SCROLL_RESTORATION &&\n  typeof window !== 'undefined' &&\n  'scrollRestoration' in window.history &&\n  !!(function () {\n    try {\n      let v = '__next'\n      return (sessionStorage.setItem(v, v), sessionStorage.removeItem(v), true)\n    } catch (n) {}\n  })()\n\nconst SSG_DATA_NOT_FOUND = Symbol('SSG_DATA_NOT_FOUND')\n\nfunction fetchRetry(\n  url: string,\n  attempts: number,\n  options: Pick<RequestInit, 'method' | 'headers'>\n): Promise<Response> {\n  return fetch(url, {\n    // Cookies are required to be present for Next.js' SSG \"Preview Mode\".\n    // Cookies may also be required for `getServerSideProps`.\n    //\n    // > `fetch` won’t send cookies, unless you set the credentials init\n    // > option.\n    // https://developer.mozilla.org/docs/Web/API/Fetch_API/Using_Fetch\n    //\n    // > For maximum browser compatibility when it comes to sending &\n    // > receiving cookies, always supply the `credentials: 'same-origin'`\n    // > option instead of relying on the default.\n    // https://github.com/github/fetch#caveats\n    credentials: 'same-origin',\n    method: options.method || 'GET',\n    headers: Object.assign({}, options.headers, {\n      'x-nextjs-data': '1',\n    }),\n  }).then((response) => {\n    return !response.ok && attempts > 1 && response.status >= 500\n      ? fetchRetry(url, attempts - 1, options)\n      : response\n  })\n}\n\ninterface FetchDataOutput {\n  dataHref: string\n  json: Record<string, any> | null\n  response: Response\n  text: string\n  cacheKey: string\n}\n\ninterface FetchNextDataParams {\n  dataHref: string\n  isServerRender: boolean\n  parseJSON: boolean | undefined\n  hasMiddleware?: boolean\n  inflightCache: NextDataCache\n  persistCache: boolean\n  isPrefetch: boolean\n  isBackground?: boolean\n  unstable_skipClientCache?: boolean\n}\n\nfunction tryToParseAsJSON(text: string) {\n  try {\n    return JSON.parse(text)\n  } catch (error) {\n    return null\n  }\n}\n\nfunction fetchNextData({\n  dataHref,\n  inflightCache,\n  isPrefetch,\n  hasMiddleware,\n  isServerRender,\n  parseJSON,\n  persistCache,\n  isBackground,\n  unstable_skipClientCache,\n}: FetchNextDataParams): Promise<FetchDataOutput> {\n  const { href: cacheKey } = new URL(dataHref, window.location.href)\n  const getData = (params?: { method?: 'HEAD' | 'GET' }) =>\n    fetchRetry(dataHref, isServerRender ? 3 : 1, {\n      headers: Object.assign(\n        {} as HeadersInit,\n        isPrefetch ? { purpose: 'prefetch' } : {},\n        isPrefetch && hasMiddleware ? { 'x-middleware-prefetch': '1' } : {},\n        process.env.NEXT_DEPLOYMENT_ID\n          ? { 'x-deployment-id': process.env.NEXT_DEPLOYMENT_ID }\n          : {}\n      ),\n      method: params?.method ?? 'GET',\n    })\n      .then((response) => {\n        if (response.ok && params?.method === 'HEAD') {\n          return { dataHref, response, text: '', json: {}, cacheKey }\n        }\n\n        return response.text().then((text) => {\n          if (!response.ok) {\n            /**\n             * When the data response is a redirect because of a middleware\n             * we do not consider it an error. The headers must bring the\n             * mapped location.\n             * TODO: Change the status code in the handler.\n             */\n            if (\n              hasMiddleware &&\n              [301, 302, 307, 308].includes(response.status)\n            ) {\n              return { dataHref, response, text, json: {}, cacheKey }\n            }\n\n            if (response.status === 404) {\n              if (tryToParseAsJSON(text)?.notFound) {\n                return {\n                  dataHref,\n                  json: { notFound: SSG_DATA_NOT_FOUND },\n                  response,\n                  text,\n                  cacheKey,\n                }\n              }\n            }\n\n            const error = new Error(`Failed to load static props`)\n\n            /**\n             * We should only trigger a server-side transition if this was\n             * caused on a client-side transition. Otherwise, we'd get into\n             * an infinite loop.\n             */\n            if (!isServerRender) {\n              markAssetError(error)\n            }\n\n            throw error\n          }\n\n          return {\n            dataHref,\n            json: parseJSON ? tryToParseAsJSON(text) : null,\n            response,\n            text,\n            cacheKey,\n          }\n        })\n      })\n      .then((data) => {\n        if (\n          !persistCache ||\n          process.env.NODE_ENV !== 'production' ||\n          data.response.headers.get('x-middleware-cache') === 'no-cache'\n        ) {\n          delete inflightCache[cacheKey]\n        }\n        return data\n      })\n      .catch((err) => {\n        if (!unstable_skipClientCache) {\n          delete inflightCache[cacheKey]\n        }\n        if (\n          // chrome\n          err.message === 'Failed to fetch' ||\n          // firefox\n          err.message === 'NetworkError when attempting to fetch resource.' ||\n          // safari\n          err.message === 'Load failed'\n        ) {\n          markAssetError(err)\n        }\n        throw err\n      })\n\n  // when skipping client cache we wait to update\n  // inflight cache until successful data response\n  // this allows racing click event with fetching newer data\n  // without blocking navigation when stale data is available\n  if (unstable_skipClientCache && persistCache) {\n    return getData({}).then((data) => {\n      if (data.response.headers.get('x-middleware-cache') !== 'no-cache') {\n        // only update cache if not marked as no-cache\n        inflightCache[cacheKey] = Promise.resolve(data)\n      }\n\n      return data\n    })\n  }\n\n  if (inflightCache[cacheKey] !== undefined) {\n    return inflightCache[cacheKey]\n  }\n  return (inflightCache[cacheKey] = getData(\n    isBackground ? { method: 'HEAD' } : {}\n  ))\n}\n\ninterface NextDataCache {\n  [asPath: string]: Promise<FetchDataOutput>\n}\n\nexport function createKey() {\n  return Math.random().toString(36).slice(2, 10)\n}\n\nfunction handleHardNavigation({\n  url,\n  router,\n}: {\n  url: string\n  router: Router\n}) {\n  // ensure we don't trigger a hard navigation to the same\n  // URL as this can end up with an infinite refresh\n  if (url === addBasePath(addLocale(router.asPath, router.locale))) {\n    throw new Error(\n      `Invariant: attempted to hard navigate to the same URL ${url} ${location.href}`\n    )\n  }\n  window.location.href = url\n}\n\nconst getCancelledHandler = ({\n  route,\n  router,\n}: {\n  route: string\n  router: Router\n}) => {\n  let cancelled = false\n  const cancel = (router.clc = () => {\n    cancelled = true\n  })\n\n  const handleCancelled = () => {\n    if (cancelled) {\n      const error: any = new Error(\n        `Abort fetching component for route: \"${route}\"`\n      )\n      error.cancelled = true\n      throw error\n    }\n\n    if (cancel === router.clc) {\n      router.clc = null\n    }\n  }\n  return handleCancelled\n}\n\nexport default class Router implements BaseRouter {\n  basePath: string\n\n  /**\n   * Map of all components loaded in `Router`\n   */\n  components: { [pathname: string]: PrivateRouteInfo }\n  // Server Data Cache (full data requests)\n  sdc: NextDataCache = {}\n  // Server Background Cache (HEAD requests)\n  sbc: NextDataCache = {}\n\n  sub: Subscription\n  clc: ComponentLoadCancel\n  pageLoader: PageLoader\n  _bps: BeforePopStateCallback | undefined\n  events: MittEmitter<RouterEvent>\n  _wrapApp: (App: AppComponent) => any\n  isSsr: boolean\n  _inFlightRoute?: string | undefined\n  _shallow?: boolean | undefined\n  locales?: readonly string[] | undefined\n  defaultLocale?: string | undefined\n  domainLocales?: readonly DomainLocale[] | undefined\n  isReady: boolean\n  isLocaleDomain: boolean\n  isFirstPopStateEvent = true\n  _initialMatchesMiddlewarePromise: Promise<boolean>\n  // static entries filter\n  _bfl_s?: import('../../lib/bloom-filter').BloomFilter\n  // dynamic entires filter\n  _bfl_d?: import('../../lib/bloom-filter').BloomFilter\n\n  private state: Readonly<{\n    route: string\n    pathname: string\n    query: ParsedUrlQuery\n    asPath: string\n    locale: string | undefined\n    isFallback: boolean\n    isPreview: boolean\n  }>\n\n  private _key: string = createKey()\n\n  static events: MittEmitter<RouterEvent> = mitt()\n\n  constructor(\n    pathname: string,\n    query: ParsedUrlQuery,\n    as: string,\n    {\n      initialProps,\n      pageLoader,\n      App,\n      wrapApp,\n      Component,\n      err,\n      subscription,\n      isFallback,\n      locale,\n      locales,\n      defaultLocale,\n      domainLocales,\n      isPreview,\n    }: {\n      subscription: Subscription\n      initialProps: any\n      pageLoader: any\n      Component: ComponentType\n      App: AppComponent\n      wrapApp: (WrapAppComponent: AppComponent) => any\n      err?: Error\n      isFallback: boolean\n      locale?: string\n      locales?: readonly string[]\n      defaultLocale?: string\n      domainLocales?: readonly DomainLocale[]\n      isPreview?: boolean\n    }\n  ) {\n    // represents the current component key\n    const route = removeTrailingSlash(pathname)\n\n    // set up the component cache (by route keys)\n    this.components = {}\n    // We should not keep the cache, if there's an error\n    // Otherwise, this cause issues when when going back and\n    // come again to the errored page.\n    if (pathname !== '/_error') {\n      this.components[route] = {\n        Component,\n        initial: true,\n        props: initialProps,\n        err,\n        __N_SSG: initialProps && initialProps.__N_SSG,\n        __N_SSP: initialProps && initialProps.__N_SSP,\n      }\n    }\n\n    this.components['/_app'] = {\n      Component: App as ComponentType,\n      styleSheets: [\n        /* /_app does not need its stylesheets managed */\n      ],\n    }\n\n    // Backwards compat for Router.router.events\n    // TODO: Should be remove the following major version as it was never documented\n    this.events = Router.events\n\n    this.pageLoader = pageLoader\n    // if auto prerendered and dynamic route wait to update asPath\n    // until after mount to prevent hydration mismatch\n    const autoExportDynamic =\n      isDynamicRoute(pathname) && self.__NEXT_DATA__.autoExport\n\n    this.basePath = process.env.__NEXT_ROUTER_BASEPATH || ''\n    this.sub = subscription\n    this.clc = null\n    this._wrapApp = wrapApp\n    // make sure to ignore extra popState in safari on navigating\n    // back from external site\n    this.isSsr = true\n    this.isLocaleDomain = false\n    this.isReady = !!(\n      self.__NEXT_DATA__.gssp ||\n      self.__NEXT_DATA__.gip ||\n      self.__NEXT_DATA__.isExperimentalCompile ||\n      (self.__NEXT_DATA__.appGip && !self.__NEXT_DATA__.gsp) ||\n      (!autoExportDynamic &&\n        !self.location.search &&\n        !process.env.__NEXT_HAS_REWRITES)\n    )\n\n    if (process.env.__NEXT_I18N_SUPPORT) {\n      this.locales = locales\n      this.defaultLocale = defaultLocale\n      this.domainLocales = domainLocales\n      this.isLocaleDomain = !!detectDomainLocale(\n        domainLocales,\n        self.location.hostname\n      )\n    }\n\n    this.state = {\n      route,\n      pathname,\n      query,\n      asPath: autoExportDynamic ? pathname : as,\n      isPreview: !!isPreview,\n      locale: process.env.__NEXT_I18N_SUPPORT ? locale : undefined,\n      isFallback,\n    }\n\n    this._initialMatchesMiddlewarePromise = Promise.resolve(false)\n\n    if (typeof window !== 'undefined') {\n      // make sure \"as\" doesn't start with double slashes or else it can\n      // throw an error as it's considered invalid\n      if (!as.startsWith('//')) {\n        // in order for `e.state` to work on the `onpopstate` event\n        // we have to register the initial route upon initialization\n        const options: TransitionOptions = { locale }\n        const asPath = getURL()\n\n        this._initialMatchesMiddlewarePromise = matchesMiddleware({\n          router: this,\n          locale,\n          asPath,\n        }).then((matches) => {\n          // if middleware matches we leave resolving to the change function\n          // as the server needs to resolve for correct priority\n          ;(options as any)._shouldResolveHref = as !== pathname\n\n          this.changeState(\n            'replaceState',\n            matches\n              ? asPath\n              : formatWithValidation({\n                  pathname: addBasePath(pathname),\n                  query,\n                }),\n            asPath,\n            options\n          )\n          return matches\n        })\n      }\n\n      window.addEventListener('popstate', this.onPopState)\n\n      // enable custom scroll restoration handling when available\n      // otherwise fallback to browser's default handling\n      if (process.env.__NEXT_SCROLL_RESTORATION) {\n        if (manualScrollRestoration) {\n          window.history.scrollRestoration = 'manual'\n        }\n      }\n    }\n  }\n\n  onPopState = (e: PopStateEvent): void => {\n    const { isFirstPopStateEvent } = this\n    this.isFirstPopStateEvent = false\n\n    const state = e.state as HistoryState\n\n    if (!state) {\n      // We get state as undefined for two reasons.\n      //  1. With older safari (< 8) and older chrome (< 34)\n      //  2. When the URL changed with #\n      //\n      // In the both cases, we don't need to proceed and change the route.\n      // (as it's already changed)\n      // But we can simply replace the state with the new changes.\n      // Actually, for (1) we don't need to nothing. But it's hard to detect that event.\n      // So, doing the following for (1) does no harm.\n      const { pathname, query } = this\n      this.changeState(\n        'replaceState',\n        formatWithValidation({ pathname: addBasePath(pathname), query }),\n        getURL()\n      )\n      return\n    }\n\n    // __NA is used to identify if the history entry can be handled by the app-router.\n    if (state.__NA) {\n      window.location.reload()\n      return\n    }\n\n    if (!state.__N) {\n      return\n    }\n\n    // Safari fires popstateevent when reopening the browser.\n    if (\n      isFirstPopStateEvent &&\n      this.locale === state.options.locale &&\n      state.as === this.asPath\n    ) {\n      return\n    }\n\n    let forcedScroll: { x: number; y: number } | undefined\n    const { url, as, options, key } = state\n    if (process.env.__NEXT_SCROLL_RESTORATION) {\n      if (manualScrollRestoration) {\n        if (this._key !== key) {\n          // Snapshot current scroll position:\n          try {\n            sessionStorage.setItem(\n              '__next_scroll_' + this._key,\n              JSON.stringify({ x: self.pageXOffset, y: self.pageYOffset })\n            )\n          } catch {}\n\n          // Restore old scroll position:\n          try {\n            const v = sessionStorage.getItem('__next_scroll_' + key)\n            forcedScroll = JSON.parse(v!)\n          } catch {\n            forcedScroll = { x: 0, y: 0 }\n          }\n        }\n      }\n    }\n    this._key = key\n\n    const { pathname } = parseRelativeUrl(url)\n\n    // Make sure we don't re-render on initial load,\n    // can be caused by navigating back from an external site\n    if (\n      this.isSsr &&\n      as === addBasePath(this.asPath) &&\n      pathname === addBasePath(this.pathname)\n    ) {\n      return\n    }\n\n    // If the downstream application returns falsy, return.\n    // They will then be responsible for handling the event.\n    if (this._bps && !this._bps(state)) {\n      return\n    }\n\n    this.change(\n      'replaceState',\n      url,\n      as,\n      Object.assign<{}, TransitionOptions, TransitionOptions>({}, options, {\n        shallow: options.shallow && this._shallow,\n        locale: options.locale || this.defaultLocale,\n        // @ts-ignore internal value not exposed on types\n        _h: 0,\n      }),\n      forcedScroll\n    )\n  }\n\n  reload(): void {\n    window.location.reload()\n  }\n\n  /**\n   * Go back in history\n   */\n  back() {\n    window.history.back()\n  }\n\n  /**\n   * Go forward in history\n   */\n  forward() {\n    window.history.forward()\n  }\n\n  /**\n   * Performs a `pushState` with arguments\n   * @param url of the route\n   * @param as masks `url` for the browser\n   * @param options object you can define `shallow` and other options\n   */\n  push(url: Url, as?: Url, options: TransitionOptions = {}) {\n    if (process.env.__NEXT_SCROLL_RESTORATION) {\n      // TODO: remove in the future when we update history before route change\n      // is complete, as the popstate event should handle this capture.\n      if (manualScrollRestoration) {\n        try {\n          // Snapshot scroll position right before navigating to a new page:\n          sessionStorage.setItem(\n            '__next_scroll_' + this._key,\n            JSON.stringify({ x: self.pageXOffset, y: self.pageYOffset })\n          )\n        } catch {}\n      }\n    }\n    ;({ url, as } = prepareUrlAs(this, url, as))\n    return this.change('pushState', url, as, options)\n  }\n\n  /**\n   * Performs a `replaceState` with arguments\n   * @param url of the route\n   * @param as masks `url` for the browser\n   * @param options object you can define `shallow` and other options\n   */\n  replace(url: Url, as?: Url, options: TransitionOptions = {}) {\n    ;({ url, as } = prepareUrlAs(this, url, as))\n    return this.change('replaceState', url, as, options)\n  }\n\n  async _bfl(\n    as: string,\n    resolvedAs?: string,\n    locale?: string | false,\n    skipNavigate?: boolean\n  ) {\n    if (process.env.__NEXT_CLIENT_ROUTER_FILTER_ENABLED) {\n      if (!this._bfl_s && !this._bfl_d) {\n        const { BloomFilter } =\n          require('../../lib/bloom-filter') as typeof import('../../lib/bloom-filter')\n\n        type Filter = ReturnType<\n          import('../../lib/bloom-filter').BloomFilter['export']\n        >\n        let staticFilterData: Filter | undefined\n        let dynamicFilterData: Filter | undefined\n\n        try {\n          ;({\n            __routerFilterStatic: staticFilterData,\n            __routerFilterDynamic: dynamicFilterData,\n          } = (await getClientBuildManifest()) as any as {\n            __routerFilterStatic?: Filter\n            __routerFilterDynamic?: Filter\n          })\n        } catch (err) {\n          // failed to load build manifest hard navigate\n          // to be safe\n          console.error(err)\n          if (skipNavigate) {\n            return true\n          }\n          handleHardNavigation({\n            url: addBasePath(\n              addLocale(as, locale || this.locale, this.defaultLocale)\n            ),\n            router: this,\n          })\n          return new Promise(() => {})\n        }\n\n        const routerFilterSValue: Filter | false = process.env\n          .__NEXT_CLIENT_ROUTER_S_FILTER as any\n\n        if (!staticFilterData && routerFilterSValue) {\n          staticFilterData = routerFilterSValue ? routerFilterSValue : undefined\n        }\n\n        const routerFilterDValue: Filter | false = process.env\n          .__NEXT_CLIENT_ROUTER_D_FILTER as any\n\n        if (!dynamicFilterData && routerFilterDValue) {\n          dynamicFilterData = routerFilterDValue\n            ? routerFilterDValue\n            : undefined\n        }\n\n        if (staticFilterData?.numHashes) {\n          this._bfl_s = new BloomFilter(\n            staticFilterData.numItems,\n            staticFilterData.errorRate\n          )\n          this._bfl_s.import(staticFilterData)\n        }\n\n        if (dynamicFilterData?.numHashes) {\n          this._bfl_d = new BloomFilter(\n            dynamicFilterData.numItems,\n            dynamicFilterData.errorRate\n          )\n          this._bfl_d.import(dynamicFilterData)\n        }\n      }\n\n      let matchesBflStatic = false\n      let matchesBflDynamic = false\n      const pathsToCheck: Array<{ as?: string; allowMatchCurrent?: boolean }> =\n        [{ as }, { as: resolvedAs }]\n\n      for (const { as: curAs, allowMatchCurrent } of pathsToCheck) {\n        if (curAs) {\n          const asNoSlash = removeTrailingSlash(\n            new URL(curAs, 'http://n').pathname\n          )\n          const asNoSlashLocale = addBasePath(\n            addLocale(asNoSlash, locale || this.locale)\n          )\n\n          if (\n            allowMatchCurrent ||\n            asNoSlash !==\n              removeTrailingSlash(new URL(this.asPath, 'http://n').pathname)\n          ) {\n            matchesBflStatic =\n              matchesBflStatic ||\n              !!this._bfl_s?.contains(asNoSlash) ||\n              !!this._bfl_s?.contains(asNoSlashLocale)\n\n            for (const normalizedAS of [asNoSlash, asNoSlashLocale]) {\n              // if any sub-path of as matches a dynamic filter path\n              // it should be hard navigated\n              const curAsParts = normalizedAS.split('/')\n              for (\n                let i = 0;\n                !matchesBflDynamic && i < curAsParts.length + 1;\n                i++\n              ) {\n                const currentPart = curAsParts.slice(0, i).join('/')\n                if (currentPart && this._bfl_d?.contains(currentPart)) {\n                  matchesBflDynamic = true\n                  break\n                }\n              }\n            }\n\n            // if the client router filter is matched then we trigger\n            // a hard navigation\n            if (matchesBflStatic || matchesBflDynamic) {\n              if (skipNavigate) {\n                return true\n              }\n              handleHardNavigation({\n                url: addBasePath(\n                  addLocale(as, locale || this.locale, this.defaultLocale)\n                ),\n                router: this,\n              })\n              return new Promise(() => {})\n            }\n          }\n        }\n      }\n    }\n    return false\n  }\n\n  private async change(\n    method: HistoryMethod,\n    url: string,\n    as: string,\n    options: TransitionOptions,\n    forcedScroll?: { x: number; y: number }\n  ): Promise<boolean> {\n    if (!isLocalURL(url)) {\n      handleHardNavigation({ url, router: this })\n      return false\n    }\n    // WARNING: `_h` is an internal option for handing Next.js client-side\n    // hydration. Your app should _never_ use this property. It may change at\n    // any time without notice.\n    const isQueryUpdating = (options as any)._h === 1\n\n    if (!isQueryUpdating && !options.shallow) {\n      await this._bfl(as, undefined, options.locale)\n    }\n\n    let shouldResolveHref =\n      isQueryUpdating ||\n      (options as any)._shouldResolveHref ||\n      parsePath(url).pathname === parsePath(as).pathname\n\n    const nextState = {\n      ...this.state,\n    }\n\n    // for static pages with query params in the URL we delay\n    // marking the router ready until after the query is updated\n    // or a navigation has occurred\n    const readyStateChange = this.isReady !== true\n    this.isReady = true\n    const isSsr = this.isSsr\n\n    if (!isQueryUpdating) {\n      this.isSsr = false\n    }\n\n    // if a route transition is already in progress before\n    // the query updating is triggered ignore query updating\n    if (isQueryUpdating && this.clc) {\n      return false\n    }\n\n    const prevLocale = nextState.locale\n\n    if (process.env.__NEXT_I18N_SUPPORT) {\n      nextState.locale =\n        options.locale === false\n          ? this.defaultLocale\n          : options.locale || nextState.locale\n\n      if (typeof options.locale === 'undefined') {\n        options.locale = nextState.locale\n      }\n\n      const parsedAs = parseRelativeUrl(\n        hasBasePath(as) ? removeBasePath(as) : as\n      )\n      const localePathResult = normalizeLocalePath(\n        parsedAs.pathname,\n        this.locales\n      )\n\n      if (localePathResult.detectedLocale) {\n        nextState.locale = localePathResult.detectedLocale\n        parsedAs.pathname = addBasePath(parsedAs.pathname)\n        as = formatWithValidation(parsedAs)\n        url = addBasePath(\n          normalizeLocalePath(\n            hasBasePath(url) ? removeBasePath(url) : url,\n            this.locales\n          ).pathname\n        )\n      }\n      let didNavigate = false\n\n      // we need to wrap this in the env check again since regenerator runtime\n      // moves this on its own due to the return\n      if (process.env.__NEXT_I18N_SUPPORT) {\n        // if the locale isn't configured hard navigate to show 404 page\n        if (!this.locales?.includes(nextState.locale!)) {\n          parsedAs.pathname = addLocale(parsedAs.pathname, nextState.locale)\n          handleHardNavigation({\n            url: formatWithValidation(parsedAs),\n            router: this,\n          })\n          // this was previously a return but was removed in favor\n          // of better dead code elimination with regenerator runtime\n          didNavigate = true\n        }\n      }\n\n      const detectedDomain = detectDomainLocale(\n        this.domainLocales,\n        undefined,\n        nextState.locale\n      )\n\n      // we need to wrap this in the env check again since regenerator runtime\n      // moves this on its own due to the return\n      if (process.env.__NEXT_I18N_SUPPORT) {\n        // if we are navigating to a domain locale ensure we redirect to the\n        // correct domain\n        if (\n          !didNavigate &&\n          detectedDomain &&\n          this.isLocaleDomain &&\n          self.location.hostname !== detectedDomain.domain\n        ) {\n          const asNoBasePath = removeBasePath(as)\n          handleHardNavigation({\n            url: `http${detectedDomain.http ? '' : 's'}://${\n              detectedDomain.domain\n            }${addBasePath(\n              `${\n                nextState.locale === detectedDomain.defaultLocale\n                  ? ''\n                  : `/${nextState.locale}`\n              }${asNoBasePath === '/' ? '' : asNoBasePath}` || '/'\n            )}`,\n            router: this,\n          })\n          // this was previously a return but was removed in favor\n          // of better dead code elimination with regenerator runtime\n          didNavigate = true\n        }\n      }\n\n      if (didNavigate) {\n        return new Promise(() => {})\n      }\n    }\n\n    // marking route changes as a navigation start entry\n    if (ST) {\n      performance.mark('routeChange')\n    }\n\n    const { shallow = false, scroll = true } = options\n    const routeProps = { shallow }\n\n    if (this._inFlightRoute && this.clc) {\n      if (!isSsr) {\n        Router.events.emit(\n          'routeChangeError',\n          buildCancellationError(),\n          this._inFlightRoute,\n          routeProps\n        )\n      }\n      this.clc()\n      this.clc = null\n    }\n\n    as = addBasePath(\n      addLocale(\n        hasBasePath(as) ? removeBasePath(as) : as,\n        options.locale,\n        this.defaultLocale\n      )\n    )\n    const cleanedAs = removeLocale(\n      hasBasePath(as) ? removeBasePath(as) : as,\n      nextState.locale\n    )\n    this._inFlightRoute = as\n\n    const localeChange = prevLocale !== nextState.locale\n\n    // If the url change is only related to a hash change\n    // We should not proceed. We should only change the state.\n\n    if (!isQueryUpdating && this.onlyAHashChange(cleanedAs) && !localeChange) {\n      nextState.asPath = cleanedAs\n      Router.events.emit('hashChangeStart', as, routeProps)\n      // TODO: do we need the resolved href when only a hash change?\n      this.changeState(method, url, as, {\n        ...options,\n        scroll: false,\n      })\n      if (scroll) {\n        this.scrollToHash(cleanedAs)\n      }\n      try {\n        await this.set(nextState, this.components[nextState.route], null)\n      } catch (err) {\n        if (isError(err) && err.cancelled) {\n          Router.events.emit('routeChangeError', err, cleanedAs, routeProps)\n        }\n        throw err\n      }\n\n      Router.events.emit('hashChangeComplete', as, routeProps)\n      return true\n    }\n\n    let parsed = parseRelativeUrl(url)\n    let { pathname, query } = parsed\n\n    // The build manifest needs to be loaded before auto-static dynamic pages\n    // get their query parameters to allow ensuring they can be parsed properly\n    // when rewritten to\n    let pages: string[], rewrites: any\n    try {\n      ;[pages, { __rewrites: rewrites }] = await Promise.all([\n        this.pageLoader.getPageList(),\n        getClientBuildManifest(),\n        this.pageLoader.getMiddleware(),\n      ])\n    } catch (err) {\n      // If we fail to resolve the page list or client-build manifest, we must\n      // do a server-side transition:\n      handleHardNavigation({ url: as, router: this })\n      return false\n    }\n\n    // If asked to change the current URL we should reload the current page\n    // (not location.reload() but reload getInitialProps and other Next.js stuffs)\n    // We also need to set the method = replaceState always\n    // as this should not go into the history (That's how browsers work)\n    // We should compare the new asPath to the current asPath, not the url\n    if (!this.urlIsNew(cleanedAs) && !localeChange) {\n      method = 'replaceState'\n    }\n\n    // we need to resolve the as value using rewrites for dynamic SSG\n    // pages to allow building the data URL correctly\n    let resolvedAs = as\n\n    // url and as should always be prefixed with basePath by this\n    // point by either next/link or router.push/replace so strip the\n    // basePath from the pathname to match the pages dir 1-to-1\n    pathname = pathname\n      ? removeTrailingSlash(removeBasePath(pathname))\n      : pathname\n\n    let route = removeTrailingSlash(pathname)\n    const parsedAsPathname = as.startsWith('/') && parseRelativeUrl(as).pathname\n\n    // if we detected the path as app route during prefetching\n    // trigger hard navigation\n    if ((this.components[pathname] as any)?.__appRouter) {\n      handleHardNavigation({ url: as, router: this })\n      return new Promise(() => {})\n    }\n\n    const isMiddlewareRewrite = !!(\n      parsedAsPathname &&\n      route !== parsedAsPathname &&\n      (!isDynamicRoute(route) ||\n        !getRouteMatcher(getRouteRegex(route))(parsedAsPathname))\n    )\n\n    // we don't attempt resolve asPath when we need to execute\n    // middleware as the resolving will occur server-side\n    const isMiddlewareMatch =\n      !options.shallow &&\n      (await matchesMiddleware({\n        asPath: as,\n        locale: nextState.locale,\n        router: this,\n      }))\n\n    if (isQueryUpdating && isMiddlewareMatch) {\n      shouldResolveHref = false\n    }\n\n    if (shouldResolveHref && pathname !== '/_error') {\n      ;(options as any)._shouldResolveHref = true\n\n      if (process.env.__NEXT_HAS_REWRITES && as.startsWith('/')) {\n        const rewritesResult = resolveRewrites(\n          addBasePath(addLocale(cleanedAs, nextState.locale), true),\n          pages,\n          rewrites,\n          query,\n          (p: string) => resolveDynamicRoute(p, pages),\n          this.locales\n        )\n\n        if (rewritesResult.externalDest) {\n          handleHardNavigation({ url: as, router: this })\n          return true\n        }\n        if (!isMiddlewareMatch) {\n          resolvedAs = rewritesResult.asPath\n        }\n\n        if (rewritesResult.matchedPage && rewritesResult.resolvedHref) {\n          // if this directly matches a page we need to update the href to\n          // allow the correct page chunk to be loaded\n          pathname = rewritesResult.resolvedHref\n          parsed.pathname = addBasePath(pathname)\n\n          if (!isMiddlewareMatch) {\n            url = formatWithValidation(parsed)\n          }\n        }\n      } else {\n        parsed.pathname = resolveDynamicRoute(pathname, pages)\n\n        if (parsed.pathname !== pathname) {\n          pathname = parsed.pathname\n          parsed.pathname = addBasePath(pathname)\n\n          if (!isMiddlewareMatch) {\n            url = formatWithValidation(parsed)\n          }\n        }\n      }\n    }\n\n    if (!isLocalURL(as)) {\n      if (process.env.NODE_ENV !== 'production') {\n        throw new Error(\n          `Invalid href: \"${url}\" and as: \"${as}\", received relative href and external as` +\n            `\\nSee more info: https://nextjs.org/docs/messages/invalid-relative-url-external-as`\n        )\n      }\n      handleHardNavigation({ url: as, router: this })\n      return false\n    }\n\n    resolvedAs = removeLocale(removeBasePath(resolvedAs), nextState.locale)\n\n    route = removeTrailingSlash(pathname)\n    let routeMatch: Params | false = false\n\n    if (isDynamicRoute(route)) {\n      const parsedAs = parseRelativeUrl(resolvedAs)\n      const asPathname = parsedAs.pathname\n\n      const routeRegex = getRouteRegex(route)\n      routeMatch = getRouteMatcher(routeRegex)(asPathname)\n      const shouldInterpolate = route === asPathname\n      const interpolatedAs = shouldInterpolate\n        ? interpolateAs(route, asPathname, query)\n        : ({} as { result: undefined; params: undefined })\n\n      if (!routeMatch || (shouldInterpolate && !interpolatedAs.result)) {\n        const missingParams = Object.keys(routeRegex.groups).filter(\n          (param) => !query[param] && !routeRegex.groups[param].optional\n        )\n\n        if (missingParams.length > 0 && !isMiddlewareMatch) {\n          if (process.env.NODE_ENV !== 'production') {\n            console.warn(\n              `${\n                shouldInterpolate\n                  ? `Interpolating href`\n                  : `Mismatching \\`as\\` and \\`href\\``\n              } failed to manually provide ` +\n                `the params: ${missingParams.join(\n                  ', '\n                )} in the \\`href\\`'s \\`query\\``\n            )\n          }\n\n          throw new Error(\n            (shouldInterpolate\n              ? `The provided \\`href\\` (${url}) value is missing query values (${missingParams.join(\n                  ', '\n                )}) to be interpolated properly. `\n              : `The provided \\`as\\` value (${asPathname}) is incompatible with the \\`href\\` value (${route}). `) +\n              `Read more: https://nextjs.org/docs/messages/${\n                shouldInterpolate\n                  ? 'href-interpolation-failed'\n                  : 'incompatible-href-as'\n              }`\n          )\n        }\n      } else if (shouldInterpolate) {\n        as = formatWithValidation(\n          Object.assign({}, parsedAs, {\n            pathname: interpolatedAs.result,\n            query: omit(query, interpolatedAs.params!),\n          })\n        )\n      } else {\n        // Merge params into `query`, overwriting any specified in search\n        Object.assign(query, routeMatch)\n      }\n    }\n\n    if (!isQueryUpdating) {\n      Router.events.emit('routeChangeStart', as, routeProps)\n    }\n\n    const isErrorRoute = this.pathname === '/404' || this.pathname === '/_error'\n\n    try {\n      let routeInfo = await this.getRouteInfo({\n        route,\n        pathname,\n        query,\n        as,\n        resolvedAs,\n        routeProps,\n        locale: nextState.locale,\n        isPreview: nextState.isPreview,\n        hasMiddleware: isMiddlewareMatch,\n        unstable_skipClientCache: options.unstable_skipClientCache,\n        isQueryUpdating: isQueryUpdating && !this.isFallback,\n        isMiddlewareRewrite,\n      })\n\n      if (!isQueryUpdating && !options.shallow) {\n        await this._bfl(\n          as,\n          'resolvedAs' in routeInfo ? routeInfo.resolvedAs : undefined,\n          nextState.locale\n        )\n      }\n\n      if ('route' in routeInfo && isMiddlewareMatch) {\n        pathname = routeInfo.route || route\n        route = pathname\n\n        if (!routeProps.shallow) {\n          query = Object.assign({}, routeInfo.query || {}, query)\n        }\n\n        const cleanedParsedPathname = hasBasePath(parsed.pathname)\n          ? removeBasePath(parsed.pathname)\n          : parsed.pathname\n\n        if (routeMatch && pathname !== cleanedParsedPathname) {\n          Object.keys(routeMatch).forEach((key) => {\n            if (routeMatch && query[key] === routeMatch[key]) {\n              delete query[key]\n            }\n          })\n        }\n\n        if (isDynamicRoute(pathname)) {\n          const prefixedAs =\n            !routeProps.shallow && routeInfo.resolvedAs\n              ? routeInfo.resolvedAs\n              : addBasePath(\n                  addLocale(\n                    new URL(as, location.href).pathname,\n                    nextState.locale\n                  ),\n                  true\n                )\n\n          let rewriteAs = prefixedAs\n\n          if (hasBasePath(rewriteAs)) {\n            rewriteAs = removeBasePath(rewriteAs)\n          }\n\n          if (process.env.__NEXT_I18N_SUPPORT) {\n            const localeResult = normalizeLocalePath(rewriteAs, this.locales)\n            nextState.locale = localeResult.detectedLocale || nextState.locale\n            rewriteAs = localeResult.pathname\n          }\n          const routeRegex = getRouteRegex(pathname)\n          const curRouteMatch = getRouteMatcher(routeRegex)(\n            new URL(rewriteAs, location.href).pathname\n          )\n\n          if (curRouteMatch) {\n            Object.assign(query, curRouteMatch)\n          }\n        }\n      }\n\n      // If the routeInfo brings a redirect we simply apply it.\n      if ('type' in routeInfo) {\n        if (routeInfo.type === 'redirect-internal') {\n          return this.change(method, routeInfo.newUrl, routeInfo.newAs, options)\n        } else {\n          handleHardNavigation({ url: routeInfo.destination, router: this })\n          return new Promise(() => {})\n        }\n      }\n\n      const component: any = routeInfo.Component\n      if (component && component.unstable_scriptLoader) {\n        const scripts = [].concat(component.unstable_scriptLoader())\n\n        scripts.forEach((script: any) => {\n          handleClientScriptLoad(script.props)\n        })\n      }\n\n      // handle redirect on client-transition\n      if ((routeInfo.__N_SSG || routeInfo.__N_SSP) && routeInfo.props) {\n        if (\n          routeInfo.props.pageProps &&\n          routeInfo.props.pageProps.__N_REDIRECT\n        ) {\n          // Use the destination from redirect without adding locale\n          options.locale = false\n\n          const destination = routeInfo.props.pageProps.__N_REDIRECT\n\n          // check if destination is internal (resolves to a page) and attempt\n          // client-navigation if it is falling back to hard navigation if\n          // it's not\n          if (\n            destination.startsWith('/') &&\n            routeInfo.props.pageProps.__N_REDIRECT_BASE_PATH !== false\n          ) {\n            const parsedHref = parseRelativeUrl(destination)\n            parsedHref.pathname = resolveDynamicRoute(\n              parsedHref.pathname,\n              pages\n            )\n\n            const { url: newUrl, as: newAs } = prepareUrlAs(\n              this,\n              destination,\n              destination\n            )\n            return this.change(method, newUrl, newAs, options)\n          }\n          handleHardNavigation({ url: destination, router: this })\n          return new Promise(() => {})\n        }\n\n        nextState.isPreview = !!routeInfo.props.__N_PREVIEW\n\n        // handle SSG data 404\n        if (routeInfo.props.notFound === SSG_DATA_NOT_FOUND) {\n          let notFoundRoute\n\n          try {\n            await this.fetchComponent('/404')\n            notFoundRoute = '/404'\n          } catch (_) {\n            notFoundRoute = '/_error'\n          }\n\n          routeInfo = await this.getRouteInfo({\n            route: notFoundRoute,\n            pathname: notFoundRoute,\n            query,\n            as,\n            resolvedAs,\n            routeProps: { shallow: false },\n            locale: nextState.locale,\n            isPreview: nextState.isPreview,\n            isNotFound: true,\n          })\n\n          if ('type' in routeInfo) {\n            throw new Error(`Unexpected middleware effect on /404`)\n          }\n        }\n      }\n\n      if (\n        isQueryUpdating &&\n        this.pathname === '/_error' &&\n        self.__NEXT_DATA__.props?.pageProps?.statusCode === 500 &&\n        routeInfo.props?.pageProps\n      ) {\n        // ensure statusCode is still correct for static 500 page\n        // when updating query information\n        routeInfo.props.pageProps.statusCode = 500\n      }\n\n      // shallow routing is only allowed for same page URL changes.\n      const isValidShallowRoute =\n        options.shallow && nextState.route === (routeInfo.route ?? route)\n\n      const shouldScroll =\n        options.scroll ?? (!isQueryUpdating && !isValidShallowRoute)\n      const resetScroll = shouldScroll ? { x: 0, y: 0 } : null\n      const upcomingScrollState = forcedScroll ?? resetScroll\n\n      // the new state that the router gonna set\n      const upcomingRouterState = {\n        ...nextState,\n        route,\n        pathname,\n        query,\n        asPath: cleanedAs,\n        isFallback: false,\n      }\n\n      // When the page being rendered is the 404 page, we should only update the\n      // query parameters. Route changes here might add the basePath when it\n      // wasn't originally present. This is also why this block is before the\n      // below `changeState` call which updates the browser's history (changing\n      // the URL).\n      if (isQueryUpdating && isErrorRoute) {\n        routeInfo = await this.getRouteInfo({\n          route: this.pathname,\n          pathname: this.pathname,\n          query,\n          as,\n          resolvedAs,\n          routeProps: { shallow: false },\n          locale: nextState.locale,\n          isPreview: nextState.isPreview,\n          isQueryUpdating: isQueryUpdating && !this.isFallback,\n        })\n\n        if ('type' in routeInfo) {\n          throw new Error(`Unexpected middleware effect on ${this.pathname}`)\n        }\n\n        if (\n          this.pathname === '/_error' &&\n          self.__NEXT_DATA__.props?.pageProps?.statusCode === 500 &&\n          routeInfo.props?.pageProps\n        ) {\n          // ensure statusCode is still correct for static 500 page\n          // when updating query information\n          routeInfo.props.pageProps.statusCode = 500\n        }\n\n        try {\n          await this.set(upcomingRouterState, routeInfo, upcomingScrollState)\n        } catch (err) {\n          if (isError(err) && err.cancelled) {\n            Router.events.emit('routeChangeError', err, cleanedAs, routeProps)\n          }\n          throw err\n        }\n\n        return true\n      }\n\n      Router.events.emit('beforeHistoryChange', as, routeProps)\n      this.changeState(method, url, as, options)\n\n      // for query updates we can skip it if the state is unchanged and we don't\n      // need to scroll\n      // https://github.com/vercel/next.js/issues/37139\n      const canSkipUpdating =\n        isQueryUpdating &&\n        !upcomingScrollState &&\n        !readyStateChange &&\n        !localeChange &&\n        compareRouterStates(upcomingRouterState, this.state)\n\n      if (!canSkipUpdating) {\n        try {\n          await this.set(upcomingRouterState, routeInfo, upcomingScrollState)\n        } catch (e: any) {\n          if (e.cancelled) routeInfo.error = routeInfo.error || e\n          else throw e\n        }\n\n        if (routeInfo.error) {\n          if (!isQueryUpdating) {\n            Router.events.emit(\n              'routeChangeError',\n              routeInfo.error,\n              cleanedAs,\n              routeProps\n            )\n          }\n\n          throw routeInfo.error\n        }\n\n        if (process.env.__NEXT_I18N_SUPPORT) {\n          if (nextState.locale) {\n            document.documentElement.lang = nextState.locale\n          }\n        }\n\n        if (!isQueryUpdating) {\n          Router.events.emit('routeChangeComplete', as, routeProps)\n        }\n\n        // A hash mark # is the optional last part of a URL\n        const hashRegex = /#.+$/\n        if (shouldScroll && hashRegex.test(as)) {\n          this.scrollToHash(as)\n        }\n      }\n\n      return true\n    } catch (err) {\n      if (isError(err) && err.cancelled) {\n        return false\n      }\n      throw err\n    }\n  }\n\n  changeState(\n    method: HistoryMethod,\n    url: string,\n    as: string,\n    options: TransitionOptions = {}\n  ): void {\n    if (process.env.NODE_ENV !== 'production') {\n      if (typeof window.history === 'undefined') {\n        console.error(`Warning: window.history is not available.`)\n        return\n      }\n\n      if (typeof window.history[method] === 'undefined') {\n        console.error(`Warning: window.history.${method} is not available`)\n        return\n      }\n    }\n\n    if (method !== 'pushState' || getURL() !== as) {\n      this._shallow = options.shallow\n      window.history[method](\n        {\n          url,\n          as,\n          options,\n          __N: true,\n          key: (this._key = method !== 'pushState' ? this._key : createKey()),\n        } as HistoryState,\n        // Most browsers currently ignores this parameter, although they may use it in the future.\n        // Passing the empty string here should be safe against future changes to the method.\n        // https://developer.mozilla.org/docs/Web/API/History/replaceState\n        '',\n        as\n      )\n    }\n  }\n\n  async handleRouteInfoError(\n    err: Error & { code?: any; cancelled?: boolean },\n    pathname: string,\n    query: ParsedUrlQuery,\n    as: string,\n    routeProps: RouteProperties,\n    loadErrorFail?: boolean\n  ): Promise<CompletePrivateRouteInfo> {\n    if (err.cancelled) {\n      // bubble up cancellation errors\n      throw err\n    }\n\n    if (isAssetError(err) || loadErrorFail) {\n      Router.events.emit('routeChangeError', err, as, routeProps)\n\n      // If we can't load the page it could be one of following reasons\n      //  1. Page doesn't exists\n      //  2. Page does exist in a different zone\n      //  3. Internal error while loading the page\n\n      // So, doing a hard reload is the proper way to deal with this.\n      handleHardNavigation({\n        url: as,\n        router: this,\n      })\n\n      // Changing the URL doesn't block executing the current code path.\n      // So let's throw a cancellation error stop the routing logic.\n      throw buildCancellationError()\n    }\n\n    console.error(err)\n\n    try {\n      let props: Record<string, any> | undefined\n      const { page: Component, styleSheets } =\n        await this.fetchComponent('/_error')\n\n      const routeInfo: CompletePrivateRouteInfo = {\n        props,\n        Component,\n        styleSheets,\n        err,\n        error: err,\n      }\n\n      if (!routeInfo.props) {\n        try {\n          routeInfo.props = await this.getInitialProps(Component, {\n            err,\n            pathname,\n            query,\n          } as any)\n        } catch (gipErr) {\n          console.error('Error in error page `getInitialProps`: ', gipErr)\n          routeInfo.props = {}\n        }\n      }\n\n      return routeInfo\n    } catch (routeInfoErr) {\n      return this.handleRouteInfoError(\n        isError(routeInfoErr) ? routeInfoErr : new Error(routeInfoErr + ''),\n        pathname,\n        query,\n        as,\n        routeProps,\n        true\n      )\n    }\n  }\n\n  async getRouteInfo({\n    route: requestedRoute,\n    pathname,\n    query,\n    as,\n    resolvedAs,\n    routeProps,\n    locale,\n    hasMiddleware,\n    isPreview,\n    unstable_skipClientCache,\n    isQueryUpdating,\n    isMiddlewareRewrite,\n    isNotFound,\n  }: {\n    route: string\n    pathname: string\n    query: ParsedUrlQuery\n    as: string\n    resolvedAs: string\n    hasMiddleware?: boolean\n    routeProps: RouteProperties\n    locale: string | undefined\n    isPreview: boolean\n    unstable_skipClientCache?: boolean\n    isQueryUpdating?: boolean\n    isMiddlewareRewrite?: boolean\n    isNotFound?: boolean\n  }) {\n    /**\n     * This `route` binding can change if there's a rewrite\n     * so we keep a reference to the original requested route\n     * so we can store the cache for it and avoid re-requesting every time\n     * for shallow routing purposes.\n     */\n    let route = requestedRoute\n\n    try {\n      let existingInfo: PrivateRouteInfo | undefined = this.components[route]\n      if (routeProps.shallow && existingInfo && this.route === route) {\n        return existingInfo\n      }\n\n      const handleCancelled = getCancelledHandler({ route, router: this })\n\n      if (hasMiddleware) {\n        existingInfo = undefined\n      }\n\n      let cachedRouteInfo =\n        existingInfo &&\n        !('initial' in existingInfo) &&\n        process.env.NODE_ENV !== 'development'\n          ? existingInfo\n          : undefined\n\n      const isBackground = isQueryUpdating\n      const fetchNextDataParams: FetchNextDataParams = {\n        dataHref: this.pageLoader.getDataHref({\n          href: formatWithValidation({ pathname, query }),\n          skipInterpolation: true,\n          asPath: isNotFound ? '/404' : resolvedAs,\n          locale,\n        }),\n        hasMiddleware: true,\n        isServerRender: this.isSsr,\n        parseJSON: true,\n        inflightCache: isBackground ? this.sbc : this.sdc,\n        persistCache: !isPreview,\n        isPrefetch: false,\n        unstable_skipClientCache,\n        isBackground,\n      }\n\n      let data:\n        | WithMiddlewareEffectsOutput\n        | (Pick<WithMiddlewareEffectsOutput, 'json'> &\n            Omit<Partial<WithMiddlewareEffectsOutput>, 'json'>)\n        | null =\n        isQueryUpdating && !isMiddlewareRewrite\n          ? null\n          : await withMiddlewareEffects({\n              fetchData: () => fetchNextData(fetchNextDataParams),\n              asPath: isNotFound ? '/404' : resolvedAs,\n              locale: locale,\n              router: this,\n            }).catch((err) => {\n              // we don't hard error during query updating\n              // as it's un-necessary and doesn't need to be fatal\n              // unless it is a fallback route and the props can't\n              // be loaded\n              if (isQueryUpdating) {\n                return null\n              }\n              throw err\n            })\n\n      // when rendering error routes we don't apply middleware\n      // effects\n      if (data && (pathname === '/_error' || pathname === '/404')) {\n        data.effect = undefined\n      }\n\n      if (isQueryUpdating) {\n        if (!data) {\n          data = { json: self.__NEXT_DATA__.props }\n        } else {\n          data.json = self.__NEXT_DATA__.props\n        }\n      }\n\n      handleCancelled()\n\n      if (\n        data?.effect?.type === 'redirect-internal' ||\n        data?.effect?.type === 'redirect-external'\n      ) {\n        return data.effect\n      }\n\n      if (data?.effect?.type === 'rewrite') {\n        const resolvedRoute = removeTrailingSlash(data.effect.resolvedHref)\n        const pages = await this.pageLoader.getPageList()\n\n        // during query updating the page must match although during\n        // client-transition a redirect that doesn't match a page\n        // can be returned and this should trigger a hard navigation\n        // which is valid for incremental migration\n        if (!isQueryUpdating || pages.includes(resolvedRoute)) {\n          route = resolvedRoute\n          pathname = data.effect.resolvedHref\n          query = { ...query, ...data.effect.parsedAs.query }\n          resolvedAs = removeBasePath(\n            normalizeLocalePath(data.effect.parsedAs.pathname, this.locales)\n              .pathname\n          )\n\n          // Check again the cache with the new destination.\n          existingInfo = this.components[route]\n          if (\n            routeProps.shallow &&\n            existingInfo &&\n            this.route === route &&\n            !hasMiddleware\n          ) {\n            // If we have a match with the current route due to rewrite,\n            // we can copy the existing information to the rewritten one.\n            // Then, we return the information along with the matched route.\n            return { ...existingInfo, route }\n          }\n        }\n      }\n\n      if (isAPIRoute(route)) {\n        handleHardNavigation({ url: as, router: this })\n        return new Promise<never>(() => {})\n      }\n\n      const routeInfo =\n        cachedRouteInfo ||\n        (await this.fetchComponent(route).then<CompletePrivateRouteInfo>(\n          (res) => ({\n            Component: res.page,\n            styleSheets: res.styleSheets,\n            __N_SSG: res.mod.__N_SSG,\n            __N_SSP: res.mod.__N_SSP,\n          })\n        ))\n\n      if (process.env.NODE_ENV !== 'production') {\n        const { isValidElementType } =\n          require('next/dist/compiled/react-is') as typeof import('next/dist/compiled/react-is')\n        if (!isValidElementType(routeInfo.Component)) {\n          throw new Error(\n            `The default export is not a React Component in page: \"${pathname}\"`\n          )\n        }\n      }\n      const wasBailedPrefetch = data?.response?.headers.get('x-middleware-skip')\n\n      const shouldFetchData = routeInfo.__N_SSG || routeInfo.__N_SSP\n\n      // For non-SSG prefetches that bailed before sending data\n      // we clear the cache to fetch full response\n      if (wasBailedPrefetch && data?.dataHref) {\n        delete this.sdc[data.dataHref]\n      }\n\n      const { props, cacheKey } = await this._getData(async () => {\n        if (shouldFetchData) {\n          if (data?.json && !wasBailedPrefetch) {\n            return { cacheKey: data.cacheKey, props: data.json }\n          }\n\n          const dataHref = data?.dataHref\n            ? data.dataHref\n            : this.pageLoader.getDataHref({\n                href: formatWithValidation({ pathname, query }),\n                asPath: resolvedAs,\n                locale,\n              })\n\n          const fetched = await fetchNextData({\n            dataHref,\n            isServerRender: this.isSsr,\n            parseJSON: true,\n            inflightCache: wasBailedPrefetch ? {} : this.sdc,\n            persistCache: !isPreview,\n            isPrefetch: false,\n            unstable_skipClientCache,\n          })\n\n          return {\n            cacheKey: fetched.cacheKey,\n            props: fetched.json || {},\n          }\n        }\n\n        return {\n          headers: {},\n          props: await this.getInitialProps(\n            routeInfo.Component,\n            // we provide AppTree later so this needs to be `any`\n            {\n              pathname,\n              query,\n              asPath: as,\n              locale,\n              locales: this.locales,\n              defaultLocale: this.defaultLocale,\n            } as any\n          ),\n        }\n      })\n\n      // Only bust the data cache for SSP routes although\n      // middleware can skip cache per request with\n      // x-middleware-cache: no-cache as well\n      if (routeInfo.__N_SSP && fetchNextDataParams.dataHref && cacheKey) {\n        delete this.sdc[cacheKey]\n      }\n\n      // we kick off a HEAD request in the background\n      // when a non-prefetch request is made to signal revalidation\n      if (\n        !this.isPreview &&\n        routeInfo.__N_SSG &&\n        process.env.NODE_ENV !== 'development' &&\n        !isQueryUpdating\n      ) {\n        fetchNextData(\n          Object.assign({}, fetchNextDataParams, {\n            isBackground: true,\n            persistCache: false,\n            inflightCache: this.sbc,\n          })\n        ).catch(() => {})\n      }\n\n      props.pageProps = Object.assign({}, props.pageProps)\n      routeInfo.props = props\n      routeInfo.route = route\n      routeInfo.query = query\n      routeInfo.resolvedAs = resolvedAs\n      this.components[route] = routeInfo\n\n      return routeInfo\n    } catch (err) {\n      return this.handleRouteInfoError(\n        getProperError(err),\n        pathname,\n        query,\n        as,\n        routeProps\n      )\n    }\n  }\n\n  private set(\n    state: typeof this.state,\n    data: PrivateRouteInfo,\n    resetScroll: { x: number; y: number } | null\n  ): Promise<void> {\n    this.state = state\n\n    return this.sub(\n      data,\n      this.components['/_app'].Component as AppComponent,\n      resetScroll\n    )\n  }\n\n  /**\n   * Callback to execute before replacing router state\n   * @param cb callback to be executed\n   */\n  beforePopState(cb: BeforePopStateCallback) {\n    this._bps = cb\n  }\n\n  onlyAHashChange(as: string): boolean {\n    if (!this.asPath) return false\n    const [oldUrlNoHash, oldHash] = this.asPath.split('#', 2)\n    const [newUrlNoHash, newHash] = as.split('#', 2)\n\n    // Makes sure we scroll to the provided hash if the url/hash are the same\n    if (newHash && oldUrlNoHash === newUrlNoHash && oldHash === newHash) {\n      return true\n    }\n\n    // If the urls are change, there's more than a hash change\n    if (oldUrlNoHash !== newUrlNoHash) {\n      return false\n    }\n\n    // If the hash has changed, then it's a hash only change.\n    // This check is necessary to handle both the enter and\n    // leave hash === '' cases. The identity case falls through\n    // and is treated as a next reload.\n    return oldHash !== newHash\n  }\n\n  scrollToHash(as: string): void {\n    const [, hash = ''] = as.split('#', 2)\n\n    disableSmoothScrollDuringRouteTransition(\n      () => {\n        // Scroll to top if the hash is just `#` with no value or `#top`\n        // To mirror browsers\n        if (hash === '' || hash === 'top') {\n          window.scrollTo(0, 0)\n          return\n        }\n\n        // Decode hash to make non-latin anchor works.\n        const rawHash = decodeURIComponent(hash)\n        // First we check if the element by id is found\n        const idEl = document.getElementById(rawHash)\n        if (idEl) {\n          idEl.scrollIntoView()\n          return\n        }\n        // If there's no element with the id, we check the `name` property\n        // To mirror browsers\n        const nameEl = document.getElementsByName(rawHash)[0]\n        if (nameEl) {\n          nameEl.scrollIntoView()\n        }\n      },\n      {\n        onlyHashChange: this.onlyAHashChange(as),\n      }\n    )\n  }\n\n  urlIsNew(asPath: string): boolean {\n    return this.asPath !== asPath\n  }\n\n  /**\n   * Prefetch page code, you may wait for the data during page rendering.\n   * This feature only works in production!\n   * @param url the href of prefetched page\n   * @param asPath the as path of the prefetched page\n   */\n  async prefetch(\n    url: string,\n    asPath: string = url,\n    options: PrefetchOptions = {}\n  ): Promise<void> {\n    // Prefetch is not supported in development mode because it would trigger on-demand-entries\n    if (process.env.NODE_ENV !== 'production') {\n      return\n    }\n\n    if (typeof window !== 'undefined' && isBot(window.navigator.userAgent)) {\n      // No prefetches for bots that render the link since they are typically navigating\n      // links via the equivalent of a hard navigation and hence never utilize these\n      // prefetches.\n      return\n    }\n    let parsed = parseRelativeUrl(url)\n    const urlPathname = parsed.pathname\n\n    let { pathname, query } = parsed\n    const originalPathname = pathname\n\n    if (process.env.__NEXT_I18N_SUPPORT) {\n      if (options.locale === false) {\n        pathname = normalizeLocalePath!(pathname, this.locales).pathname\n        parsed.pathname = pathname\n        url = formatWithValidation(parsed)\n\n        let parsedAs = parseRelativeUrl(asPath)\n        const localePathResult = normalizeLocalePath!(\n          parsedAs.pathname,\n          this.locales\n        )\n        parsedAs.pathname = localePathResult.pathname\n        options.locale = localePathResult.detectedLocale || this.defaultLocale\n        asPath = formatWithValidation(parsedAs)\n      }\n    }\n\n    const pages = await this.pageLoader.getPageList()\n    let resolvedAs = asPath\n\n    const locale =\n      typeof options.locale !== 'undefined'\n        ? options.locale || undefined\n        : this.locale\n\n    const isMiddlewareMatch = await matchesMiddleware({\n      asPath: asPath,\n      locale: locale,\n      router: this,\n    })\n\n    if (process.env.__NEXT_HAS_REWRITES && asPath.startsWith('/')) {\n      let rewrites: any\n      ;({ __rewrites: rewrites } = await getClientBuildManifest())\n\n      const rewritesResult = resolveRewrites(\n        addBasePath(addLocale(asPath, this.locale), true),\n        pages,\n        rewrites,\n        parsed.query,\n        (p: string) => resolveDynamicRoute(p, pages),\n        this.locales\n      )\n\n      if (rewritesResult.externalDest) {\n        return\n      }\n\n      if (!isMiddlewareMatch) {\n        resolvedAs = removeLocale(\n          removeBasePath(rewritesResult.asPath),\n          this.locale\n        )\n      }\n\n      if (rewritesResult.matchedPage && rewritesResult.resolvedHref) {\n        // if this directly matches a page we need to update the href to\n        // allow the correct page chunk to be loaded\n        pathname = rewritesResult.resolvedHref\n        parsed.pathname = pathname\n\n        if (!isMiddlewareMatch) {\n          url = formatWithValidation(parsed)\n        }\n      }\n    }\n    parsed.pathname = resolveDynamicRoute(parsed.pathname, pages)\n\n    if (isDynamicRoute(parsed.pathname)) {\n      pathname = parsed.pathname\n      parsed.pathname = pathname\n      Object.assign(\n        query,\n        getRouteMatcher(getRouteRegex(parsed.pathname))(\n          parsePath(asPath).pathname\n        ) || {}\n      )\n\n      if (!isMiddlewareMatch) {\n        url = formatWithValidation(parsed)\n      }\n    }\n\n    const data =\n      process.env.__NEXT_MIDDLEWARE_PREFETCH === 'strict'\n        ? null\n        : await withMiddlewareEffects({\n            fetchData: () =>\n              fetchNextData({\n                dataHref: this.pageLoader.getDataHref({\n                  href: formatWithValidation({\n                    pathname: originalPathname,\n                    query,\n                  }),\n                  skipInterpolation: true,\n                  asPath: resolvedAs,\n                  locale,\n                }),\n                hasMiddleware: true,\n                isServerRender: false,\n                parseJSON: true,\n                inflightCache: this.sdc,\n                persistCache: !this.isPreview,\n                isPrefetch: true,\n              }),\n            asPath: asPath,\n            locale: locale,\n            router: this,\n          })\n\n    /**\n     * If there was a rewrite we apply the effects of the rewrite on the\n     * current parameters for the prefetch.\n     */\n    if (data?.effect.type === 'rewrite') {\n      parsed.pathname = data.effect.resolvedHref\n      pathname = data.effect.resolvedHref\n      query = { ...query, ...data.effect.parsedAs.query }\n      resolvedAs = data.effect.parsedAs.pathname\n      url = formatWithValidation(parsed)\n    }\n\n    /**\n     * If there is a redirect to an external destination then we don't have\n     * to prefetch content as it will be unused.\n     */\n    if (data?.effect.type === 'redirect-external') {\n      return\n    }\n\n    const route = removeTrailingSlash(pathname)\n\n    if (await this._bfl(asPath, resolvedAs, options.locale, true)) {\n      this.components[urlPathname] = { __appRouter: true } as any\n    }\n\n    await Promise.all([\n      this.pageLoader._isSsg(route).then((isSsg) => {\n        return isSsg\n          ? fetchNextData({\n              dataHref: data?.json\n                ? data?.dataHref\n                : this.pageLoader.getDataHref({\n                    href: url,\n                    asPath: resolvedAs,\n                    locale: locale,\n                  }),\n              isServerRender: false,\n              parseJSON: true,\n              inflightCache: this.sdc,\n              persistCache: !this.isPreview,\n              isPrefetch: true,\n              unstable_skipClientCache:\n                options.unstable_skipClientCache ||\n                (options.priority &&\n                  !!process.env.__NEXT_OPTIMISTIC_CLIENT_CACHE),\n            })\n              .then(() => false)\n              .catch(() => false)\n          : false\n      }),\n      this.pageLoader[options.priority ? 'loadPage' : 'prefetch'](route),\n    ])\n  }\n\n  async fetchComponent(route: string) {\n    const handleCancelled = getCancelledHandler({ route, router: this })\n\n    try {\n      const componentResult = await this.pageLoader.loadPage(route)\n      handleCancelled()\n\n      return componentResult\n    } catch (err) {\n      handleCancelled()\n      throw err\n    }\n  }\n\n  _getData<T>(fn: () => Promise<T>): Promise<T> {\n    let cancelled = false\n    const cancel = () => {\n      cancelled = true\n    }\n    this.clc = cancel\n    return fn().then((data) => {\n      if (cancel === this.clc) {\n        this.clc = null\n      }\n\n      if (cancelled) {\n        const err: any = new Error('Loading initial props cancelled')\n        err.cancelled = true\n        throw err\n      }\n\n      return data\n    })\n  }\n\n  getInitialProps(\n    Component: ComponentType,\n    ctx: NextPageContext\n  ): Promise<Record<string, any>> {\n    const { Component: App } = this.components['/_app']\n    const AppTree = this._wrapApp(App as AppComponent)\n    ctx.AppTree = AppTree\n    return loadGetInitialProps<AppContextType<Router>>(App, {\n      AppTree,\n      Component,\n      router: this,\n      ctx,\n    })\n  }\n\n  get route(): string {\n    return this.state.route\n  }\n\n  get pathname(): string {\n    return this.state.pathname\n  }\n\n  get query(): ParsedUrlQuery {\n    return this.state.query\n  }\n\n  get asPath(): string {\n    return this.state.asPath\n  }\n\n  get locale(): string | undefined {\n    return this.state.locale\n  }\n\n  get isFallback(): boolean {\n    return this.state.isFallback\n  }\n\n  get isPreview(): boolean {\n    return this.state.isPreview\n  }\n}\n","module.exports = (\n  require('../../module.compiled') as typeof import('../../module.compiled')\n).vendored['contexts'].RouterContext\n","import React, { type JSX } from 'react'\nimport type {\n  BaseContext,\n  NextComponentType,\n  NextPageContext,\n} from '../shared/lib/utils'\nimport type { NextRouter } from './router'\nimport { useRouter } from './router'\n\nexport type WithRouterProps = {\n  router: NextRouter\n}\n\nexport type ExcludeRouterProps<P> = Pick<\n  P,\n  Exclude<keyof P, keyof WithRouterProps>\n>\n\nexport default function withRouter<\n  P extends WithRouterProps,\n  C extends BaseContext = NextPageContext,\n>(\n  ComposedComponent: NextComponentType<C, any, P>\n): React.ComponentType<ExcludeRouterProps<P>> {\n  function WithRouterWrapper(props: any): JSX.Element {\n    return <ComposedComponent router={useRouter()} {...props} />\n  }\n\n  WithRouterWrapper.getInitialProps = ComposedComponent.getInitialProps\n  // This is needed to allow checking for custom getInitialProps in _app\n  ;(WithRouterWrapper as any).origGetInitialProps = (\n    ComposedComponent as any\n  ).origGetInitialProps\n  if (process.env.NODE_ENV !== 'production') {\n    const name =\n      ComposedComponent.displayName || ComposedComponent.name || 'Unknown'\n    WithRouterWrapper.displayName = `withRouter(${name})`\n  }\n\n  return WithRouterWrapper\n}\n","/* global window */\nimport React from 'react'\nimport Router from '../shared/lib/router/router'\nimport type { NextRouter } from '../shared/lib/router/router'\nimport { RouterContext } from '../shared/lib/router-context.shared-runtime'\nimport isError from '../lib/is-error'\n\ntype SingletonRouterBase = {\n  router: Router | null\n  readyCallbacks: Array<() => any>\n  ready(cb: () => any): void\n}\n\nexport { Router }\n\nexport type { NextRouter }\n\nexport type SingletonRouter = SingletonRouterBase & NextRouter\n\nconst singletonRouter: SingletonRouterBase = {\n  router: null, // holds the actual router instance\n  readyCallbacks: [],\n  ready(callback: () => void) {\n    if (this.router) return callback()\n    if (typeof window !== 'undefined') {\n      this.readyCallbacks.push(callback)\n    }\n  },\n}\n\n// Create public properties and methods of the router in the singletonRouter\nconst urlPropertyFields = [\n  'pathname',\n  'route',\n  'query',\n  'asPath',\n  'components',\n  'isFallback',\n  'basePath',\n  'locale',\n  'locales',\n  'defaultLocale',\n  'isReady',\n  'isPreview',\n  'isLocaleDomain',\n  'domainLocales',\n] as const\nconst routerEvents = [\n  'routeChangeStart',\n  'beforeHistoryChange',\n  'routeChangeComplete',\n  'routeChangeError',\n  'hashChangeStart',\n  'hashChangeComplete',\n] as const\nexport type RouterEvent = (typeof routerEvents)[number]\n\nconst coreMethodFields = [\n  'push',\n  'replace',\n  'reload',\n  'back',\n  'prefetch',\n  'beforePopState',\n] as const\n\n// Events is a static property on the router, the router doesn't have to be initialized to use it\nObject.defineProperty(singletonRouter, 'events', {\n  get() {\n    return Router.events\n  },\n})\n\nfunction getRouter(): Router {\n  if (!singletonRouter.router) {\n    const message =\n      'No router instance found.\\n' +\n      'You should only use \"next/router\" on the client side of your app.\\n'\n    throw new Error(message)\n  }\n  return singletonRouter.router\n}\n\nurlPropertyFields.forEach((field) => {\n  // Here we need to use Object.defineProperty because we need to return\n  // the property assigned to the actual router\n  // The value might get changed as we change routes and this is the\n  // proper way to access it\n  Object.defineProperty(singletonRouter, field, {\n    get() {\n      const router = getRouter()\n      return router[field] as string\n    },\n  })\n})\n\ncoreMethodFields.forEach((field) => {\n  // We don't really know the types here, so we add them later instead\n  ;(singletonRouter as any)[field] = (...args: any[]) => {\n    const router = getRouter() as any\n    return router[field](...args)\n  }\n})\n\nrouterEvents.forEach((event) => {\n  singletonRouter.ready(() => {\n    Router.events.on(event, (...args) => {\n      const eventField = `on${event.charAt(0).toUpperCase()}${event.substring(\n        1\n      )}`\n      const _singletonRouter = singletonRouter as any\n      if (_singletonRouter[eventField]) {\n        try {\n          _singletonRouter[eventField](...args)\n        } catch (err) {\n          console.error(`Error when running the Router event: ${eventField}`)\n          console.error(\n            isError(err) ? `${err.message}\\n${err.stack}` : err + ''\n          )\n        }\n      }\n    })\n  })\n})\n\n// Export the singletonRouter and this is the public API.\nexport default singletonRouter as SingletonRouter\n\n// Reexport the withRouter HOC\nexport { default as withRouter } from './with-router'\n\n/**\n * This hook gives access the [router object](https://nextjs.org/docs/pages/api-reference/functions/use-router#router-object)\n * inside the [Pages Router](https://nextjs.org/docs/pages/building-your-application).\n *\n * Read more: [Next.js Docs: `useRouter`](https://nextjs.org/docs/pages/api-reference/functions/use-router)\n */\nexport function useRouter(): NextRouter {\n  const router = React.useContext(RouterContext)\n  if (!router) {\n    throw new Error(\n      'NextRouter was not mounted. https://nextjs.org/docs/messages/next-router-not-mounted'\n    )\n  }\n\n  return router\n}\n\n/**\n * Create a router and assign it as the singleton instance.\n * This is used in client side when we are initializing the app.\n * This should **not** be used inside the server.\n * @internal\n */\nexport function createRouter(\n  ...args: ConstructorParameters<typeof Router>\n): Router {\n  singletonRouter.router = new Router(...args)\n  singletonRouter.readyCallbacks.forEach((cb) => cb())\n  singletonRouter.readyCallbacks = []\n\n  return singletonRouter.router\n}\n\n/**\n * This function is used to create the `withRouter` router instance\n * @internal\n */\nexport function makePublicRouterInstance(router: Router): NextRouter {\n  const scopedRouter = router as any\n  const instance = {} as any\n\n  for (const property of urlPropertyFields) {\n    if (typeof scopedRouter[property] === 'object') {\n      instance[property] = Object.assign(\n        Array.isArray(scopedRouter[property]) ? [] : {},\n        scopedRouter[property]\n      ) // makes sure query is not stateful\n      continue\n    }\n\n    instance[property] = scopedRouter[property]\n  }\n\n  // Events is a static property on the router, the router doesn't have to be initialized to use it\n  instance.events = Router.events\n\n  coreMethodFields.forEach((field) => {\n    instance[field] = (...args: any[]) => {\n      return scopedRouter[field](...args)\n    }\n  })\n\n  return instance\n}\n","module.exports = require('./dist/client/router')\n"],"names":["BloomFilter","murmurhash2","str","h","i","length","c","charCodeAt","Math","imul","DEFAULT_ERROR_RATE","constructor","numItems","errorRate","numBits","ceil","log","numHashes","bitArray","Array","fill","from","items","filter","item","add","export","data","process","env","NEXT_RUNTIME","filterData","JSON","stringify","gzipSize","require","sync","console","warn","import","hashValues","getHashValues","forEach","hash","contains","every","push","removeTrailingSlash","route","replace","getAssetPathFromRoute","ext","path","test","__unsafeCreateTrustedScriptURL","policy","getPolicy","window","trustedTypes","createPolicy","createHTML","input","createScript","createScriptURL","url","cancelIdleCallback","requestIdleCallback","self","bind","cb","start","Date","now","setTimeout","didTimeout","timeRemaining","max","id","clearTimeout","getDeploymentIdQueryOrEmptyString","NEXT_DEPLOYMENT_ID","createRouteLoader","getClientBuildManifest","isAssetError","markAssetError","MS_MAX_IDLE_DELAY","withFuture","key","map","generator","entry","get","future","Promise","resolve","resolver","prom","set","then","value","catch","err","delete","ASSET_LOAD_ERROR","Symbol","Object","defineProperty","hasPrefetch","link","document","createElement","MSInputMethodContext","documentMode","relList","supports","canPrefetch","getAssetQueryString","prefetchViaDom","href","as","reject","selector","querySelector","rel","crossOrigin","__NEXT_CROSS_ORIGIN","onload","onerror","Error","head","appendChild","appendScript","src","script","body","devBuildPromise","resolvePromiseWithTimeout","p","ms","cancelled","r","NODE_ENV","__BUILD_MANIFEST","onBuildManifest","__BUILD_MANIFEST_CB","getFilesForRoute","assetPrefix","scriptUrl","encodeURIPath","scripts","css","manifest","allFiles","v","endsWith","entrypoints","Map","loadedScripts","styleSheets","routes","maybeExecuteScript","toString","fetchStyleSheet","fetch","credentials","res","ok","text","content","whenEntrypoint","onEntrypoint","execute","exports","component","default","error","undefined","old","loadRoute","prefetch","devBuildPromiseResolve","all","has","entrypoint","styles","assign","finally","cn","navigator","connection","saveData","effectiveType","output","setAttributesFromProps","DOMAttributeNames","acceptCharset","className","htmlFor","httpEquiv","noModule","ignoreProps","isBooleanScriptAttribute","attr","includes","el","props","entries","hasOwnProperty","toLowerCase","tagName","setAttribute","String","removeAttribute","handleClientScriptLoad","initScriptLoader","ScriptCache","LoadCache","Set","insertStylesheets","stylesheets","ReactDOM","preinit","stylesheet","type","loadScript","onLoad","onReady","dangerouslySetInnerHTML","children","strategy","onError","cacheKey","afterLoad","loadPromise","addEventListener","e","call","innerHTML","__html","textContent","isArray","join","loadLazyScript","readyState","addBeforeInteractiveToCache","querySelectorAll","getAttribute","scriptLoaderItems","Script","restProps","updateScripts","getIsSsr","appDir","nonce","useContext","HeadManagerContext","hasOnReadyEffectCalled","useRef","useEffect","current","hasLoadScriptEffectCalled","concat","styleSrc","preload","integrity","normalizeLocalePath","cache","WeakMap","pathname","locales","lowercasedLocales","locale","detectedLocale","segments","split","segment","index","indexOf","slice","mitt","create","on","handler","off","splice","emit","evts","searchParamsToUrlQuery","urlQueryToSearchParams","searchParams","query","existing","stringifyUrlQueryParam","param","isNaN","URLSearchParams","append","target","searchParamsList","keys","parseRelativeUrl","base","parseQuery","globalBase","URL","getLocationOrigin","resolvedBase","startsWith","location","search","origin","slashes","PARAM_SEPARATOR","hasAdjacentParameterIssues","normalizeAdjacentParameters","normalizeTokensForRegexp","stripNormalizedSeparators","stripParameterSeparators","normalized","tokens","token","modifier","prefix","suffix","RegExp","params","cleaned","safeCompile","safePathToRegexp","safeRegexpToFunction","safeRouteMatcher","options","pathToRegexp","needsNormalization","routeToUse","normalizedRoute","retryError","compiler","compile","regexp","originalMatcher","regexpToFunction","result","matcherFn","getRouteMatcher","re","groups","rawMatcher","routeMatch","exec","decode","decodeURIComponent","DecodeError","group","match","pos","repeat","ACTION_SUFFIX","APP_DIR_ALIAS","CACHE_ONE_YEAR","DOT_NEXT_ALIAS","ESLINT_DEFAULT_DIRS","GSP_NO_RETURNED_VALUE","GSSP_COMPONENT_MEMBER_ERROR","GSSP_NO_RETURNED_VALUE","HTML_CONTENT_TYPE_HEADER","INFINITE_CACHE","INSTRUMENTATION_HOOK_FILENAME","JSON_CONTENT_TYPE_HEADER","MATCHED_PATH_HEADER","MIDDLEWARE_FILENAME","MIDDLEWARE_LOCATION_REGEXP","NEXT_BODY_SUFFIX","NEXT_CACHE_IMPLICIT_TAG_ID","NEXT_CACHE_REVALIDATED_TAGS_HEADER","NEXT_CACHE_REVALIDATE_TAG_TOKEN_HEADER","NEXT_CACHE_SOFT_TAG_MAX_LENGTH","NEXT_CACHE_TAGS_HEADER","NEXT_CACHE_TAG_MAX_ITEMS","NEXT_CACHE_TAG_MAX_LENGTH","NEXT_DATA_SUFFIX","NEXT_INTERCEPTION_MARKER_PREFIX","NEXT_META_SUFFIX","NEXT_QUERY_PARAM_PREFIX","NEXT_RESUME_HEADER","NON_STANDARD_NODE_ENV","PAGES_DIR_ALIAS","PRERENDER_REVALIDATE_HEADER","PRERENDER_REVALIDATE_ONLY_GENERATED_HEADER","PROXY_FILENAME","PROXY_LOCATION_REGEXP","PUBLIC_DIR_MIDDLEWARE_CONFLICT","ROOT_DIR_ALIAS","RSC_ACTION_CLIENT_WRAPPER_ALIAS","RSC_ACTION_ENCRYPTION_ALIAS","RSC_ACTION_PROXY_ALIAS","RSC_ACTION_VALIDATE_ALIAS","RSC_CACHE_WRAPPER_ALIAS","RSC_DYNAMIC_IMPORT_WRAPPER_ALIAS","RSC_MOD_REF_PROXY_ALIAS","RSC_PREFETCH_SUFFIX","RSC_SEGMENTS_DIR_SUFFIX","RSC_SEGMENT_SUFFIX","RSC_SUFFIX","SERVER_PROPS_EXPORT_ERROR","SERVER_PROPS_GET_INIT_PROPS_CONFLICT","SERVER_PROPS_SSG_CONFLICT","SERVER_RUNTIME","SSG_FALLBACK_EXPORT_ERROR","SSG_GET_INITIAL_PROPS_CONFLICT","STATIC_STATUS_PAGE_GET_INITIAL_PROPS_ERROR","TEXT_PLAIN_CONTENT_TYPE_HEADER","UNSTABLE_REVALIDATE_RENAME_ERROR","WEBPACK_LAYERS","WEBPACK_RESOURCE_QUERIES","WEB_SOCKET_MAX_RECONNECTIONS","edge","experimentalEdge","nodejs","WEBPACK_LAYERS_NAMES","shared","reactServerComponents","serverSideRendering","actionBrowser","apiNode","apiEdge","middleware","instrument","edgeAsset","appPagesBrowser","pagesDirBrowser","pagesDirEdge","pagesDirNode","GROUP","builtinReact","serverOnly","neutralTarget","clientOnly","bundled","appPages","edgeSSREntry","metadata","metadataRoute","metadataImageMeta","escapeStringRegexp","reHasRegExp","reReplaceRegExp","InvariantError","message","name","parseLoaderTree","tree","parallelRoutes","modules","layout","template","page","DEFAULT_SEGMENT_KEY","defaultPage","conventionPath","getParamProperties","getSegmentParam","isCatchAll","interceptionMarker","INTERCEPTION_ROUTE_MARKERS","find","marker","paramType","optional","PARAMETER_PATTERN","getDynamicParam","interpolateParallelRouteParams","parseMatchedParameter","parseParameter","getParamValue","interpolatedParams","segmentKey","fallbackRouteParams","searchValue","encodeURIComponent","loaderTree","pagePath","interpolated","structuredClone","stack","depth","pathSegments","pop","segmentParam","remainingSegments","processedSegments","flatMap","pathSegment","s","nextDepth","isRouteGroup","values","dynamicParamType","treeSegment","getNamedMiddlewareRegex","getNamedRouteRegex","getRouteRegex","getParametrizedRoute","includeSuffix","includePrefix","groupIndex","markerMatch","m","paramMatches","substring","parameterizedRoute","excludeOptionalTrailingSlash","buildGetSafeRouteKey","routeKey","j","fromCharCode","floor","getSafeKeyFromSegment","getSafeRouteKey","routeKeys","keyPrefix","backreferenceDuplicateKeys","cleanedKey","invalidKey","parseInt","duplicateKey","interceptionPrefix","pattern","getNamedParametrizedRoute","prefixRouteKeys","reference","names","intercepted","inverseParts","hasInterceptionMarker","some","namedParameterizedRoute","pathToRegexpPattern","namedRegex","catchAll","catchAllRegex","catchAllGroupedRegex","formatUrl","formatWithValidation","urlObjectKeys","slashedProtocols","urlObj","auth","hostname","protocol","host","port","querystring","detectDomainLocale","args","__NEXT_I18N_SUPPORT","parsePath","hashIndex","queryIndex","hasQuery","normalizePathTrailingSlash","__NEXT_MANUAL_TRAILING_SLASH","__NEXT_TRAILING_SLASH","addLocale","removeLocale","pathLower","localeLower","pathHasPrefix","hasBasePath","basePath","__NEXT_ROUTER_BASEPATH","removeBasePath","__NEXT_MANUAL_CLIENT_BASE_PATH","addPathPrefix","addBasePath","required","omit","object","omitted","isLocalURL","isAbsoluteUrl","locationOrigin","resolved","_","interpolateAs","asPathname","interpolatedRoute","dynamicRegex","dynamicGroups","dynamicMatches","replaced","resolveHref","router","resolveAs","urlAsString","urlProtoMatch","urlAsStringNoProto","urlParts","normalizedUrl","normalizeRepeatedSlashes","baseBase","asPath","isDynamicRoute","routeRegex","finalUrl","interpolatedAs","resolvedHref","isAPIRoute","Boolean","removePathPrefix","withoutPrefix","getNextPathnameInfo","i18n","trailingSlash","nextConfig","info","pathnameNoDataPrefix","paths","buildId","parseData","i18nProvider","analyze","addPathSuffix","defaultLocale","ignorePrefix","lower","formatNextPathnameInfo","compareRouterStates","a","b","stateKeys","queryKeys","queryKey","HTML_LIMITED_BOT_UA_RE","HTML_LIMITED_BOT_UA_RE_STRING","getBotType","isBot","HEADLESS_BROWSER_BOT_UA_RE","source","isDomBotUA","userAgent","isHtmlLimitedBotUA","disableSmoothScrollDuringRouteTransition","fn","onlyHashChange","htmlElement","documentElement","hasDataAttribute","dataset","scrollBehavior","getComputedStyle","warnOnce","style","dontForceLayout","getClientRects","createKey","Router","matchesMiddleware","resolveRewrites","__NEXT_HAS_REWRITES","buildCancellationError","matchers","pageLoader","getMiddleware","cleanedAs","asWithBasePathAndLocale","stripOrigin","prepareUrlAs","resolvedAs","hrefWasAbsolute","asWasAbsolute","preparedUrl","preparedAs","resolveDynamicRoute","pages","cleanPathname","denormalizePagePath","getMiddlewareData","response","rewriteHeader","headers","rewriteTarget","matchedPath","__NEXT_EXTERNAL_MIDDLEWARE_REWRITE_RESOLVE","parsedRewriteTarget","pathnameInfo","fsPathname","getPageList","__rewrites","rewrites","parsedSource","matchedPage","parsedAs","resolvedPathname","matches","destination","redirectTarget","newAs","newUrl","withMiddlewareEffects","fetchData","effect","dataHref","json","manualScrollRestoration","__NEXT_SCROLL_RESTORATION","history","sessionStorage","setItem","removeItem","n","SSG_DATA_NOT_FOUND","fetchRetry","attempts","method","status","tryToParseAsJSON","parse","fetchNextData","inflightCache","isPrefetch","hasMiddleware","isServerRender","parseJSON","persistCache","isBackground","unstable_skipClientCache","getData","purpose","notFound","random","handleHardNavigation","getCancelledHandler","cancel","clc","handleCancelled","events","initialProps","App","wrapApp","Component","subscription","isFallback","domainLocales","isPreview","sdc","sbc","isFirstPopStateEvent","_key","onPopState","state","changeState","getURL","__NA","reload","__N","forcedScroll","x","pageXOffset","y","pageYOffset","getItem","isSsr","_bps","change","shallow","_shallow","_h","components","initial","__N_SSG","__N_SSP","autoExportDynamic","__NEXT_DATA__","autoExport","sub","_wrapApp","isLocaleDomain","isReady","gssp","gip","isExperimentalCompile","appGip","gsp","_initialMatchesMiddlewarePromise","_shouldResolveHref","scrollRestoration","back","forward","_bfl","skipNavigate","__NEXT_CLIENT_ROUTER_FILTER_ENABLED","_bfl_s","_bfl_d","staticFilterData","dynamicFilterData","__routerFilterStatic","__routerFilterDynamic","routerFilterSValue","__NEXT_CLIENT_ROUTER_S_FILTER","routerFilterDValue","__NEXT_CLIENT_ROUTER_D_FILTER","matchesBflStatic","matchesBflDynamic","pathsToCheck","curAs","allowMatchCurrent","asNoSlash","asNoSlashLocale","normalizedAS","curAsParts","currentPart","isQueryUpdating","shouldResolveHref","nextState","readyStateChange","prevLocale","localePathResult","didNavigate","detectedDomain","domain","asNoBasePath","http","ST","performance","mark","scroll","routeProps","_inFlightRoute","localeChange","onlyAHashChange","scrollToHash","isError","parsed","urlIsNew","parsedAsPathname","__appRouter","isMiddlewareRewrite","isMiddlewareMatch","rewritesResult","externalDest","shouldInterpolate","missingParams","isErrorRoute","routeInfo","getRouteInfo","cleanedParsedPathname","prefixedAs","rewriteAs","localeResult","curRouteMatch","unstable_scriptLoader","pageProps","__N_REDIRECT","__N_REDIRECT_BASE_PATH","parsedHref","__N_PREVIEW","notFoundRoute","fetchComponent","isNotFound","statusCode","isValidShallowRoute","shouldScroll","resetScroll","upcomingScrollState","upcomingRouterState","canSkipUpdating","lang","hashRegex","handleRouteInfoError","loadErrorFail","getInitialProps","gipErr","routeInfoErr","requestedRoute","existingInfo","cachedRouteInfo","fetchNextDataParams","getDataHref","skipInterpolation","resolvedRoute","mod","isValidElementType","wasBailedPrefetch","shouldFetchData","_getData","fetched","getProperError","beforePopState","oldUrlNoHash","oldHash","newUrlNoHash","newHash","scrollTo","rawHash","idEl","getElementById","scrollIntoView","nameEl","getElementsByName","urlPathname","originalPathname","__NEXT_MIDDLEWARE_PREFETCH","_isSsg","isSsg","priority","__NEXT_OPTIMISTIC_CLIENT_CACHE","componentResult","loadPage","ctx","AppTree","loadGetInitialProps","module","vendored","RouterContext","withRouter","ComposedComponent","WithRouterWrapper","useRouter","origGetInitialProps","displayName","createRouter","makePublicRouterInstance","singletonRouter","readyCallbacks","ready","callback","urlPropertyFields","routerEvents","coreMethodFields","getRouter","field","event","eventField","charAt","toUpperCase","_singletonRouter","React","scopedRouter","instance","property"],"mappings":"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","ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54]}