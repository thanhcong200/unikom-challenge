{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 22, "column": 0}, "map": {"version":3,"sources":["file:///D:/unikom/unikom-challenge/frontend/src/utils/auth.tsx"],"sourcesContent":["'use client'\r\nimport React, { createContext, useContext, useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\n\r\n\r\nconst API_BASE = process.env.NEXT_PUBLIC_API_URL || 'http://localhost:4000/api'\r\n\r\n\r\ntype User = {\r\n    id: number\r\n    first_name: string\r\n    last_name: string\r\n    email: string\r\n}\r\n\r\n\r\ntype AuthContextType = {\r\n    user: User | null\r\n    token: string | null\r\n    login: (email: string, password: string, remember?: boolean) => Promise<void>\r\n    signup: (payload: any) => Promise<void>\r\n    logout: () => Promise<void>\r\n}\r\n\r\n\r\nconst AuthContext = createContext<AuthContextType | undefined>(undefined)\r\n\r\n\r\nexport const AuthProvider: React.FC<{ children: React.ReactNode }> = ({ children }) => {\r\n    const [user, setUser] = useState<User | null>(null)\r\n    const [token, setToken] = useState<string | null>(null);\r\n\r\n    useEffect(() => {\r\n        const t = localStorage.getItem('token') || sessionStorage.getItem('token')\r\n        if (t) {\r\n            setToken(t)\r\n            axios.defaults.headers.common['Authorization'] = `Bearer ${t}`\r\n            axios.get(`${API_BASE}/auth/me`)\r\n                .then(res => setUser(res.data))\r\n                .catch(() => {\r\n                    setToken(null)\r\n                    localStorage.removeItem('token')\r\n                    sessionStorage.removeItem('token')\r\n                })\r\n        }\r\n    }, [])\r\n\r\n    const login = async (email: string, password: string, remember = false) => {\r\n        const res = await axios.post(`${API_BASE}/auth/login`, { email, password })\r\n        const t = res.data?.data?.access_token\r\n        setToken(t)\r\n        localStorage.setItem('token', t)\r\n        const me = await axios.get(`${API_BASE}/auth/me`, { headers: { Authorization: `Bearer ${t}` } })\r\n        setUser(me.data)\r\n    }\r\n\r\n\r\n    const signup = async (payload: any) => {\r\n        await axios.post(`${API_BASE}/auth/signup`, payload)\r\n    }\r\n\r\n\r\n    const logout = async () => {\r\n        try {\r\n            if (token) {\r\n                await axios.post(`${API_BASE}/auth/logout`, {}, { headers: { Authorization: `Bearer ${token}` } })\r\n            }\r\n        } finally {\r\n            setUser(null)\r\n            setToken(null)\r\n            localStorage.removeItem('token')\r\n            sessionStorage.removeItem('token')\r\n        }\r\n    }\r\n\r\n\r\n    return (\r\n        <AuthContext.Provider value={{ user, token, login, signup, logout }}>\r\n            {children}\r\n        </AuthContext.Provider>\r\n    )\r\n}\r\n\r\n\r\nexport const useAuth = () => {\r\n    const ctx = useContext(AuthContext)\r\n    if (!ctx) throw new Error('useAuth must be used within AuthProvider')\r\n    return ctx\r\n}\r\n\r\nexport const localDateToUTCRange = (dateStr: string) => {\r\n    const offset = new Date().getTimezoneOffset()\r\n    const start = new Date(dateStr)\r\n    start.setMinutes(start.getMinutes() - offset)\r\n    const end = new Date(dateStr)\r\n    end.setHours(23, 59, 59, 999)\r\n    end.setMinutes(end.getMinutes() - offset)\r\n    console.log(start.toString(), end.toString())\r\n    return { start: start.toISOString(), end: end.toISOString() }\r\n}"],"names":[],"mappings":";;;;;;;;;AACA;AACA;;;;;AAFA;;;;AAKA,MAAM,WAAW,iEAAmC;AAoBpD,MAAM,4BAAc,IAAA,oHAAa,EAA8B;AAGxD,MAAM,eAAwD,CAAC,EAAE,QAAQ,EAAE;IAC9E,MAAM,CAAC,MAAM,QAAQ,GAAG,IAAA,+GAAQ,EAAc;IAC9C,MAAM,CAAC,OAAO,SAAS,GAAG,IAAA,+GAAQ,EAAgB;IAElD,IAAA,gHAAS,EAAC;QACN,MAAM,IAAI,aAAa,OAAO,CAAC,YAAY,eAAe,OAAO,CAAC;QAClE,IAAI,GAAG;YACH,SAAS;YACT,qHAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,CAAC,gBAAgB,GAAG,CAAC,OAAO,EAAE,GAAG;YAC9D,qHAAK,CAAC,GAAG,CAAC,GAAG,SAAS,QAAQ,CAAC,EAC1B,IAAI,CAAC,CAAA,MAAO,QAAQ,IAAI,IAAI,GAC5B,KAAK,CAAC;gBACH,SAAS;gBACT,aAAa,UAAU,CAAC;gBACxB,eAAe,UAAU,CAAC;YAC9B;QACR;IACJ,GAAG,EAAE;IAEL,MAAM,QAAQ,OAAO,OAAe,UAAkB,WAAW,KAAK;QAClE,MAAM,MAAM,MAAM,qHAAK,CAAC,IAAI,CAAC,GAAG,SAAS,WAAW,CAAC,EAAE;YAAE;YAAO;QAAS;QACzE,MAAM,IAAI,IAAI,IAAI,EAAE,MAAM;QAC1B,SAAS;QACT,aAAa,OAAO,CAAC,SAAS;QAC9B,MAAM,KAAK,MAAM,qHAAK,CAAC,GAAG,CAAC,GAAG,SAAS,QAAQ,CAAC,EAAE;YAAE,SAAS;gBAAE,eAAe,CAAC,OAAO,EAAE,GAAG;YAAC;QAAE;QAC9F,QAAQ,GAAG,IAAI;IACnB;IAGA,MAAM,SAAS,OAAO;QAClB,MAAM,qHAAK,CAAC,IAAI,CAAC,GAAG,SAAS,YAAY,CAAC,EAAE;IAChD;IAGA,MAAM,SAAS;QACX,IAAI;YACA,IAAI,OAAO;gBACP,MAAM,qHAAK,CAAC,IAAI,CAAC,GAAG,SAAS,YAAY,CAAC,EAAE,CAAC,GAAG;oBAAE,SAAS;wBAAE,eAAe,CAAC,OAAO,EAAE,OAAO;oBAAC;gBAAE;YACpG;QACJ,SAAU;YACN,QAAQ;YACR,SAAS;YACT,aAAa,UAAU,CAAC;YACxB,eAAe,UAAU,CAAC;QAC9B;IACJ;IAGA,qBACI,qKAAC,YAAY,QAAQ;QAAC,OAAO;YAAE;YAAM;YAAO;YAAO;YAAQ;QAAO;kBAC7D;;;;;;AAGb;AAGO,MAAM,UAAU;IACnB,MAAM,MAAM,IAAA,iHAAU,EAAC;IACvB,IAAI,CAAC,KAAK,MAAM,IAAI,MAAM;IAC1B,OAAO;AACX;AAEO,MAAM,sBAAsB,CAAC;IAChC,MAAM,SAAS,IAAI,OAAO,iBAAiB;IAC3C,MAAM,QAAQ,IAAI,KAAK;IACvB,MAAM,UAAU,CAAC,MAAM,UAAU,KAAK;IACtC,MAAM,MAAM,IAAI,KAAK;IACrB,IAAI,QAAQ,CAAC,IAAI,IAAI,IAAI;IACzB,IAAI,UAAU,CAAC,IAAI,UAAU,KAAK;IAClC,QAAQ,GAAG,CAAC,MAAM,QAAQ,IAAI,IAAI,QAAQ;IAC1C,OAAO;QAAE,OAAO,MAAM,WAAW;QAAI,KAAK,IAAI,WAAW;IAAG;AAChE","debugId":null}},
    {"offset": {"line": 132, "column": 0}, "map": {"version":3,"sources":["file:///D:/unikom/unikom-challenge/frontend/src/pages/_app.tsx"],"sourcesContent":["import \"../styles/globals.css\";\r\nimport type { AppProps } from 'next/app'\r\nimport { AuthProvider } from '../utils/auth'\r\n\r\n\r\nexport default function MyApp({ Component, pageProps }: AppProps) {\r\n    return (\r\n        <AuthProvider>\r\n            <Component {...pageProps} />\r\n        </AuthProvider>\r\n    )\r\n}"],"names":[],"mappings":";;;;;AAEA;;;;;;;;AAGe,SAAS,MAAM,EAAE,SAAS,EAAE,SAAS,EAAY;IAC5D,qBACI,qKAAC,8HAAY;kBACT,cAAA,qKAAC;YAAW,GAAG,SAAS;;;;;;;;;;;AAGpC","debugId":null}}]
}